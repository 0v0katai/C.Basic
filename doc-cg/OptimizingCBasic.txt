===============================================================================
C.Basicにおける高速化に寄与する最適化について。
===============================================================================
・数式は単純化し二項演算にする。
・If〜IfEndよりも=>を使う。さらにはGoto〜Lblを使う。

ベンチマークプログラム例としてこちらのN queenプログラムを使用します。
http://www.hpmuseum.org/cgi-sys/cgiwrap/hpmuseum/articles.cgi?read=700


--------------------------------------------
fx-9860GIIシリーズ用（構造化プログラム） NQUEEN01.g1m
--------------------------------------------
0->A~Z
8->R
{R,1}->Dim Mat A
0
Do
  Isz X
  R->Mat A[X,1]
  Do
    Isz S
    X->Y
    While Y>1
      Dsz Y
      Mat A[X,1]-Mat A[Y,1]->T
      If T=0 Or X-Y=Abs T
        Then 0->Y
        Mat A[X,1]-1->Mat A[X,1]
        While Mat A[X,1]=0
          Dsz X
          Mat A[X,1]-1->Mat A[X,1]
        WhileEnd
      IfEnd
    WhileEnd
  LpWhile Y<>1
LpWhile X<>R
S
--------------------------------------------
実行時間


--------------------------------------------
fx-9860GIIシリーズ用（非構造化プログラム） NQUEEN02.g1m
--------------------------------------------
      0->A~Z
      8->R
      {R,1}->Dim Mat A
Lbl 0:X=R=>Goto 4
      Isz X
      R->Mat A[X,1]
Lbl 1:Isz S
      X->Y
Lbl 2:Dsz Y:Rad
      Y=0=>Goto 0
      Mat A[X,1]-Mat A[Y,1]->T
      T=0=>Goto 3
      X-Y<>Abs T=>Goto 2
Lbl 3:Mat A[X,1]-1->Mat A[X,1]
      Mat A[X,1]=>Goto 1
      Dsz X:Goto 3
Lbl 4:S
--------------------------------------------
実行時間

C.Basicではこちらが速いので、こちらをベースに最適化を施します。
行列は短縮形を使います。（速度アップはわずかです）
ロジックを修正してすべて=>コマンドとGotoに最適化します。（かなり効果あります。）
X-Y<>Abs Tをカッコを使って二項演算化します。


--------------------------------------------
C.Basic用（非構造化最適化プログラム） NQUEEN03.g1m
--------------------------------------------
      0->A~Z
      8->R
      {R,1}->Dim Mat A
Lbl 0:X=R=>Goto 4
      Isz X
      R->A[X]
Lbl 1:Isz S
      X->Y
Lbl 2:Dsz Y:Goto 5:Goto 2
Lbl 5:A[X]-A[Y]->T=>Goto 6:Goto 3
Lbl 6:(X-Y)<>Abs T=>Goto 2
Lbl 3:Dsz A[X]:Goto 1
      Dsz X:Goto 3
Lbl 4:S
--------------------------------------------
実行時間



