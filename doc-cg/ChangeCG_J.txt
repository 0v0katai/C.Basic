===============================================================================

アドイン版　Casio Basic Interpreter (& Compiler) for CG ver 1.x β版

copyright(c)2015-2017-2023 by sentaro21
e-mail sentaro21@pm.matrix.jp

最終更新日：2023/10/26(JST)
最終更新者：sentaro21/Colon

===============================================================================
CG版　更新履歴
===============================================================================
v1.47β　2023.11,12-     ベータ版（インタプリタのみ）
    (build02)  2023.12.11
	・C.Basicコマンド専用カタログ機能からヒストリーを起動して]EXIT]でカタログに戻らない不具合を修正しました。
	・メインメモリ上のプログラムでLoad(コマンドを使った場合、フォルダ内のファイルにアクセスできない不具合を修正しました。

    (build01)  2023.12.10
	・C.Basicコマンド専用カタログ機能を追加しました。(純正より先に[Shift]+[4]で起動します)
	・ファイルモードのミニフォント表示に対応しました。
	・？コマンドと変数表示のミニフォント表示に対応しました。（FX版）
	・非対応のコマンド（内部コード0x7Fxx）でフリーズする不具合を修正しました。
	・エラー表示を変更しました。"Missing WhileEnd" and "Missing Switch"等（ErrorCode_List.txtを参照してください）
	・GIIモデル以外の隠しRAMの初期化機能を無効にしました。
	・BeepコマンドがACキーで中断できるようにしました。
	・行列とリストの初期化でRGB()HSV()HSL()コマンドが最初にある場合にエラーになっていた不具合を修正しました。（1.45エンバグ）
	（例）{RGB(255,0,255),123,456}
	・Load(コマンドで4096バイトを超えるファイルが4096バイトしか読み込めなかった不具合を修正しました。(CG版のみ）

	・LocateコマンドやText等の描画指定を括弧で記述することで数式指定できるようになりました。
	 （書式1）Locate x,y,Value/Strings[,N/O/R/V]
	 （書式2）Locate x,y,Value/Strings[,(描画指定)]
	 　N:0 'normal
	 　O:1 'or
	 　R:2 'reverse
	 　V:3 'reverse or
	（例）Locate 2,3,"ABC",(2)
	　　　Locate 2,3,"ABC",(R) ' R=2
	　どちらも
	　Locate 2,3,"ABC",R
	　と同じです。
	
	・FkeyMenuの描画指定を括弧で記述することで数式指定できるようになりました。
	 （書式1）FKeyMenu( n[～m], "文字列"/アイコン番号 [,C/M/N/R/I/S/U/L [,アイコン色 [,アイコン背景色]]] )
	 （書式2）FKeyMenu( n[～m], "文字列"/アイコン番号 [,(描画指定) [,アイコン色 [,アイコン背景色]]] )
	　基本描画指定における数値（0～4）
        　　C:(  0)消去します。
        　　N:(  1)ノーマル白アイコン。（省略可）
        　　R:(  2)右下が欠けた黒アイコン
        　　I:(  3)四角い黒アイコン
        　　S:(  4)縁取りのある黒アイコン
	　以下の修飾は基本描画指定値に足して指定します。
        　　U:( 16)文字列を1ドット上側に表示。
        　　L:( 32)表示範囲を左右2ドット広げます。
        　　M:( 64)マスク処理します。
        　　m:(128)枠だけマスク処理します。(FX版のみ）

        （例）FKeyMenu (1, "string",NULM)
              FKeyMenu (1, "string",(1+16+32+64))
　	　　上記の2つは同じ結果になります。


v1.46β　2023.10,23-     ベータ版（インタプリタのみ）
    (build03)  2023.10.26
	・メインメモリのお気に入り機能において大文字と小文字しか違わない同名ファイルの不具合を修正しました。
	・TicksWaitのカウントが1多かったのを修正しました。
	（修正前）TicksWait 4 が　TicksWait 5　と同じでした。 
	・フォルダ位置に復帰できなくなっていた不具合を修正しました。(build01 エンバグ）

    (build02)  2023.10.25
	・ファイルリストにおいてフォルダ上にカーソルがあるときに新規ファイルを作成する場合にカレントフォルダに作成されるようにしました。
	・ファイルを上書き保存する場合、以前のファイルよりもサイズが大きい場合は上書き保存するように書き込み方法を変更しました。（GIII以降)
	　（ファイルサイズが小さくなる場合は以前のファイルを消去してから新規保存します。）

    (build01)  2023.10.23
	・初回起動時に[CBasic]フォルダを作成しそこをデフォルトの保存フォルダとするようにしました。
	・整数モード時のFor～Nextの制御変数の終値が互換でなかったのを修正しました。
	・文字列の長さを制限した場合にそれ以上の長さの文字列の代入に失敗する不具合を修正しました。
	　（長さ-1が最大格納文字数になります。）
	・Pol()Rect()関数において、MatBaseが0の場合にListAns[0]ListAns[1]に答えが返らない不具合を修正しました。
	・ENG表示の丸め処理を修正しました。
	・Sciフォーマット出力における不具合を修正しました。
	・RefとRref関数を使用すると固まる不具合を修正しました。
	・C.Basicコマンド入力で入力できなかったコマンドを追加修正しました。


v1.45β　2020.2.10-	ベータ版（インタプリタのみ）
    (build20)  2020.5.21
	・If<False>~ElseIf間の飛越キャッシュの不具合を修正しました。
	・Syetem()コマンドでOSのマイナーバージョンが取得できるようになりました。
	（書式）System(-22)
	・System(コマンドの引数(-1)での機種判定にGraph90+Eを追加しました。
	（書式）System(-1)
	　返り値：10　CG10
	　返り値：20　CG20
	　返り値：50　CG50
	　返り値：90　Graph90+E
        ・やす(Krtyski)様作成のSystem()コマンドサンプルプログラム（Graph90+E対応版）をアップデートしました。(System_sampleフォルダ)

    (build19)  2020.5.20
	・Try～TryEndコマンドからBreakで脱出した場合、それ以後、[AC]中断もAcBreakも効かなくなる不具合を修正しました。
	・スタックエラーになる前にシステムエラーになっていた不具合を修正しました。
	・ReadGraph/WriteGraph/DotGet/DotPutコマンドを現在のVRAMに作用するように仕様変更しました。
	・描画対象VRAMを退避されているテキストVRAM領域とグラフィックスVRAM領域に変更するScreen.Vコマンドを追加しました。
	（書式）Screen.V
	　デフォルトのVRAMに戻します。
	（書式）Screen.VT
	　テキストVRAMの退避領域を描画対象にします。
	（書式）Screen.VG
	　グラフィックスVRAMの退避領域を描画対象にします。

    (build18)  2020.4.28
	・行列表示を修正しました。
	・セット・アップで隠しメモリのOn/Offは確認ポップアップを出すようにしました。

    (build17)  2020.4.24
	・RGB565形式の16ビットBMPのセーブ/ロードに対応しました。デフォルト形式は16ビットBMPになります。
        ・CPLXの行列表示が異常に遅かったのを修正し、3列から4列表示に変更しました。
	・隠しメモリの初期化を修正しました。

    (build16)  2020.4.16
	・自動インデント機能でのSwitch～Case～SwitchEndの自動整形を改善しました。
	・ElseIfコマンドの直後にコメントがある場合、次のコマンドがIfの場合に終了していた不具合を修正しました。
	・行列の初期化後に文字列から文字列への代入で代入されない不具合を再修正しました。
	（コピーされない例）
            ClrMat
	　　"ABC"->Str 1
	　　Str 1->Str 3
	・Seqコマンドで刻み値が少数の場合に終値に到達しないことがある不具合を修正しました。
	（例）Seq(X, X, 0.1, 1, 0.05 )
	・CPLXモード以外で虚数を使うと無限ループになる不具合を修正しました。(build15でのエンバグです。）
	・省略乗算の不具合を修正しました。(build15でのエンバグです。）

    (build15.)  2020.3.22
	・インデックス開始値が0の場合に要素数が64を超えるListの初期化が出来なかった不具合を修正しました。
	・ファイルモードで検索文字列が空の場合に[F4]がCOPYになる不具合を修正しました。

    (build15)  2020.3.20
	・Colon様のサポートにより関数メモリの実装を開始しました。
	・デフォルトのインデックス開始値が0の場合にListの自動確保が出来なかった不具合を修正しました。
	・ファンクションメモリー(Fn)のStore/Recall/SEEのSEEをEditに変更しました。

    (build14)  2020.3.14
	・ファンクションメモリー(Fn)のStore/Recall/SEEのSEEで[F5](Edit)を追加し編集可能になりました。
	・ファンクションメモリー(Fn)のStore/Recall/SEEの不具合を修正しました。

    (build13)  2020.3.10
	・ファンクションメモリー(Fn)およびグラフメモリー(Y)をデフォルトで数式評価とし、
	　文字列関数内および文字列に続く場合は文字列として評価するように変更しました。
	　（数式評価）
	　　fn1->A
	　　fn1(123)->A
	　　Locate fn1
	　　Locate fn1(123)
	　（文字列評価）
	　　fn2->Str 2
	　　"123"+fn1->Str 1
	　　Locate "123"+fn1
	　　StrJoin(fn1,Str 1)

	・文字列から文字列への代入で代入されない不具合を修正しました。
	（fn3にコピーされない例）
	　　ClrMat
	　　"123"->fn1
	　　"ABC"->Str 1
	　　Str 1->fn3
	・ファンクションメモリー(Fn)のStore/Recall/SEEを追加しました。
	　（※エディタではクリップボードの内容がストア対象です。1行入力では１行全体がストア対象になります。）
	・F_Start/F_End/F_pitchを独立変数に変更しました。
	・？コマンドで文字列が表示される場合にアスキーコードにデコードしないように修正しました。

   (build12.)  2020.3.4
	・GraphYとfnの確保数と文字列の長さをStr変数と同等に変更しました。
	・GraphYの格納仕様を6バイトのプレフィックス付きに変更しました。
	（行列への直アクセス以外は以前と変更ありません。）

   (build12)	  2020.3.2
	・エディタでファイルモードの切替でファイルリストが更新されない不具合を修正しました。
	・セットアップで機能しない場合はアイコンをマスク化しました。
	・System()コマンドでメインメモリに保存されるC.Basicのシステムファイルを取得できるようになりました。
	　（インデックス開始値は0で固定です。）
	（例）System(10000,1)
	　@CBASIC/Cbasicの内容をListAnsに取得します。
	（例）System(10000,2)
	　@CBASIC/Cbasic2の内容をListAnsに取得します。

   (build11)	  2020.3.1
	・CGモードでScreen#で座標変換した場合に2ドットずれる不具合を修正しました。
	・Screen#、Screen%を連続実行するとエラーになる不具合を修正しました。
	・Screen#、Screen%からListAnsに転送した場合の不具合を修正しました。
	（例）Screen#0,0→List Ans
	・ファイルモードの検索機能を改善しました。
	　アルファベットキーを押すと検索窓が開き検索モードになります。
	　検索窓では左右移動等、通常の入力が可能です。
	　検索窓を解除するには[EXIT]を押してください。
	　カーソル上下、[EXE] [F1](EXE) [F2](EDIT) [F3](NEW)キーは検索窓を閉じること無く実行できます。

   (build10)	  2020.2.28
	・ファイルモードとエディタのALPHAモードの修正を行いました。
	・ファイルモードでアルファベットキーによるダイレクト選択時に[SHIFT]、[ALPHA]、小文字や数字が指定が出来るようになりました。
	　[F4](A<>a):大文字小文字切り替えです。
	　[F5](CHAR)
	　[F5](→):フォルダ/ファイルサーチを切り替えます。
	　[DEL]:一文字戻ります。
	　[AC]:全部消します。
	　[EXIT]:元に戻ります。
	　[X^2]:～
	　[^]:' or ^
	　[(-)]:@

   (build09)	  2020.2.26
	・ファイルモードでアルファベットキーによるダイレクト選択時に２文字以上の指定が出来るようになりました。
	　[DEL]:一文字戻ります。
	　[AC]:全部消します。
	　[EXIT]:元に戻ります。
	・ファンクションメモリー(Fn)およびグラフメモリー(Y)に引数が無い場合は文字列として評価するようにしました。
	・インデントの必要なコマンド(If,Else..)の直前で改行した場合にインデントが余分に付加される不具合を修正しました。

   (build08)	  2020.2.24
	・OS側のステータス表示フラグがONの場合はステータスエリアの書き換えをしないように変更しました。

   (build07)	  2020.2.23
	・エミュレータで隠しメモリが使えるようになりました。

   (build06)	  2020.2.22
	・以下のコマンドでステータス表示が更新されるようにしました。(全画面モードでは更新されません。）
	 '#CBASIC
	 '#CBDBL
	 '#CBINT
	 '#CBCPLX
	・Colon様のサポートにより一行入力時のステータスエリアの表示を改善しました。
	・エミュレータの判定方法をハードウェアID判定に変更しました。

   (build05)	  2020.2.19
	・CHAR選択画面から戻る時にステータスエリアの表示が戻らない不具合を修正しました。
	・CG10/20でエディタのサーチ画面で[SHIFT]+[4](CATALOG)が使えなかった不具合を修正しました。(1.44build14でのエンバグです。)

   (build04)	  2020.2.17
	・GetHSV()/GetHSL()コマンドで変換できない色をエラーにするようにしました。
	（書式) GetHSV(16ビットカラー値[,N])
	（書式) GetHSL(16ビットカラー値[,N])
	　Nオプションでエラーを無視します。
	・HSV()/HSL()での色飽和での反転を修正しました。
	・Textコマンドで外部フォントが表示されない不具合を修正しました。

   (build03)	  2020.2.15
	・Colon様のサポートによりRGB→HSV/HSLのカラーコード変換の誤差を修正しました。
	・ラベルの検索時にコメントでの'#に続くオプションの設定が変更されてしまう不具合を修正しました。

   (build02)	  2020.2.12
	・VarPtr()コマンドで行列/List/Vctを指定した場合、その添字が常に実数評価されていた不具合を修正しました。
	・RGB()、HSV()、HSL()コマンドの引数がListの場合、インデックス開始値が0の場合の不具合を修正しました。
	・GetRGB()、GetHSV()、GetHSL()コマンドで、インデックス開始値が0の場合の不具合を修正しました。

   (build01)	  2020.2.10
	・SortA()/SortD()コマンドに文字配列のソートを追加しました。
	（例）SortA($Mat A)
	　Mat Aの文字列が昇順にソートされます。
	・ReadMe、マニュアル更新しました。
	・行列表示の←→表示を修正しました。
	・g3mモードにおいてストレージメモリへのでのStoPictを無効にしました。

v1.44β　2020.1.18-2.9	ベータ版（インタプリタのみ）
   (build15)
	・FkeyMenu(コマンドの範囲指定の書式を変更しました。
	（書式）FKeyMenu( n[～m], "文字列"/アイコン番号 [,C/M/N/R/I/S/U/L [,アイコン色 [,アイコン背景色]]] )
	　※ "アイコン色" はデフォルトで黒い部分の色指定です。
	　※ "アイコン背景色" はデフォルトで白い部分の色指定です。
	　※ 3 番目以降の引数は省略可能です。引数を省略した場合でも”,"は必要です。
	（例）FKeyMenu (1, "string",,Blue )
	（例）FKeyMenu (2～3, "longstring",R,RGB(255,0,0))
	（例）FKeyMenu (4～5, "longstring",I,Red ,Yellow )


   (build14)
	・行列画面で53以降の拡張領域の一覧表示をサポートしました。
	 [←]:26戻ります。
  	 [→]:26進みます。
	・FkeyMenu(コマンドを拡張しました。
	（書式）FKeyMenu( n, "文字列"/アイコン番号 [,C/M/N/R/I/S/U/L [,m [,アイコン色 [,アイコン背景色]]]] )
	　※ "アイコン色" はデフォルトで黒い部分の色指定です。
	　※ "アイコン背景色" はデフォルトで白い部分の色指定です。
	　※ 3 番目以降の引数は省略可能です。引数を省略した場合でも”,"は必要です。
	（例）FKeyMenu (1, "string",,,Blue )
	（例）FKeyMenu (2, "string",R,3,RGB(255,0,0))
	（例）FKeyMenu (2, "string",R,3,RGB(255,0,0),Yellow)

   (build13)
	・CHAR画面の"Default"モードでGB/JIS画面に入ったときに自動的に"C.Basic"モードになるように修正しました。
	・エディタで[SHIFT]を押したときに編集可能空きエリアのサイズをステータスエリアに表示するようにしました。

   (build12)
	・FkeyMenu(コマンドを修正しました。
	（書式）FKeyMenu( n, "文字列"/アイコン番号 [,C/M/N/R/I/S/U/L] [,m])
	　nからmまでのファンクションキーを表示/消去します。
	　3つめの引数の並び順は任意です。
	　　C:消去します。
	　　M:マスク処理します。
	　　N:ノーマル白アイコン。（省略可）
	　　R:右下が欠けた黒アイコン
	　　I:四角い黒アイコン
	　　S:縁取りのある黒アイコン
	　　U:文字列を1ドット上側に表示。
	　　L:表示範囲を左右2ドット広げます。
	（例）FKeyMenu (1, "string", RL)
	（例）FKeyMenu (2, "long_string", SLM, 4)
	（例）FKeyMenu (5, 42, M)
	・CHAR画面の[0](HELP)で、[VARS]の"Default Font"と"C.Basic Font"が逆になっていたのを修正しました。
	・やす(Krtyski)様作成のSystem()コマンドサンプルプログラムを同梱しました。(System_sampleフォルダ)


   (build11)
	・FkeyMenu(コマンドを拡張しました。
	（書式）FKeyMenu( n,"",M [,m])
	　ｎからmまでのファンクションキーをマスク処理します。
	・Colon様謹製システム操作系アプリのシステムマネージャを1.2→1.3に更新しました。
	・やす(Krtyski)様 & CalcLoverHK様 & Colon様作成のFKeyMenu(コマンドのサンプルプログラムを同梱しました。(CBasic_sample\FKeyMenu_sample)

   (build10)
	・BackLightコマンドをエミュレータで無効にしました。
	・System()コマンドにエミュレータ判定を追加しました。
	（書式）System(-7)
	　実機では0、エミュレータでは1が返ります。

   (build09)
	・FkeyMenu(コマンドを拡張しました。
	（書式）FKeyMenu( n,"",C,m)
	　ｎからmまでの複数のファンクションキーをまとめて消去をします。
	（書式）FKeyMenu( n,"文字列",R/I/S,m)
	　ｎからmまでの複数のファンクションキーにまたがる表示をサポートしました。
	（書式）FKeyMenu( n,"文字列",L)
	（書式）FKeyMenu( n,"文字列",RL)
	（書式）FKeyMenu( n,"文字列",IL)
	（書式）FKeyMenu( n,"文字列",SL)
	　左に2ドット分、文字列の表示範囲を広げます。


   (build08)
	・FkeyMenu(コマンドの表示を拡張しました。（Colon様にアイコンデータを提供していただいています。）
	（書式）FKeyMenu( n,"文字列",I)
	　右下の欠けが無い黒のアイコンです。
	（書式）FKeyMenu( n,"文字列",S)
	　選択状態を示す縁取り付きの右下の欠けが無い黒アイコンです。

	・変数表示のINT%,DBL#,CPLXとカラーピッカーのアイコン (RGB/HSL/HSV) を選択アイコンに変更しました。


   (build07)
	・DBL#モードにおいて、一時停止と変数表示での虚数表示がされていたのを修正しました。
	・変数表示をINT%,DBL#,CPLXで独立させました。

   (build06)
	・ストレージ/SDへのPictファイルのセーブが出来なくなっていた不具合を修正しました。(1.28エンバグ）
	・デフォルトで確保できるStr文字変数の数を999に増やしました。

   (build05)
	・行列のインデックス開始値が0の場合、'#Str、'#Fn等等で設定した数より１多く確保される不具合を修正しました。
	・セットアップのカレントフォルダの切り替えを修正しました。
	・Fix指定で少数桁を含む桁数が16桁以上にならないようにしました。
	・1.44β以降に対応したFFM0124を同梱しました。

   (build04)
	・'#Str、'#Fn等の引数指定で数値以外の数式が可能になりました。
	　（例）#Str <r>,N+1,A*10
	・行列/List/Vct一覧表示で[SHIFT]+[PageUP][PageDown]機能が効かなくなっていたエンバグを修正しました。

   (build03)
	・GBモードを有効にしたエディタでエスケープ付きの１バイト文字 (×, ÷ など) が入力できない不具合を修正しました。
	・保存画面で画面が残る不具合を修正しました。
	・マニュアルを更新しました。（Str初期化の説明）（英文翻訳はやす (Krtyski) 様にサポートしていただいています。）

   (build02)
	・IsExist(でワイルドカードでファイルを検索した場合、返り値がおかしかったのを修正しました。
	（例）IsExist("*.bmp")
	　ファイルが存在する場合、ファイル数を返す。
	　ファイルが存在しない場合、0を返す。

   (build01)
	・変数表示画面を一部修正しました。
	・ファイル名入力時の保存先選択画面を修正しました。
	・行列/List/Vct選択に[SHIFT]+[F1][F2][F3]を追加しました。
	・一行入力時に[ALPHA]+[(-)]で"％"が入力できなかった不具合を修正しました。
	・バージョン表記を再アップに対応して一部変更しました。
	・アイコン番号が1406以上は0扱いにしました。


v1.43β　2020.1.15	ベータ版（インタプリタのみ）
	・セットアップの"Force Return"を指定していた場合、[SHIFT]+[F6]でデバッグモードに入れない不具合を修正しました。
	・拡張変数へのAliasはエラーになるようにしました。
	・Graph X=コマンドの縦ラインノイズを修正しました。
	・SetupのDisplay設定で、Nrm表記をNorm表記に改めました。

	 2020.1.10	・_BmpコマンドとDrawMatコマンドの16ビットカラー描画を改善しました。
	　拡大回転をしない場合、約2倍のスピードアップになります。
	　この改善のために、DrawMatコマンドに必要なMatデータは＿Bmpコマンドで使われるタイプの行列（従来の逆行列です）に変更になります。
	・Graph Y=/Graph X=コマンドで最初の座標の描画の不具合を修正しました。
	・フォルダを作成後、新規フォルダに移動しない不具合を修正しました。
	・フォルダのリネームで[F6]に[/]が残っていた不具合を修正しました。
	・メモリモード（ストレージメモリ/メインメモリ）を切り替える時に同じモードには移行できないように修正しました。
	・SETUPで"Skeetch Line"の項目で[F6](VER)が表示されなかった不具合を修正しました。
	・ミニフォントでの変数一覧画面のスクロールバーを修正しました。


v1.42β　2020.1.6	ベータ版（インタプリタのみ）
	・次のコマンドで透過色を有効にしました。
	  _BmpZoom
	  _BmpRotate
	  _BmpZmRotate
	  DrawMat
	  DotPut

	・DrawMatコマンドで16ビットカラービットマップデータの幅と高さが違う場合に描画されない不具合を修正しました。
	・DotPutコマンドで16ビットカラー描画が出来なかった不具合を修正しました。
	・MLコマンドで画面外に描画範囲がある場合の不具合を修正しました。
	・積分計算式がエラーになる場合の処理を修正しました。
	・積分計算の初期精度を有効6桁とし結果を丸めないように変更しました。


v1.41β　2019.12.29	ベータ版（インタプリタのみ）
	・積分の下限が上限より大きい場合の結果の符号を修正しました。
	・積分計算で変数Xが変更される不具合を修正しました。

	 2019.12.28	・"Graph(X,Y)=("コマンドでTを引数に持つListに乗算を施した場合、動作しなかった不具合を修正しました。
	（例）Graph(X,Y)=(2*{1T,2T},3*{3T,4T})
	・"ExitDM PopUp"がオンの場合、デバッグモードから抜けて再度実行した場合、ポップアップが出なくなる不具合を修正しました。
	・インデント機能を有効にした場合、プログラムの最後にゴミが付くことがある不具合を修正しました。
	・一行入力時にアルファモードのアイコンが表示されなくなる不具合を修正しました。
	・ガウス-クロンロッド求積法に基づく積分機能を追加しました。(UCFのacapde氏のプログラムを実装しました。）
	    https://community.casiocalc.org/topic/7637-cbasic-international-release/page-14#entry62978
	（書式）∫( f(x), 下限, 上限 [,許容誤差])
	　[,許容誤差] 1以上の値の場合は有効桁数指定です。デフォルトは10になっています。
	（例）∫(2X^2+3X+4,1,5)
	      結果は 134.6666667
	（例）∫(sin X*cos X,0,1)
	      結果は 0.354036091
	（例）∫(cos ln X,0,1)
	　　　"Not met Accuracy"エラー
	（例）∫(cos ln X,0,1,5)
	       結果は 0.5

	・Colon様謹製システム操作系アプリのフォントマネージャとシステムマネージャを同梱しました。
	（※C.Basic_applicationフォルダにあります。）
	（※SysCallを多用しているため、誤ってソースコードを編集してしまわないようパスワードロックをかけています。）
	（※ソースコードの改変は自由ですが、自己責任で行ってください。）


v1.40β　2019.12.6	ベータ版（インタプリタのみ）
	・サブプログラムの読み込み方法をプログラムの開始時ではなく実行時に変更しました。
	（Progコマンドの引数に文字変数指定する場合でも事前に記述しておく必要はありません。）
	・文字列内にエスケープ文字と改行が入る場合の処理を修正しました。
	・文字列に改行を含める場合、"\n"を使えるようにしました。
	・エディタでカーソル位置を記憶できる最大ファイル数を16から32に増やしました。
	・エラーメッセージを改訂しました。

	・BeepコマンドにListを引数として使えるようになりました。
	（書式）Beep 周波数のList,長さのList
	（例）{1000,2000,3000}->List 5
	　　　{250,500,250}-?List 7
	　　　Beep List 5,List 7


v1.39β　2019.11.29	ベータ版（インタプリタのみ）
	・Locate/LocateYXコマンドで高さ指定が無効になっていた不具合を修正しました。
	・Help機能が有効なときにデバッグモードから[EXIT]で解除されない不具合を修正しました。
	・DrawGraphコマンドでListを引数にする場合の不具合を修正しました。
	・エラーメッセージの"Withot"を"w/o"に変更しました。


v1.38β　2019.11.21	ベータ版（インタプリタのみ）
	・ファイル一覧でピリオド”.”が含まれるファイルの並び順を修正しました。
	・g1mモードでストレージメモリに置かれた2KBの情報があるPictの読み込みを改善しました。
	・記憶されたカーソル位置がファイル終端よりも後ろにあった場合に入力できなくなる不具合を修正しました。


v1.37β　2019.11.19	ベータ版（インタプリタのみ）
	・G1MモードのStoPictの保存先がストレージモードの場合、動作しなくなっていた不具合を修正しました。
	・インデントで保存時に空白を除去する-Save設定時にコメント内の空白も削除していた不具合を修正しました。
	・Listに付けられた名前が8文字の場合、文字変数へのコピーで異常になることがあった不具合を修正しました。


v1.36β　2019.11.14	ベータ版（インタプリタのみ）
	・Progコマンドのサブプログラム名に文字列変数が使えるようになりました。
	（文字変数指定するサブプログラムはメインプログラム内に記述しておく必要があります。）
	（例）
	　"Test"->Str 1
	　Prog Str 1
	　Stop
	　prog "Test"	// 実行されないが必要

	 2019.11.13	・エディタでのカーソル表示を改善しました。


v1.35β　2019.11.12	ベータ版（インタプリタのみ）
	・文字列を指定したSaveコマンドでファイルサイズが+1になる不具合を修正しました。
	（例）Load "test.txt"->Str 1
	　　  Save("test.txt"),Str 1
	"test.txt"のファイルサイズが１バイト増えてしまう。


v1.34β　2019.11.10	ベータ版（インタプリタのみ）
	・エディタで編集後、ファイルリストに戻って再度ファイルを開いた場合、カーソル位置が同じ箇所に来るようにしました。
	　（最大16ファイルまで対応します。）
	・Help機能が有効の場合、プログラム中断後にサブルーチンが無効になってしまう不具合を修正しました。


v1.33β　2019.11.3	ベータ版（インタプリタのみ）
	・Plotコマンド後に色指定が初期化されていなかった不具合を修正しました。


v1.32β　2019.10.27	ベータ版（インタプリタのみ）
	・Help機能において1バイトコマンドが表示されなかった不具合を修正しました。（1.20でのエンバグです。）
	・[SHIFT]+[ALPHA]ロックが[EXE]改行したら解除される不具合を修正しまた。
	・[ALPHA]+[(-)]で％が入力できるようにしました。


v1.31β　2019.10.17	ベータ版（インタプリタのみ）
	・？コマンドでMat/List/Vctへの初期化入力ができなくなっていた不具合を修正しました。（1.29でのエンバグです。）

	 2019.10.16	・行列/List/Vctのの初期化を繰り返すとメモリ不足になる不具合を修正しました。
	・SketchThin指定の描画位置が1ドットずれていたのを修正しました。

	 2019.10.15	・[DEL]後に画面外までカーソル移動すると、UNDO実行時にカーソル位置が戻らない不具合を修正しました。
	・[PASET]後のUNDOでプログラムサイズが変更されてなかった不具合を修正しました。

	 2019.10.13	・エディタにUNDO機能を追加しました。DELの後、[ALPHA]+[DEL]で削除前の状態に戻ります。（戻れるのは1ステップのみ）

	・行列/List/Vctのの初期化でAnsメモリを使わないように効率化しました。


v1.30β　2019.10.8	ベータ版（インタプリタのみ）
	・？コマンドに＠オプション付加で現在使われている画面で使えるようになりました。
	（例）?@(5,5,5)->A
	　Locate座標（5,5）から5カラム分の範囲で入力出来ます。


v1.29β　2019.9.27	ベータ版（インタプリタのみ）
	・UCFのCalcLoverHK氏にManualCG_EN.txtを修正していただきました。

	 2019.9.25	ベータ版（インタプリタのみ）
	・旧コマンドのList1～6がセットアップの"EditListChar"で変更されなかった不具合を修正しました。
	・Listのコピーで旧コマンドのList1～6が機能しなかった不具合を修正しました。
	（例） List 1->List2

	・行列とリストの読み込みが最大2倍速になりました。
	（例）{1,2,3}->List 1
	（例） [[1,2,3][4.5,6]]->Mat A

	・UCFのCalcLoverHK氏にManualCG_EN.txtを修正していただきました。


v1.28β　2019.9.10	ベータ版（インタプリタのみ）
	・プログラム終了時に[F2]を押すと直接編集画面に戻れる機能を追加しました。
	・プログラムファイルを保存する場合にファイルサイズが増減していた不具合を修正しました。


v1.26β　2019.9.5	ベータ版（インタプリタのみ）
	・エディタのClip&Paste後のカーソル位置を修正しました。
	・ミニフォントの一部（0xE69E、0xE6A5，0xE6A6）が純正非互換だったのを修正しました。
	・”文字列”コマンドで21文字ちょうどの場合に21文字目が表示されない不具合を修正しました。
	・WaitTicksコマンド実効後にAnsが書き換えられる不具合を修正しました。
	・MenuコマンドでOS画面に戻る[MENU]キーが効かなくなっていた不具合を修正しました。


v1.25β　2019.9.3	ベータ版（インタプリタのみ）
	・MOD(コマンドの引数が両方とも負数の場合に結果が違っていた不具合を修正しました。
	(誤)　MOD(-5,-5)->5  　MOD(-5,-1)->1
	(正)  MOD(-5,-5)->0  　MOD(-5,-1)->0

	・プログラム実行中断時にサブルーチン編集でメモリ不足になることがある不具合を修正しました。

	・Plotコマンド後のX,Y変数への自動代入が描画範囲外でも代入されていたのを修正しました。


v1.24β　2019.8.30	ベータ版（インタプリタのみ）
	・fx-Manager PLUS Subscription for CG series でキー入力が固まる不具合を修正しました。

	・メインメモリが空の場合、[F6]-[F6]-[F4](->SMEM)でストレージモードに移行できない不具合を修正しました。

	・BatteryStatusが複素数モードで動作しなかった不具合を修正しました。

	・CG50/Grpah90+EにおいてBatteryStatusが返す電圧値を9％上方修正しました。

	・バッテリ電圧をセットアップページでのバージョン表示の下部に表示するようにしました。

	・LoadコマンドでStr変数へのロードが出来なかった不具合を修正しました。
	（例）Load "Sample.txt"->Str 1

	・CSVファイルの編集をサポートしました。（お試し版です）
	 	　[F2](edit)

	・プレーンテキストファイルの編集をサポートしました。（お試し版です）
	 	　[SHIFT]+[X^2] (extended)


v1.23β　2019.8.19	ベータ版（インタプリタのみ）
	・For～Nextの制御変数（DBLまたはINT）が動作モードと違う場合の動作を修正しました。
	（例）'#CBDBL
	   For 1->I% To 6
	    Disp I%
	   Next

	・4ビット行列の数値を符号無しに変更しました。従来の符号付き-8～7は符号無しの0～15となります。

	・LoadコマンドでStr変数へのロードが出来なかった不具合を修正しました。
	（例）Load "Sample.txt"->Str 1


v1.22β　2019.8.15	ベータ版（インタプリタのみ）
	・整数モードのMOD(コマンドのバグを修正しました。
	（誤）MOD(-5,3)->5
	（正）MOD(-5,3)->1

	・メインメモリ上のプログラムでインデント機能を使った場合、プログラムの最後にゴミが出る不具合を修正しました。

v1.21β　2019.8.7	ベータ版（インタプリタのみ）
	・ViewWindow変数を個別に指定した場合の"Range Error"を修正しました。


v1.20β　2019.8.5	ベータ版（インタプリタのみ）
	・プログラムの新規作成で同名ファイルのプログラムがすでに存在していた場合の不具合を修正しました。

	 2019.8.4	・エディタにインデント機能を追加しました。
	　[EXE]を押した場合、現在の行の先頭にあるインデント（空白）を次の行にも継続します。

	・セットアップの設定で、プログラム読み込み時にインデントを自動的に付加します。(Edit Indent+)
	　すでにインデント付加されているプログラムは付加されません。
	　また保存時にインデントを含む空白削除する事もできます。（＝CasioBasic準拠ソースに変換します。）
	　以下のコマンドでインデントが付加されます。
	　　If-Else-ElseIf-IfEnd
	　　For-To-Step-Next
	　　While-WhileEnd
	　　Do-LpWhile
	　　Switch-SwithEnd

	・旧コマンドのList1を使用したDim List1が機能しなかった不具合を修正しました。


v1.10β　2019.7.22	ベータ版（インタプリタのみ）
	・Graph(X,Y)=の描画でエンバグしていたのを修正しました。

       　2019.7.20	・フォルダが2階層以上作成できるので、初期ルートフォルダを変更できるようにしました。
	　セットアップでルートもしくはカレントフォルダにルートフォルダを設定出来ます。

	・プログラムをメインメモリから実行した場合、Save/Loadコマンドで正常なアクセスが出来なかった不具合を修正しました。

	・PlotコマンドとLineコマンドの連携が上手くいっていなかった不具合を修正しました。

	・Tを引数指定したGraph(X,Y)=の描画を再修正しました。


ｖ1.00β  2019.6.15	アルファ版（インタプリタのみ）
	・例外処理コマンドのTry～Except～TryEndコマンドを追加しIsError()は廃止しました。
	（書式）Try ＜プログラム＞
	（書式）Except エラーコード１
	＜エラ－１の場合の処理＞
	（書式）Except エラーコード２
	＜エラ－２の場合の処理＞
	（書式）TryEnd
	　＜プログラム＞にエラーが無ければTryEnd後に処理が移ります。
	　エラー１が発生した場合、＜エラ－１の場合の処理＞を実行後、TryEnd後に処理が移ります。
	　エラー２が発生した場合、＜エラ－２の場合の処理＞を実行後、TryEnd後に処理が移ります。
	　エラー３が発生した場合、対応するExceptが無いので、エラーポップアップが出ます。

	（書式）Except
	　引数のないExceptはすべてのエラーに対応します。

	（例）Try 3*4+
	　　　Except 1
	　　　"Syntax Error"
	　　　TryEnd
	　”3*4+”が文法が間違えているのでSyntaxErrorの番号＝1に対応する"Syntax Error"が実行されます。

	（例）Try 3*4/0
	　　　Except 1
	　　　"Syntax Error"
	　　　Except 40
	　　　"Divide by Zero"
	　　　TryEnd
	　”3*4/0”が0での除算エラー＝40に対応する"Divide by Zero"が実行されます。

	（例）Try 3*4/0
	　　　Except 1
	　　　"Syntax Error"
	　　　Except
	　　　"Error"
	　　　TryEnd
	　エラーに対応するExceptがない場合は、引数のないExceptはすべてのエラーに対応するので"Error"が実行されます。

	サンプルプログラムはCBasic_sample/Try_Exceptにあります。
	エラーコードはErrorCode_List.txtを参照してください。


	・0x0C（Disps）以外の0x01～0x2Fのコードの後に改行が続く場合でも改行が省略されていた不具合を修正しました。


ｖ0.86α  2019.6.8	アルファ版（インタプリタのみ）
	・Tを引数指定したGraph(X,Y)=の描画を修正した時のエンバグを修正しました。

	  2019.5.30	・CG10/20で起動時オーバークロックが必要とされる場合にシステムエラーが起きていた不具合を修正しました。
	（0.85・ポップアップ表示でスタック不足によるシステムエラーが発生する不具合を修正しました。←このときのエンバグでした。）

	  2019.5.29	・ファイルリストで[.]キーを押した場合に”～”を先頭文字とするファイルに移動するようにしました。
	・ファイルリストで[EXP(x10)]キーを押した場合にフォルダリストの先頭に移動するようにしました。
	・フル画面モードの？コマンドでステータスエリアが表示されてしまう不具合を修正しました。

	  2019.5.26	・Tを引数指定したGraph(X,Y)=の描画を修正しました。
	・ファイルリストで[.]キーを押した場合にフォルダリストの先頭に移動するようにしました。
	・TextコマンドのFX(6x8 font)オプションで外部フォントが無効になっていた不具合を修正しました。


ｖ0.85α  2019.5.18	アルファ版（インタプリタのみ）
	・Help表示がONの場合に一時停止から[EXIT]でデバッグモードを解除できない不具合を修正しました。

	  2019.5.17	アルファ版（インタプリタのみ）
	・サブプログラムで一時中断して[EXIT]でエディタに戻らず終了してしまう不具合を修正しました。(0.82のエンバグです。）
	・ポップアップ表示でスタック不足によるシステムエラーが発生する不具合を修正しました。

	  2019.5.16	アルファ版（インタプリタのみ）
	・メインメモリからストレージ/SDへの移動時のファイルリストの表示順を変更しました。
	・行列とListが一時停止後に変数を一時停止表示したときの不具合を修正しました。（0.85エンバグ）

	  2019.5.14	アルファ版（インタプリタのみ）
	・行列とListが一時停止後の表示が消去される不具合を修正しました。

	・MCS表記をMain Memory表記に統一しました。

	・お気に入りをストレージメモリとメインメモリ(Main Memory)で独立させました。それぞれ7つ登録できます。

	・一時停止コマンドのテキスト変換を改行コード付きに仕様変更しました。
	（従来＝純正互換）Disps
	（新仕様）Disps+[CR]+[LF]

	・一時中断してから編集すると[EXIT]でデバッグモードが解除されない不具合を修正しました。(まだバグが残ってました。）


ｖ0.84α  2019.5.12	アルファ版（インタプリタのみ）
	・ストレージメモリとメインメモリ(Main Memory)間の移動を2キーで出来るようにしました。
	　[SHIFT]-[F5]でストレージモードが切り替わります。

	・Monochromeライブラリ系コマンドの_Recangleと_Polygonに拡大縮小と回転処理を同時に加えるオプションを追加しました。
	 （書式）_Rectangle X1, Y1, X2, Y2, border_width, border_color, Color[,確率/透過率][,回転角度][,回転中心座標X][,回転中心座標Y][,拡大率]
	 （書式）_Polygon X座標のint行列へのポインタ, Y座標のint行列へのポインタ, 頂点数, Color[,確率/透過率][,回転角度][,回転中心座標X][,回転中心座標Y][,拡大率]

	　[回転中心座標X][回転中心座標Y]を省略した場合は自動的に描画画像の中心が指定されます。

	（使用例）"ML_sampleCG"にあるサンプルプログラムを参照してください。

	・Monochromeライブラリ系コマンドの描画指定の5（透過率設定）が以下のコマンドで機能してなかった不具合を修正しました。
	　_Horizontal
	　_Vertical
	　_Recangle
	　_FillPolygon


ｖ0.83α  2019.5.11	アルファ版（インタプリタのみ）
	・一時中断してから編集すると[EXIT]でデバッグモードが解除されない不具合を修正しました。(0.82のエンバグです。）

	  2019.5.8	・GB1モードで表示できないGBフォントを背景色を変えて表示するようにしました。
	・GBモードにおけるLocateコマンドでは右端まで可能な限り描画するように仕様変更しました。

	  2019.5.7	・外部フォントが読み込めなくなっていた不具合を修正しました。
	・GB1モードで表示できないGBフォントを色を変えて表示するようにしました。
	・GB選択とJIS選択を干渉しないように独立させました。
	・Colon様に作成していただいたJIS-GB変換テーブル表を同梱しました。

	  2019.5.6	・GBフォント選択ページでJIS並びで選択できるようになりました。
	　[^]キーでJISモードになります。

	・キャラクタ選択画面のステータスラインに現在の入力状況を表示するようにしました。
	・[0]キーで簡単なHelpが出ます。

	・ループスタックの最大値を変更しました。
	　(for~Next	  : 最大 4 level から 8)
	　(While~WhileEnd : 最大 6 level から 8)
	　(Do=LpWhile	  : 最大 6 level から 8)
	　(Switch~SwithEnd: 最大 4 level から 8)

	・？コマンドで文字列を入力する場合にメモリエラーになることがある不具合を修正しました。


ｖ0.82α  2019.5.2	アルファ版（インタプリタのみ）
	・Switch～SwitchEnd内からのGoto脱出でスタッククリア出来てなかったのを修正しました。

	  2019.5.1	・Renameコマンドを追加しました。　[SHIFT]-[VARS](PRGM)-[F6]-[F4](I/O)-[F6]-[F6]-[F5](Rename)
	（書式）Rename "旧ファイル名”、”新ファイル名”
	（例）Rename "ABC.bmp","CDE",bmp"

	・ストレージメモリ上のファイル名の大文字と小文字を動作時に区別しないように仕様変更しました。
	・大文字と小文字の相互Renameが可能になりました。
	（例）ABC.g3m" -> "abc.g3m"
	・ファイル入力時のカーソル初期位置を拡張子の前になるようにしました。

	・デバッグモード解除のカーソル位置を修正しました。
	・デバッグモード解除確認ポップアップでデバッグモードが解除されない不具合を修正しました。

	・g1m/g3mファイル以外のRenameでお気に入りに反映されなかった不具合を修正しました。


ｖ0.81α  2019.4.28	アルファ版（インタプリタのみ）
	・BmpLoadで1ビットBMPファイルがステータスライン部分に描画されない不具合を修正しました。

	  2019.4.27	・EngOnにおけるFixとSciの非互換性を修正しました。
	（例）EngOn:Sci 3
	　　1.23456789e12->12.3M

	・Save、Load(コマンドの引数に行列/List以外の変数も指定できるようになりました。
	（例）Save "TEST",A
	（例）Load "TEST",Str 1

	・ヘルプ表示の瞬間にファンクションキー上部がちらつくのを修正しました。

	・Helpファイルを更新しました。


ｖ0.80α  2019.4.23	アルファ版（インタプリタのみ）
	・コマンド入力時にHelp表示出来る機能を追加しました。セットアップで設定します。
	　zip内のHELPフォルダに有る~~HELP3.txt/~~HELP3.g3m/~~HELP1.txt/~~HELP1.g1mファイルがHelpファイルです。
　　　　　　　　　　　　　ルートフォルダかプログラムと同じフォルダに入れてください。

	・nCr/nPrを追加しました。

	・ファイルモードのフォルダが保存できていなかった不具合を修正しました。
	・Main Memoryのフリーエリアが残っているのに保存ができない不具合を修正しました。
	・List1～List6が使えなかった不具合を修正しました。
	・1ビットと4ビット行列において要素アドレスの取得がおかしかったのを修正しました。
	・行列とListの連続演算で不具合があったのを修正しました。
	・StrShiftでマイナス引数の場合、結果が違っていたのを修正しました。
	（例）StrShift("1234567", -2)->"  12345"
	・グラフ描画コマンドを一部修正しました。


ｖ0.70α  2019.2.17	アルファ版（インタプリタのみ）
	・フランス語版マニュアルを同梱しました。（Planet-CasioのLephenixnoir氏に翻訳していただきました。）
	・隠しRAM使用時に画面左上にゴミが出るのを修正しました。
	・ヒープのPictファイルを初期化しないとNGな場合があるので選択できるようにしました。（セットアップで設定します。）
	・ClrMatでヒープを使うPictファイルも初期化するようにしました。
	（書式）ClrMat


ｖ0.69α  2019.2.9	アルファ版（インタプリタのみ）
	・プログラム終了後にヒープのPictファイルを初期化しないようにしました。
	・隠しRAM使用時はg1mモードでもPict機能はフルカラー対応しました。
	（この場合、g1mプログラムのPictファイル（現在はheapモードのみ）はフルカラーになります。）


ｖ0.68α  2019.2.3	アルファ版（インタプリタのみ）
	・サブプログラムを頻繁に呼び出すプログラムで[AC]ブレークが効かない不具合を修正しました。
	・For～Next、While~WhileEnd、Do~LpWhileで=>コマンドの次にNext/WhileEnd/LpWhileがある場合のループ終了時の動作を修正しました。
	・Locate/TextコマンドでList n[0]のサブ名を表示できない不具合を修正しました。
	・？->fn1,?->Y1の入力がエラーになっていた不具合を修正しました。
	・g3mモードのSketch-DotとSketch-Broken指定のCircleコマンドの描画を修正しました。


ｖ0.67α  2019.1.26	アルファ版（インタプリタのみ）
	・ローカル変数にアンダーバーで始まる拡張変数を指定した場合の不具合を修正しました。
	・サブプログラム内の"=>"コマンドの判定式の結果でAns変数が書き換えられる不具合を修正しました。

	・（自然に不具合解消）
	　OS3.20において最初のデバッグモード時に[F1]~[F4]以外のキーを押すとデバッグモードが解除されていた不具合が直っています。


ｖ0.66α  2019.1.18	アルファ版（インタプリタのみ）
	・4次元以上の逆行列の結果が正しくない場合のある不具合を修正しました。
	（正しくない例）[[0,0,0,1][27,9,3,1][216,36,6,1][512,54,8,1]]^(-1)

	・複素数モードで60進数入力が動作しなかった不具合を修正しました。

	・ループ内のGotoコマンドがループが繰り返す前に実行された場合の不具合を修正しました。

	・オーバーライトモードのクリップモードのカーソル形状を修正しました。
	・エミュレータでのLocateコマンドの不具合を修正しました。（まだ不完全です。）

	・（既知の不具合）（0.66）
	　OS3.20において最初のデバッグモード時に[F1]~[F4]以外のキーを押すとデバッグモードが解除されます。（0.66のみ）


ｖ0.65α  2019.1.2	アルファ版（インタプリタのみ）
	・サブルーチンの呼び出しがループ内にあり、サブルーチン内のループ内以外でのGotoコマンドの不具合を修正しました。

	  2018.12.31	・Gotoコマンドでループ外に自動的にジャンプできるようになりました。（お試し実装です。）
	　（0.64による(-)オプションは無効になりました。）

	・プログラムの再帰呼び出しでシステムエラーになる不具合を修正しました。


ｖ0.64α  2018.12.30	アルファ版（インタプリタのみ）
	・表示形式指定のSciが異常になっていた不具合を修正しました。（0.58でエンバグ）

	  2018.12.29	・Gotoコマンドでループ外にジャンプできるようになりました。（お試し実装です。）
	（書式）Goto (-)ラベル名
	　(-)はマイナス符号です。
	（例）
	 Lbl A
	 While 1
	   Goto (-)A
	 WhileEnd

	・ベクトル(Vct)の初期化で行と列が選択できるようになりました。
	・ベクトル(Vct)の間接指定が動作していなかった不具合を修正しました。


ｖ0.63α  2018.12.27	アルファ版（インタプリタのみ）
	・ルートフォルダのBMPファイルにアクセスできなくなっていた不具合を修正しました。（0.63でのエンバグ）
	・Renameにおいて拡張子を変えた場合に確認ポップアップを出すようにしました。

	  2018.12.26	・エディタのアルファモードが[SHIFT]+[F5](A<>a)で解除されていたのを修正しました。

	  2018.12.24	・ML系コマンドでカラー指定をデフォルトに戻していたのを戻さないように再修正しました。

	  2018.12.19	・Renameにおいて8文字以上のファイル名になったときにファイルが無くなる不具合を修正しました。

	  2018.12.16	・逆行列の結果が正しくない場合のある不具合を修正しました。
	（正しくない例）[[0,0,1][9,3,1][36,6,1]]^(-1)

	・BG-Pictにファイルを指定できるようになりました。
	・G3MモードにおけるBG-Pictの動作を修正しました。（現状CG50のみ対応です。）


ｖ0.62α  2018.12.11	アルファ版（インタプリタのみ）
	・Seq(コマンドで変数の値が不正な場合、コマンド評価時にエラーが出ていたのを修正しました。
	（例）Xが-1の場合、
	　　　Seq( sqrt(X),X,1,5)でコマンド評価時にエラーになっていました。


	  2018.12.9	・CG10/20での文字列処理/行列/Listの不具合を修正しました。

	・ステータスエリアの表示をできるだけ維持するようにしました。
	　起動時はステータス表示モードで、
	　ステータスエリアに何か描画した時点でステータスエリア非表示モードとなります。
	　ステータスエリア表示モードに戻すにはPutDispDDコマンドを使用します。

	・シリアルコマンドを[EXIT]で中断出来るオプションを追加しました。
	（書式）Send( 変数[,ボーレート][,EXIT有効])
	（書式）Recv( 変数[,ボーレート][,EXIT有効])
	（書式）OpneComport38K[,ボーレート][,転送モード][,EXIT有効]
	[ボーレート値]：0=300, 1=600, 2=1200, 3=2400, 4=4800, 5=9600, 6=19200, 7=38400(デフォルト), 8=57600, 9=115200 baud
	[転送モード] 0:バイナリ転送モード　　1:データ形式自動判別モード（デフォルト）
	[EXIT有効]  0:無効　　1：有効

	（例）Send(A,,1)
	（例）Recv(A,,1)
	　[EXIT]で中断できます。


ｖ0.61α　2018.11.26	アルファ版（インタプリタのみ）
	・現在の空きメモリ量を取得するSystem(-5)を追加しました。
	（例）System(-5)

	　2018.11.25	・文字列の255文字までの制限を撤廃しました。上限はメモリ制限のみとなります。
	（例）'#Str <r>,30,1000
	　Str 1～Str 30まで999文字までの長さで文字列処理できます。<r>は[ALPHA]+[X^2]

	・行列の再確保でアドレス指定した場合、それまで確保されていた同じ行列が消去されなかった不具合を修正しました。

	・ルートフォルダで表示するファイルの拡張子に.binを追加しました。
	　表示するファイル（g3m,g1m,txt,g3p,bmp,bin）
	・サブフォルダではすべてのファイルを表示します。

	・ファイルのCopy/Renameの制限を緩めました。
	　bin等のファイルでもCopy/Renameが可能です。

	・Mat/List/Vct一覧画面でListFileが2以上の場合にリスト表示がおかしかったのを修正しました。

	・Str、Graph(Y)、fn変数の確保で実体となる行列の要素数が減っていたのを修正しました。
	（例）"CDE"->Str 5
	 　Str 1,Str 2,Str 3,Str 4,Str 5が確保されます。
	（例）"ABC"->Str 1
	 　Str 1だけになっていました。


ｖ0.60α　2018.11.15	アルファ版（インタプリタのみ）
	・Str、Graph(Y)、fn変数の確保方法を変更しました。
	　併せてデフォルトの最大確保数をそれぞれ20から127まで増量しました。
	（例）"ABC"->Str 1
	 　Str 1だけ確保されます。
	（例）"CDE"->Str 5
	 　Str 1,Str 2,Str 3,Str 4,Str 5が確保されます。

	・fn変数の実体になるデフォルト行列をz（小文字）に変更しました。
	　Str変数のデフォルト　　：<ｒ>
	　Graph(Y)変数のデフォルト：θ
	　fn変数のデフォルト　　　：z

	・ClrVct 変数名が動作しなかった不具合を修正しました。

	・DrawStatで画面外と結ぶ描画が出来なかった不具合を修正しました。

	　2018.11.12	・ClrVctが動作しなかった不具合を修正しました。

	・Graph(Y)とfnの引数の動作を修正しました。
	（誤）"X+5"->fn1
	　　　fn1(X=7)で返る値は(1)+5
	（正）"X+5"->fn1
	　　　fn1(X=7)で返る値は(7+5)

	・StrShift(が非互換だったのを修正しました。
	・StrSrc(コマンドの検索開始位置が文字列長以上の場合に0が返らない不具合を修正しました。
	・StrMid(コマンドで第二引数が0のときに返る文字列がNULL文字列になっていなかった不具合を修正しました。
	・StrLen(,StrCmp(,StrSrc(.Exp(コマンドの乗算省略が出来てなかった不具合を修正しました。

	・Mat/List/Vct表示においてListのAns/r/Thetaの表示を修正しました。
	・Listの閉じカッコの"}"を省略した場合の不具合を修正しました。
	・Listのラベル名に文字変数が使えなかった不具合を修正しました。

	・複素数でのAnd,Or,Not演算が間違っていたのを修正しました。
	・1以下の実数のAnd、Orが非互換だったのを修正しました。
	（誤）0.1 And 0.2 -> 0
	（正）0.1 And 0.2 -> 1

	・g1mモードのPictファイルが1024バイト未満のときに空白で埋めるようにしました。


ｖ0.59α　2018.11.4	アルファ版（インタプリタのみ）
	・BmpLoad(コマンドのVRAMへの1ビットBMPのロードで右端処理が8ドット単位になっていたのを修正しました。

	・Mat/List/Vct表示においてVctの編集画面での表示を修正しました。

	・ListのFileをサポートしました。
	（例）File　2
	　2つめのファイルリストを使用します。
	　純正とは違って52個ずつのファイルとなります。
	　内部実装はFile 1のList 53がFile 2のList 1になります。
	　事前にセットアップで必要なFile数を確保してください。

	（例）File　0
	　Mat/List/Vct表示で通し連番リストで使用します。

	・不等号および積分のGraphを簡易的にサポートしました。（※単一グラフの描画のみです。）


ｖ0.58α　2018.11.3	アルファ版（インタプリタのみ）
	・Trnコマンドをエンバグしていたのを修正しました。
	・StrRotateコマンドの回転方向が逆だったのを修正しました。
	・Text/LocateYXコマンドの座標指定が範囲外のときにシステムエラーになる場合のある不具合を修正しました。

ｖ0.58α　2018.10.21	アルファ版（インタプリタのみ）
	・Trnコマンドを含む数式でメモリエラーになることのある不具合を修正しました。

	　2018.10.16	・エディタでプログラム最後尾へのジャンプが出来ない場合があった不具合を修正しました。
	・BmpSaveコマンドでエンバグ(0.57)していたのを修正しました。
	・_Hscroll、_Vscrollコマンドを最適化しました。従来比1.5倍速くなります。

	　2018.10.11	・グラフックス画面とテキスト画面を合成するコマンド、Screen.OTの下2ラインをミスっていたので修正しました。
	・ファイル名入力時のアルファロックから[ALPHA]で解除出来ない不具合を修正しました。

	　2018.10.10	・[AC]キーのSTOP判定を減らしました。
	　結果、Break On時でもBreak Offとほぼ変わらない速度となりました。

	・Listの自動確保を修正しました。
	・raph(Y)とfnのXを引数に持つ場合の動作を修正しました。
	（誤）"X+5"->fn1
	　　　fn1(7)で返る値は(X+5)*7
	（正）"X+5"->fn1
	　　　fn1(7)で返る値は(7+5)

	・変数一覧をミニフォントで表示するモードを追加しました。（エディタの文字の大きさに準じます。）

	　2018.10.6	・アンダーバーより始まる拡張変数を最大52個から99個に増量しました。
	　併せて変数のAlias数も99個に増量しました。
	・変数一覧で拡張変数表示の時に[F1]枠で使用拡張変数の数を表示するようにしました。
	　[拡張変数の使用数:エイリアス全体の使用数]
	・変数一覧にスクロールバーを追加しました。


ｖ0.57α　2018.10.5	アルファ版（インタプリタのみ）
	・シリアル系コマンドが使えるようになりました。（FX機互換です。）

	　2018.10.3	・アンダーバーより始まる変数を最大26個から52個に増量しました。
	・Aliasコマンドで使用数が超えた場合の不具合を修正しました。
	　Aliasコマンドで別名使用できる数は以下のとおりです。
	　-変数　64個　（アンダーバーで始まる変数を含みます。）
	　-行列/Vct　26個
	　-ラベル　26個
	・Trnコマンドの引数の式評価を修正しました。
	（誤）Trn Mat A+Mat B　-> Trn (Mat A+Mat B)
	（正）Trn Mat A+Mat B　-> (Trn Mat A)+Mat B

	　2018.9.29	・複素数のUnitV(とNorm(コマンドの結果が間違っていたのを修正しました。
	・整数モードでもベクトルコマンドをサポートしました。
	・複素数の行列表示を横2だったのを横3に変更しました。
	・行列のノルム計算に対応しました。

	　2018.9.18	・行列のべき乗計算に対応しました。

	　2018.9.15	・以下のベクトルコマンドを追加しました。
	　Vct
	　DotP(
	　CrossP(
	　Angle(
	　UnitV(
	　Norm(
	　ClrVct
	（※Vct A～ZのベクトルはMatと独立した領域を使用します。θ、ｒ、Ans、小文字以降は共通となります。）

	・行列一覧では[VARS]でVct表示への切り替えとなります。

	・逆行列と行列の二乗計算に対応しました。

	・ClrListのみの場合、小文字行列(List 27～52)が消去されていた不具合を修正しました。
	　修正後はList 1～26の消去となります。


ｖ0.56α　2018.8.29	アルファ版（インタプリタのみ）
	・同梱させていただいているCG版フォントエディタのファイル名を変更しました。
	　FEINT35S.g3m -> FEINT35C.g3m
	　FEINT35S.txt -> FEINT35C.txt

	・G3MモードのReadGraph/DotGetコマンドにおいて1ビットデータが使用できなかった不具合を修正しました。
	・ML系コマンドでカラー指定がデフォルトに戻ってなかったのを修正しました。

	　2018.8.27	・Xを(0x90)キャラクタで使用している場合のXとAns変数を、整数モードにおいて行列の要素で使用した場合エラーになっていた不具合を修正しました。

	　2018.8.25	・[F5](CHAR)選択で[VARS]キーの機能を変更しました。
	（従来）ノーマルフォントとデフォルトミニフォント表示の切り替え。
	（変更）フォントサイズにかかわらず、デフォルトフォントとC.Basicフォントの切り替え。

	　2018.8.22	・Matエディタ編集画面で[SHIFT]+カーソルキーで改ページ出来るようになりました。

	　2018.8.19	・再帰プログラムでスタックエラーが出た時に[EXIT]を何度も押さないと終了しなかった不具合を修正しました。

	・C.Basicコマンド入力でScreenコマンドの配置がずれていたのを修正しました。

	　2018.8.15	・エラーポップアップ後にシステムエラーが発生することがあるので、
	　[SHIFT]+[6]の16ビットカラー選択画面をC.Basicポップアップに変更し、エラーポップアップは純正仕様のポップアップに戻しました。

	　2018.8.9	・ファイル名入力時、[F1][F2][F3]ファンクションキーを押すとアルファ大文字モードになってしまう不具合を修正しました。

	　2018.8.5	・RGB(、HSV(、HSL(コマンドで16ビットカラー値をダイレクト指定する#オプションを追加しました。
	（例）RGB(#12345)
	（例）HSV(#12345)
	（例）HSL(#12345)
	 16ビットカラー値12345を指定します。

	・GBモードon/FullでCHAR選択画面を開いてGBコードを表示後、GBモードoffで再度CHAR選択画面を開くと空白画面になる不具合を修正しました。
	・GBモードで文字列を強制的にGB offにする%%オプションを追加しました。
	（強制的にGB Fullにする##オプションの逆の機能になります。）

	・ファイル名入力時のアルファロックのステータス表示のちらつきを修正しました。
	・行列のDim設定で不正な値を入力後[EXE]→[EXIT]で抜けられなかった不具合を修正しました。
	・行列エディタでドットエディタのカラー設定が文字列表示に影響していた不具合を修正しました。

	　2018.8.4	・Graph Y=コマンドで" "が必要だった非互換性を修正しました。
	・Fix/Sci/Nrmの設定において、空白で[EXE]を押すと再入力になるように修正しました。

	　2018.8.3	・CHAR選択画面でメインメニューに戻ると復帰できないので、[MENU]キーを無効にしました。
	・[SHIFT]+[6]の16ビットカラー選択画面で数値入力をする際にエラーが起きるとファンクションメニューがおかしくなる不具合を修正しました。
	・SEARCH/REPLで、"Not Found"ポップアップ時に現在の行数が表示されていたのを修正しました。
	・PopUpWin(コマンドのYes/Noポップアップで、[AC]中断時に正常に中断できなかった不具合を修正しました。
	・一行入力時、動作が定義されていないファンクションキーを押すと、[EXE]と同様の動作をしてしまう不具合を修正しました。
	・Fix/Sci/Nrmの設定において、空白で[EXE]を押すと0になっていた不具合を修正しました。

	・ファイルリストのお気に入りカラーを任意に設定できるようになりました。セットアップで設定出来ます。

	・SETUP、変数一覧、行列一覧において、[SHIFT]+[↑]/[↓]で1ページずつスクロールできるようにしました。
	・txtからg1m/g3mへの変換時にデフォルト以外の任意の形式で選択保存できるようにしました。


ｖ0.55α　2018.7.30	アルファ版（インタプリタのみ）
	・ElemSize(コマンドで4ビット行列のサイズが1になっていたのを修正しました。

	　2018.7.29	・Cls/ViewWindowコマンド後もテキストモードの場合は"Done"表示しないように修正しました。
	・セットアップのPict modeがHeap以外の設定の時に起動が遅くなる不具合を修正しました。

	・Colon様に以下の文書を改訂(校正＆追加＆修正)していただきました。
	　ReadmeCG_J.txt
	　Command_List_CG.txt
	　Extended_opcode_list.txt
	　併せて対応する英文文書も更新しました。

	　2018.7.25	・実数モードで4bit行列の奇数行(base1)、偶数行(base0)の値設定が出来なくなっていた不具合を修正しました。

	　2018.7.23	・エディタの置換において、ファンクションメニューが残っていた不具合を修正しました。
	・エディタの置換において、[F4](ALL)と[F5](ALL+)において[AC]中断で置換モードが終了していた不具合を修正しました。

	・[F2]-[F3]行列確保において、bit選択の数値入力で4が受け付けられなかった不具合を修正しました。

	　2018.7.21	・SETUPのPlot/LineCol設定で8色以外設定できなくなっていた不具合を修正しました。
	・V-WinのXscale、Yscaleに負の値を設定した場合、絶対値になるように修正しました。
	・一行入力時にALPHAモードの切替が不安定だったのを修正しました。

	　2018.7.21	・一行入力時に[F4](A<>a)切り替えが機能しなくなっていた不具合を修正しました。

	　2018.7.16	・一行入力時に[MENU]コマンド履歴で、[AC]入力履歴初期化を行うと動作が異常になる不具合を修正しました。
	・セットアップの時刻設定で秒設定がMin表記となっていた間違いを修正しました。
	・V-Win設定でエラーになったときの[F4][F5]ファンクションメニュー表示を消去しました。
	・エディタの検索/置換で文字列無しの場合に[AC]を押すとファンクションメニューがリセットされていたのを修正しました。

	・" "出力仕様をfx-5800P互換モードとFX/CG互換モードの切り替えをするオプションコマンドを追加しました。
	（書式）'#58
	　fx-5800P互換出力になります。
	（書式）'#98
	　fx-9860G/CGシリーズ互換出力になります。

	  2018.7.10	・" "出力の仕様をFX/CGシリーズ仕様に変更しました。
	・C.Baisic入力モードでの1行入力時に[F3](COMMAND)と[OPTN]/[VARS]/[SHIFT]+[VARS]を切り替えると元の画面に戻らなくなる不具合を修正しました。

	  2018.7.7	・CG50の隠しRAM使用時のデバッグモードでシステムエラーが起きる不具合を修正しました。
	・Listのラベルで8文字未満のラベルの場合に認識されてなかった不具合を修正しました。
	・行列一覧画面で[ALPHA]+[アルファベット][θ][<r>]、[SHIFT]+[(-)](Ans)、[X,θ,T]でジャンプ出来るようになりました。

	  2018.7.3	・行列値を求めるDetコマンドを追加しました。
	・エディタの文字列色で"＼＼"の場合に文字列終了していなかった不具合を修正しました。
	・エディタの行数表示が[SHIFT]時に消えていたのを修正しました。
	・"Search For Text"、"Replacement Text"、"View Window"の文字色を青に変更しました。
	・Back-Colorを設定している場合に各種ポップで背景がBack-Colorになっていた不具合を修正しました。
	・数値入力の?コマンドで[SHIFT]+[6]で6が入力されていた不具合を修正しました。
	・[SHIFT]+[6]のカラー選択ポップアップを多重起動できないようにしました。
	・デバッグモード時のステータスライン背景色変更が、CHAR選択、変数一覧、行列一覧で解除されていたのを修正しました。
	・バイナリエディタでカーソルが残る不具合を修正しました。
	・CHAR選択での上下スクロール矢印表示を改善しました。
	・[SHIFT]-[F3](V-Win)で値変更後、グラフィックスVRAMを消去するようにしました。
	・エディタの検索実行中に[F2]で検索画面に戻っていた不具合を修正し、[F6]に再度検索画面に戻るRETRY機能を新設しました。
	・[ALPHA]+[AC]+[ALPHA]等でALPHAモードにならなかった不具合を修正しました。
	・x10形式の指数表示がプログラム実行時以外に適用されてなかった不具合を修正しました。

	　2018.6.28	・エディタのデバッグモード時に[SHIFT]+[EXIT]でプログラムを実行してしまう不具合を修正しました。

	  2018.6.27	・お気に入りの表示色を変更してみました。
	・デバッグモードから再開する時に画面が復帰しない事がある不具合を修正しました。
	・ALPHAモードでCHAR選択画面の[X^2]（GB切り替え）が機能しなかったのを修正しました。

	　2018.6.26	・2進数と16進数の0b0,0b1,0b2,0x1,0x2,0x3のテキスト変換がエスケープ扱いになっていたのを修正しました。

	・V-Win設定画面からV-MEMへのアクセスを追加しました。
	・V-Win設定でTθmaxとTθptch のデフォルト値が違っていたのを修正しました。
	・Tθptchへの代入値が0の場合にエラーになるようにしました。

	・デバッグモード時にはステータスラインの背景を変更するようにしました。（Colon様の新発見SysCallで実現しました。）
	・行番号表示のデフォルト色をシアンから黒に変更しました。
	・エディタの入力モードがC.Basicモードの場合に[F6](G<>T)が使えなくなってしまったのを修正しました。
	・C.Basicモードのコマンド入力ポップアップとコマンド入力履歴にスクロールインジケーターの上下矢印を追加しました。
	・プログラムをデバッグモードで起動したとき、[EXIT]でデバッグモードを抜けた後にファンクションキーが正常動作しなかった不具合を修正しました。
	・デバッグモードから抜ける場合の確認ポップアップを追加しました。（セットアップで設定します。）
	・セットアップのFix/Sci/Nrmの桁数指定で[EXIT]で抜けた場合に設定されてしまう不具合を修正しました。

	  2018.6.24	・g3pファイルの読み込みに対応しました。
	　RclPict/RclCaptコマンドで純正のg3pファイルが読み込めます。
	（※ヒープメモリの使用サイズを86KB以下に設定してください。）


ｖ0.54α　2018.6.22	アルファ版（インタプリタのみ）
	・ストレージメモリへの保存に時間のかかっていた不具合を修正しました。
	　( 参考 http://www.casiopeia.net/forum/viewtopic.php?f=11&t=1740&start=50#p14530 )
	・メインメモリへのコピー後にファイルリストが異常になることがある不具合を修正しました。
	・AT DebugModeがoffの場合、[AC]Breakによる一時停止から再び動作してしまう不具合を修正しました。

	  2018.6.21	・a0,a1,a2,b0,b1,b2,c0,c1,c2,x1,x2,x3,y1,y2,y3,n1,n2,Q1,Q3,f1,f2,f3,f4,f5,f6
	　以上の特殊変数と同じ形式の行列省略形がテキスト変換時に特殊変数扱いになってしまっていたのを修正しました。
	　特殊変数と重なる行列省略形の添字はエスケープされます。
	　a0(特殊変数) → a0
	　a0(行列省略形) → a＼0
	　x3(特殊変数) → x3
	　x3(行列省略形) → x＼3

	・ビットマップ描画系コマンド(WriteGraph、_Bmp等）において16ビットカラー描画になる場合、
	　ビットマップデータのアドレス指定が奇数の場合はエラーになるようにしました。

	・SortA/Dコマンドで引数が2つの場合にシステムエラーになることがあったのを修正しました。

	  2018.6.20	・16ビットカラーのビットマップ描画において透過色指定するためのコマンドとしてTransp-Colorを追加しました。
	（書式）Transp-Color
	　透過色の設定を解除します。
	（書式）Transp-Color　カラー
	（例）Transp-Color Green
	　透過色を緑に設定します。
	（書式2）Transp-Color　#16ビットカラー値
	（例）Transp-Color #12345
	　透過色を16ビットカラー値12345に設定します。

	・エディタの一斉コメント化/解除機能で範囲指定がない場合の動作を改善しました。

	・a0,a1,a2,anStart,b0,b1,b2,bnStart,c0,c1,c2,cnStart、
	　R Start,R End,D Start,D End,D pitch,F Start,F End,F pitch,H Start,H pitchを自動的に拡張変数として使用するようにしました。
	（※Aliasでの変数割当があればそれが優先します。）

	　2018.6.19	・Augment(コマンドでメモリエラーになることがあるのを修正しました。

	  2018.6.16	・StoV-Win/RclV-Winコマンドで引数に6の指定が出来なかった不具合を修正しました。

	・g1mモードで_Bmpコマンドの[,C]オプションがFX版と非互換になっていたのを修正しました。
	（※FX版では描画データを画面内に収まるようにクリッピングして描画する指定です。）

	._Bmp,_Bmp8,_Bmp16コマンドの16ビットカラーモードのOr,And,Xor対応しました。
	（従来は強制的に上書き固定でしたので、強制上書き指定で[,N]オプション追加しました。）
	（16ビットカラーモードではオプション無指定の場合は上書き描画になります。それ以外はOr描画になります。）
	（書式）_Bmp ビットマップint行列へのポインタ, X, Y, width, height [,O/A/X/N] [,C]


	・Listの初期化で要素の[1]～[9]までの自動確保においてゼロ初期化が足りなかったのを修正しました。
	（※Ver 0.52で初期化し過ぎていたのを修正したときのエンバグです。）
	・Min(、Max(、SortA(、SortD(コマンドの引数が複素数を含む場合、純正互換仕様にて対応しました。

	・サブプログラムのReturnで[AC]中断になった場合に中断処理が出来てなかった不具合を修正しました。

	・複素数モードにおけるLCM(コマンドの不具合を修正しました。
	・ViewWindowの設定でg1mモードとg3mモードの切替が出来てなかったのを修正しました。
	・StrAsc(コマンドのテキスト変換が出来てなかったのを修正しました。

	・(-)の式評価順序を純正に合わせました。
	・?コマンドでの入力時にステータスアイコンが現在の状況を示していなかった不具合を修正しました。
	・プログラム中でのg1mモードとg3mモードの切替が不完全だったのを修正しました。

	・Listのラベルに対応しました。
	　要素の開始が1の場合（デフォルト）では、純正と同じく、
	（書式）"LABLE"->List 1[0]
	　要素の開始が0の場合は、
	（書式）"LABLE"->List 1[-1]
	　でラベル設定ができます。

	（書式）List 1[0]->Str 1
	（書式）List 1[-1]->Str 1
	　ラベル名を文字列として取得することも出来ます。


ｖ0.53α　2018.6.10	アルファ版（インタプリタのみ）
	・ファイル名入力で空白の場合は再入力になるように純正仕様に変更しました。

	・ファイル名指定のBmpSave@ BmpLoad(@コマンドにおいてフォルダ指定ができなかった不具合を修正しました。
	（例）BmpLoad(@"/@Font/@MFONTA.bmp")

	・@Fontフォルダよりデフォルトの外部フォントを読み込むBmpLoad @@を追加しました。
	（書式）BmpLoad(@@G)
	（書式）BmpLoad(@@GL)
	（書式）BmpLoad(@@GM)
	（書式）BmpLoad(@@K)
	（書式）BmpLoad(@@KL)
	（書式）BmpLoad(@@KM)
	（書式）BmpLoad(@@A)
	（書式）BmpLoad(@@AL)
	（書式）BmpLoad(@@AM)
	　@Fontフォルダからデフォルトフォントファイルをロードします。

	・Ver 0.49α以降、CG50において隠しRAM使用時にコマンド入力後、パスワード入力画面に移行していた不具合を修正しました。
	・[F5](CHAR)選択において左上1番目の文字がエスケープされなかった不具合を修正しました。
	・GetFont(、GetFontMini(コマンドにおいてエスケープされたキャラクタがバックスラッシュになっていた不具合を修正しました。

	・トレース時のシステムエラー対策しました。（…まだ直ってないかもしれません。(^^； ）
	・一行入力時に[SHIFT]+[5]/[6]でコマンド入力ができなかったのを修正しました。
	・Edit GB Fontがoffの場合に、プログラム中で'#GB1/2コマンドや##でGBフォントを有効にしたときに
	　?コマンドでエスケープ付きOpCodesが入力出来なかったのを修正しました。
	・StrAsc(コマンドで、エスケープ付きOpCodesの値が取得できなかった不具合を修正しました。
	・エディタの[Menu](コマンド入力履歴)からエスケープ付きOpCodesを入力できなかったのを修正しました。

	・Colon様に以下の文書を改訂(校正＆追加＆修正)していただきました。
	　ReadmeCG_J.txt
	　ManualCG_J.txt
	　Command_List_CG.txt
	　Mat_List.txt
	　ErrorCode_List.txt
	　Extended_opcode_list.txt
	・複素数導入の0.50よりDBLモードにおいてIf、While、Doコマンドにおいて条件判定が整数判定に戻っていたのを修正しました。

	・Getkey@1/2において[ALPHA]+[EXP(x10)]を押すと[AC]中断になっていたのを修正しました。
	・Getkey1/2において、[SHIFT]+[5]、[ALPHA]+[(-)]、[ALPHA]+[DEL]でキーコードが返らなかったのを修正しました。

	・行列をアドレス指定で再割当てした場合、割当先データが変更されてしまうことがあったのを修正しました。
	（※アドレス指定で確保した行列は一覧表示で*マークが付きます。）

	・コマンド入力モードがC.Basicのとき、コマンド入力時に0xFFFFが同時に入力されることがあるのを修正しました。
	・コマンド入力モードがStandardのとき、[SHIFT]→[MENU]→[F6]→[F6]→[F2]→[EXIT]で一つ前に戻らない不具合を修正しました。
	・一行入力時にも[SHIFT]+[F5](A<>a)と[SHIFT]+[F6](CHAR)を有効にしました。
	・カラーピッカーで白(R,G,B)=(248,252,248)のHSV値がおかしくなっていたのを修正しました。

	・エディタで[F1](JUMP)モードの時、[SHIFT]+[F6](CHAR)で連続入力モードにした場合、エディタが無反応になる不具合を修正しました。

	・複素数モードにおいて、MatおよびListの要素に複素数を含む場合にエラーになっていた不具合を修正しました。

	・単位行列を生成するIdentityコマンドを追加しました。

	・DrawStatコマンドを一部CGモードに対応しました。
	（例）S-Gph1 DrawOn,xyLine,List 1,List 2,1,Square[,ColorLinkOff][,Black]
	　[,ColorLinkOff]はまだ機能しません。

	・DrawGraphで描画したグラフが、一時停止や終了時に消えてしまっていた不具合を修正しました。

	・グラフ描画後のトレースを一部修正しました。

	・GridLineとAxesScaleコマンドを追加しました。

	・複素数モードにおいて、Notが論理Notではなくビット反転演算になっていた不具合を修正しました。
	・複素数モードにおいて、RanList#/RanNorm#/RanBin#の返り値が複素数Listにならなかった不具合を修正しました。
	・複素数モードにおいて、Int÷の結果が実数値になっていたのを修正しました。

	・複素数モードにおいて、整数引数に複素数を含む数式がある場合に文法エラーになっていた不具合を修正しました。

	・0x90のXを使用した場合、[Lbl X][List X][Mat X]でエラーになっていた不具合を修正しました。

	・SortA(、SortD(コマンドにおいて1未満の実数値でソートされていなかった不具合を修正しました。
	・SortA(、SortD(コマンドの複素数引数におけるソートの仕様が非互換だったのを修正しました。
	　今までは引数に指定されたすべてのListが個別にソートされていました。
	　修正後は、第一引数で指定されるListのソートにリンクして二番目以降のListがソートされます。


ｖ0.52α　2018.5.21	アルファ版（インタプリタのみ）
	・CG10/20での起動時、自動オーバークロックが必要な場合にポップアップで確認するようにしました。
	（※セットアップで自動オーバークロックしないようにすることも出来ます。）

	・エディタの[SHIFT]+[F5]は[A<>a]機能に固定し、[SHIFT]+[F6]はデバッグモード以外では[CHAR]選択に変更しました。
	（※[G<>T]は[SHIFT]+[F3](V-WIN)-[F6]に新設しました。さらに[SHIFT]+[F3](V-WIN)-[F4]で現在のViewWindowの値を参照/変更できるようにしました。）
	（※fx-5800P互換のC.Basic入力モードの場合は、[SHIFT]+[F4]で16進ダンプモードに入ります。）

	・カラーピッカーを選択するアイコン[RGB]を[Picker]に変更しました。
	・ファンクションキーの色変更に一部対応しきれていなかったのを修正しました。

	・GetMini(コマンドにオプション追加でMiniMiniフォントとMiniMiniBoldフォントに対応しました。
	（書式）GetFontMini("フォントキャラ")M->Mat A
	（書式）GetFontMini("フォントキャラ")MB->Mat A
	（例）GetFont("A")M->Mat A
	　MiniMiniフォント"A"のビットマップデータ(8x10)が1ビット行列Mat Aに入力されます。
	（例）GetFont("A")MB->Mat A
	　MiniMiniBoldフォント"A"のビットマップデータ(9x10)が1ビット行列Mat Aに入力されます。

	・複素数（16バイト）のPoke(、Peek(に対応しました。
	（例）Peek(&A).C
	（例）Poke(&A).C,123+456i

	・行列の再確保で初期化し過ぎていたのを修正しました。
	（例）{10,1}->Dim Mat A.B
	-1->Mat A
	{1,1}->Dim Dim Mat B.B(&Mat A)
	[[1]]->Mat B.B
	　Mat Bは、
	　[[1][-1][-1][-1][-1][-1][-1][-1][-1][-1]]
	　となるはずですが、
	　実際はこうなってました。
	　[[1][0][0][0][0][0][0][0][-1][-1]]

	・RGB(コマンドと同等なHSV(とHSL(コマンドを追加しました。
	（書式）HSV(H,S,V)
	（書式）HSL(H,S,L)
	　H:0～359
	　S:0～255
	　V:0～255
	　L:0～255

	・GBモードにおけるカーソル右移動を修正しました。
	・GBモード1バイトのエスケープ文字を修正しました。

	・FX標準フォントにあってFXミニフォントに無いフォントを追加しました。（Colon様に作成していただきました。以下詳細です。）
	　-以前作成したFXノーマルフォントのうち、0xE5EA、0xE5EB、0xE6AEを修正
	　-既存のミニフォントのうち、0xCD(r)、0xCE(θ)、0xE5B2(r)、0xE5B3(X)、0xE5B4(Y)について、太字化するなど修正
	　-既存のミニフォントのうち、0xE6B8(∮)が0xE599(￠)と同じだったのを修正
	　-既存のミニフォントのうち、0xE6B9(∂)の字形の微調整
	　-既存のミニフォントのうち、0x5C(＼)、0xE69E(?)をPDF記載の字形に修正
	　-MATH、SYMBOLの完全対応
	　-ギリシャ文字、キリル文字をそれぞれ大文字小文字ともにすべて追加
	　-0xE5A9、0xE5AAの追加

	・フォルダの作成が出来なかった不具合を修正しました。

	・GBモードにおいてエスケープした1バイト文字が表示されなかった不具合を修正しました。

	・[F5](CHAR)選択画面の[VARS]オプションにおいて0x5Cでエスケープした文字が表示されなかった不具合を修正しました。
	・MenuコマンドでGBモードを有効にする##オプションが使えなかった不具合を修正しました。
	・?()オプションにおいて値が0の場合に表示されなかった不具合と虚数入力でシステムエラーになっていた不具合を修正しました。
	・数式後に区切り文字が無いとエラーにするようにしました。



ｖ0.51α　2018.5.14	アルファ版（インタプリタのみ）
	・複素数対応しました。
	　DBL#モード、INT%モードに加えてCPLXモードを追加しました。セットアップで切り替え出来ます。
	　行列のデフォルト確保サイズが128ビット(CPLX)になります。
	　また従来どおり実行モードをコマンド切り替えも出来ます。
	（書式）'#CBCPLX
	　（※複素数モードの関数計算は仮対応なので結果がおかしいものは順次修正していきます。）

	・GBモードにおいて、GBコードの2バイト目がコマンドおよび特殊文字と重なるGBコード（0x**E5,0x**E6,0x**E7,0x**F7,0x**F9）におけるカーソル左移動を改善しました。
	　新しい左移動は、左に0x04以上0x5C未満のコードが現れるまで遡った後、右方向にカーソル移動して1バイト文字か2バイト文字かを確定します。
	・GBモードにおいて、GBコードと重なる1バイト文字(0xA9等）を0x5Cでエスケープしました。0x5C+0xA9のように2文字コード扱いになります。

	・行列エディタのClip&Pasete機能に{m,n}⇔{X,Y}切り替えを反映させるようにしました。

	・一部ファンクションキーのアイコンをシステムアイコンに変更しました。

	・StrLenコマンドに文字列の実バイトサイズ結果を返す@オプションを追加しました。
	（書式）StrLen(@"ABCDE")
	（書式）StrLen(@Str 1)

	・GBモードでのキャラクタ選択モードにおいて、0x7F**文字をエスケープ文字扱いに変更しました。
	・指数表示の不具合を修正しました。

	・sinの引数がπの整数倍になる時に結果がゼロにならないのを改善しました。
	　cosも同様に修正しました。
	（例）sin π
	（例）cos (π/2)

	・ステータスラインのアイコン表示に対応しました。（アイコン画像はColon様に作成していただきました。）
	・ファイルリスト表示とセットアップにスクロールバーを追加しました。

	・CGカナフォントファイルの"。「」"の順番を修正しました。
	・FXフォント（0x7F50,0x7F53)を修正しました。

	・小数点以下桁数指定で丸めるRndFix(コマンドに、有効桁数指定で丸めるSciオプションを追加しました。
	（書式）RndFix(数式, Sci 桁数)
	（例）RndFix(1.23456789e-123,Sci 5)
	　1.2346e-123が返ります。

	・CGフォントにあってFXフォントに無い6x8フォントを追加しました。（Colon様に作成していただきました。）


ｖ0.50α　2018.5.5	アルファ版（インタプリタのみ）
	・エディタで[SHIFT]+[7]キャプチャ機能が使用可能になりました。

	・行列エディタのドット編集モードにおいて[SHIFT]+[5],[SHIFT]+[6]でカラー指定が出来るようになりました。
	　カラー指定後は[F1]キーでそのカラーでの描画が出来ます。
	　また[SHIFT]+[F1]で現在のカーソル位置のカラー値を[F1]に設定出来ます。

	・クリップボードにコピーした後に[SHIFT]→[8]→[SHIFT]と順に押すと、SHIFTモードに戻らない不具合を修正しました。
	・エディタ表示前にカーソルが表示されてしまうのを修正しました。
	・REPL ALL+終了後にカーソルが飛ぶことがある不具合を修正しました。
	・CHAR選択で、[SHIFT]→左右キー/[OPTN]/[VARS]/[x^2]が機能しない不具合を修正しました。
	・CHARの連続入力時、[OPTN]や[VARS]のオプションが解除されてしまう不具合を修正しました。
	・SETUPの[F1]の色設定で[EXIT]を押すと黒になってしまう不具合を修正しました。
	・SETUPの反転選択を解除しないように変更しました。
	・RGB指定ポップアップで、直接数値入力時に赤緑青の色が反転していたのを修正しました。
	・RGB指定ポップアップの下側1ラインが消去されていたのを修正しました。

	・1行入力においてクリップボードを有効にしました。
	・1行入力開始時の大文字/小文字アイコンの表示切り替えが出来ていなかったのを修正しました。

	・Getkey1/2において、SDKのキーコードを取得することが出来るようになりました。
	（書式）Getkey@1
	（書式）Getkey@2
	　[@]オプション追加でSDKのキーコードが返ります。

	・一要素が4ビットの行列を追加しました。（※8ビット以上の行列とは違い、{m,n}と{X,Y}が逆になっている1ビット行列仕様です。）
	　型指定は、NibbleのNで指定します。
	（書式）{16,8}->Dim Mat A.N


ｖ0.49α　2018.4.27	アルファ版（インタプリタのみ）
	・Colon様の発見されたOS互換の書式でのGBコード表示/入力に対応しました。

	・0x03、0xA8コードはGBコード表示への切り替えコードとなります。エディタでの表示キャラクタは特殊文字0xE59A(C)で反転表示されますが実行時は表示されません。
	　ENGキャラクタの
	　[OPTN]-[F6]-[F6]-[F1](ENG-SYM)-[F3](n)とべき乗記号[^]で入力することが出来ます。
	　内部では0x03A8の2バイトコードとして扱われます。

	・0xE5～0xE7で始まる特殊文字はエスケープで混在表示できます。
	　例えばGBコードと重なる0xE5E8の場合、
	　0x5CE55CE8
	　の4バイトコードとなります。
	　4バイトコードはエディタ上の表示は反転表示になりonとFullでも違ってきます。
	　onだと0x5CE55CE8は特殊文字反転表示、GBコードの0xE5E8は特殊文字で表示されます。
	　FullだとOS互換の混在表示になります。
	　ただし、文字列の始めに0x03A8コードがあればそれ以後の文字列はすべてFull表示になります。文字列コマンドの終了で元に戻ります。

	・エディタのGBフォント表示に対応しました。セットアップで設定します。
	　off:GBフォントを表示しません。通常のモードです。
	　on:コマンド＆特殊文字と重なるF7xx,F9xx,E5xx,E6xx,E7xxのGBコードを除いて表示します。
	　　（※文字列に0x03A8コードがあればそれ以後の文字列はFull表示になります。文字列コマンドの終了でon表示に戻ります。）
	　Full:内蔵のすべてのGBフォントを表示します。（GBコードと重なる一部コマンドがGBフォントに化けます。）
	　　（※この設定はエディタとテキスト変換で有効になります。プログラム内での制御は以下のコマンドを使用して下さい。）

	・プログラム内制御コマンド
	（書式）'#GB0
	　GBフォントを表示しません。従来のモードです。
	（書式）'#GB1
	　以後、コマンド＆特殊文字と重なるF7xx,F9xx,E5xx,E6xx,E7xxを除いてGBコードとして表示します。
	（書式）'#GB2
	　以後、内蔵のすべてのGBコードを表示します。

	・GBフォントのキャラクタ選択入力に対応しました
	　[F5](CHAR)選択において[X^2]キーを押すとGBコード選択入力が出来ます。
	　（※プログラム実行中では'#GB1か'#GB2になっている必要があります。）
	　（※GBフォントと混在出来るエスケープされる特殊文字は背景が黄色で表示されます。）
	　（※[OPTN]でミニフォント表示になります。）

	・文字列表示コマンドで強制的にGBフォントが表示することが出来ます。
	　制御コマンドでGBコードがoffの状態でも文字列の直前に##を置くことでFull設定でのGBフォント表示が出来ます。
	（書式）##"GB文字列"
	（書式）Locate x,y,##"GB文字列"
	（書式）LocateYX py,px,##"GB文字列"
	（書式）Text py,px,##"GB文字列"

	・?入力コマンドで直後に##を置くことでFull設定でのGBフォント入力が出来ます。
	（例）?##->Str 1
	（例）?##(5,3,15,"_")->Str 1

	・GetFont、GetMiniFontコマンドの引数の直前に##を置くことでFull設定でのGBフォントデータの取得が出来ます。
	（例）GetFont(##0xA4A2)->Mat A

	・GBフォントの横18ドット表示に対応しました。LocateコマンドをLocateYX同様に拡張しました。
	　座標指定がテキスト座標かピクセル座標かという違いのみになります。
	（書式）Locate [@][!]csrX,csrY,[##]"文字列"or数式 [,N/O/R/V][,F][,フォント縦ドット数]
	　　[@]　現在のVRAMに描画します。
	　　[!]　外部フォントが導入されていても標準内蔵フォントで描画します。
	　　[##] GBフォントを表示します。
	　　[,N] Normal
	　　[,R] Reverse
	　　[,O] Or
	　　[,V] reVerse or
	　　[,F] 通常、GBフォントは24ドット表示ですが、18ドット幅固定ピッチで表示します。

	　この追加により、LocateYXのフォント縦ドット数オプション指定の順序が一つずれます。
	（書式）LocateYX [@][!]Y,X,[##]"文字列"or数式 [,N/O/R/V][,F][,フォント縦ドット数]
	　　　　座標指定はTextコマンドと同じくY座標が先になります。

	（例）LocateYX 20,80,##"TestGB文字列",,F
	　　"Test"がグラフィック座標(80,20)に18ドット固定ピッチでGB文字列が表示されます。

	・GBコードを含むプログラムのテキスト変換に対応しました。
	（※変換対象のGBコードはエディタのGB表示モード設定で変わります。）
	・セットアップにGBコードをそのまま変換無しで出力する設定を追加しました。
	（※変換後のテキストファイルはGBフォント対応エディタであればそのまま表示できます。）


	・C.Basic専用で使用するヒープメモリを最大127KBから最小32KBまでセットアップで設定できます。
	（※プログラム実行時や編集時は変更できません。）
	　デフォルトは暫定的に96KBとしています。

	・リスト一覧画面でリスト表示名がおかしくなる不具合を修正しました。
	・リストの要素変更を1次元に制限しました。
	・リストのクリップボード対応をしました。
	・[F5]からの行列確保が常にDBLになっていた不具合を修正しました。

	・?()コマンドの反転オプションでカラー指定が反転ではなく補色になっていた不具合を修正しました。
	・?()コマンドの反転オプションでカラー指定の無い場合に初期空白キャラクタが表示されない不具合を修正しました。
	・[F3]と[EXE]で行列確保時のエラー表示が違っていたのを修正しました。
	・一行目にDispsのみがあるプログラム実行時、ACキー中断ができない不具合を修正しました。

	・Dim Dimでの行列再確保書式において任意にアドレスを行列に割り当てることが出来るようにしてみました。
	（書式） {m,n}->Dim Dim Mat A(行列実体アドレス)
	（例）{128,1}->Dim Mat A.B
	　　　{64,1}->Dim Dim Mat B.W(VarPtr(Mat A))
	　　Mat AとMat Bは同じ領域をアクセスしますが、バイトアクセスかワードアクセスというところが違います。

	・SysCall(の入力値でエラーが起きた場合にはコマンド実行前にエラーになるようにしました。
	・Σ(、Seq(コマンド実行で[AC]キーを有効にしました。

	・行列を文字列で初期化する場合に2つ目の文字列先頭に空白がある場合に空白が無効になっていた不具合を修正しました。

	・System変数でヒープ領域サイズとOSバージョンを取得できるようになりました。
	　System(-3)で確保したヒープ領域サイズ、
	　System(-4)で残りのヒープ領域サイズがKB単位で返ります。
	　System(-2)はOSのバージョンが返ります。
	　System(-1)は機種判定が返ります。

	・小文字モードのとき、[F5](CHAR)から大文字を入力しても小文字になってしまう不具合を修正しました。


ｖ0.48α　2018.4.9	アルファ版（インタプリタのみ）
	・アドイン名をバージョンを含めた名前に変更しました。
	（CBASICCG→CBCG048)

	・ヒープ領域のメモリ管理方法を変更しました。
	（起動時に全ヒープ領域をC.Basic用として確保し、領域前半をプログラムエリア、領域の最後から行列エリアとして分割して使用します。）
	・ファイルモードで[SHIFT]を押した時に現在使用できる空きメモリ量を表示するようにしました。

	・32KBを越える所へのGotoの動作が出来なかった不具合を修正しました。
	　併せて64KBを越える所を含むループやジャンプが出来なかった不具合を修正しました。
	（※プログラムの動作に関わるポインタを16ビットから32ビットに拡張しました。）

	・外部フォントを使用しない設定を追加しました。セットアップもしくはコマンドで設定します。
	（書式）SetFont 0
	　このコマンド以降、外部フォントを使用出来なくなり初期状態にリセットされます。
	（書式）SetFont 1
	　このコマンド以降、外部フォントが使用できるようになります。

	・プログラム中断からデバッグモード時にバイナリエディタから[EXIT]で抜けない不具合を修正しました。


ｖ0.47α　2018.4.3	アルファ版（インタプリタのみ）
	・コード0x90のXと大文字Xとを選択できるようにしました。セットアップで設定します。

	・Menuコマンド後に画面復帰＆更新されてなかった不具合を修正しました。

	・コード0x90のXをアルファベット大文字のXと同じ扱いにしました。
	・ファイル名等入力で不正なキャラクタの入力を受け付けないようにしました。
	・CG互換のMenuコマンドのリスト表示文字数を修正しました。

	・64KB以上のプログラムファイルに対応しました。

	・SciとNorm 0表示で値が0の場合に＊になっていた不具合を修正しました。
	・Fix 0の表示非互換性を修正しました。

	・System(コマンドの引数(-1)で機種判定値が返ります。
	（書式）System(-1)
	　返り値：10　CG10
	　返り値：20　CG20
	　返り値：50　CG50

	・BMPファイルのコピーが出来なかった不具合を修正しました。

	・PopUpWin(コマンドの画面復帰ができてなかったのを修正しました。
	・お気に入りリストに入っているプログラムの編集後にファイルサイズが変わらなかった不具合を修正しました。
	・パスワード入力時にミスマッチになった場合は最初から再入力になるようにしました。

	・ステータスラインのちらつきを修正しました。
	・各種入力時にステータスラインのキーボード入力モードを表示するようにしました。

	・fx-5800P準拠入力モードでViewWindow表示が出来なかった不具合を修正しました。
	・エディタで強制的にALPHAモードになっていた不具合を修正しました。
	・エディタの置換において、逐次表示無しで全置換するモードを追加しました。

	・エディタのオーバーライドモードとインサートモードが機能するようになりました。
	・エディタのクリップボードでDelキーでの一括削除を有効にしました。
	・エディタのミニフォントでエスケープキャラクター＼(バックスラッシュ)が表示できなかったのと
	　＼(バックスラッシュ)"となる場合に文字列が終了していた不具合修正しました。
	・エディタでクリップ中(選択中)に別の文字列の貼り付けができてしまっていたのを修正しました。

	・行列とListの最大要素数を32767から2147483647に拡張しました。
	・DotPut(,DotGet(,DotTrim(,Sprintf(コマンドの中間コードの自動修正を終了しました。

	・RGB(コマンドの引数がリストの場合に誤動作していた不具合を修正しました。

	・数式のエラー値を返すIsErorr(コマンドを追加しました。
	（書式）IsErorr(数式)
	　数式の最初のエラー値を返します。エラーがない場合は0が返ります。
	（例）IsError(12+78)
	 　エラーが無いので0が返ります。
	（例）IsError(12+78+)
	 　Syntax Errorのエラー値 1が返ります。
	（例）IsError(12/0)
	 　Division By Zeroのエラー値 40が返ります。

	※エラーに対応する返り値はErrorCode_list.txtにありますが数式評価で返るエラーは以下のとおりです。

	1:	Syntax ERROR
	2:	Math ERROR
	5:	Stack ERROR
	6:	Memory ERROR
	7:	Argument ERROR
	8:	Dimension ERROR
	40:	Division By Zero
	43:	String Too Long
	44:	No Matrix array
	55:	Illegal Element
	60:	Undefined Var
	65:	Address Align ERR


ｖ0.46α　2018.3.24	アルファ版（インタプリタのみ）
	・?コマンドでの入力エリア拡張とミニフォント入力を追加しました。
	　ステータスラインの0行目とファンクション表示エリアの8行目も入力出来るようになりました。
	　さらに、オプション付きの?(コマンドで@を付けると現在のVRAMの任意の座標値で入力できるようになりました。
	（書式）?([@][x][,y][,width][,"空白キャラクタ"][,入力桁数][,R][,M])
	（例）?(@30,40,5,">",5)A
	　現在のVRAMのピクセル座標(X=30,Y=40)の位置でAの値を表示して入力待ちになります。入力範囲と入力桁ともに5桁のみ、空白は">"で埋められます。
	（例）?(@30,40,5,">",5,,M)A
	　現在のVRAMのピクセル座標(X=30,Y=40)の位置でAの値をミニフォントで表示して入力待ちになります。空白は">"で埋められます。
	　ミニフォント入力の場合は[@]オプションが必須です。

	・エディタの右端のスクロールバー表示を修正しました。
	・グラフ描画のg3mモード対応しました。
	・オプション付きの?コマンドで7行目の入力で改行される不具合を修正しました。
	・Getkey1/2コマンドでCATALOG機能を禁止しました。


ｖ0.45α　2018.3.21	アルファ版（インタプリタのみ）
	・g1m/g3m設定がAutoの場合に新規プログラムがg1mモードになってたのを修正しました。
	・_Rectangleと_Horizontalで端の描画に不具合があったのを修正しました。
	・プログラムの実行を中断してエディタに戻ったとき、最大行数が0になることがある不具合を修正しました。
	・[MENU]でコマンド入力履歴を表示させた後、[AC]で画面が復帰しない不具合を修正しました。
	・行列のドットエディタ表示時に電源を切ると、カーソルが残る不具合を修正しました。
	・Peek(,Poke(コマンドでの指定アドレスのミスアラインメントによるエラーをArgument ERRからAlignment ERRに変更しました。
	・プログラム時間計測スタートのタイミングをプログラム開始直前に調整しました。以前より計測結果がわずか短くなります。

	・バージョンを返すVersionシステム変数を追加しました。
	（書式） Version	[SHIFT]+[MENU](SETUP)-[F6]-[F6]-[F6]-[F6]-[F5](Version)

	・BackLightコマンドが動作してなかった不具合を修正しました。
	（書式）Backlight 明るさの値
	  明るさの値：0～511
	  0～255：サブレベル
	　　+256：メインレベル
	（書式）+Backlight
	  現在のバックライトの明るさの値を読み取ります。

	・FkeyMenuコマンドを外部フォント表示に対応し、センタリングして表示するように変更しました。
	　さらに表示位置を1ドット上げるオプション指定を追加しました。
	（書式）FkeyMenu( n,"文字列",U)
	（書式）FkeyMenu( n,"文字列",RU)
	（例）FkeyMenu( 1,"A",U)
	　ファンクションメニュー1の真ん中に"A"を表示します。

	・StrSplitコマンドで2バイト文字が含まれていた場合に正常動作しなかった不具合を修正しました。


ｖ0.44α　2018.3.16	アルファ版（インタプリタのみ）
	・フォントが揃っていない場合に外部フォントの読み込みが出来てなかった不具合を修正しました。

	・GetFont(,GetFontMini(,コマンドで現在の外部フォント導入状況を取得できるようになりました。
	（書式）GetFont()
	（書式）GetFontMini()
	　返り値は整数値でbit2が外部カナ 、bit1が外部外字 、bit0が外部ASCIIフォントとなります。
	（例）標準サイズの外部カナフォントのみ導入されている場合。
	　GetFont()は4が返ります。
	　GetFontMini()は0が返ります。
	（例）ミニフォントのASCIIフォントと外字フォントのみ導入されている場合。
	　GetFont()は0が返ります。
	　GetFontMini()は3が返ります。

	  2018.3.15	・LocateコマンドとLocateYXコマンドにおいてOrと反転OrオプションVを追加しました。
	　標準フォント描画で、Textコマンドと同じ描画オプションが使えるようになります。
	　通常は外部フォント対応表示なので、強制的に内蔵標準フォント表示指定の[!]オプションを追加しました。
	（書式）Locate [@][!]csrX,csrY,"文字列"or数式 [,N/O/R/V]
	（書式）LocateYX [@][!]Y,X,"文字列"or数式 [,N/O/R/V][,フォント縦ドット数]
	（書式）Text [@][!]Y,X,"文字列"or数式 [,N/O/R/V][,F/M/MB/FM/FMB/FX/X][,フォント縦ドット数]
	（例）Locate 2,3,"Test"
	（例）Locate 2,3,"1234",O
	 "Test"に"1234"が重なって表示されます。
	（例）Text @!20,80,"Test",O
	　　現在のVRAMの座標(80,20)に内蔵フォントで"Test"が背景に重ねて表示されます。

	・エディタのカーソル点滅位置を微調整しました。
	・Menuコマンドがg1mモードでFX互換動作しない不具合を修正しました。
	・プログラム終了時に[OPTN]キーを押すとフリーズする不具合を修正しました。

	・_Pointコマンドで2ドット以上の大きさを指定した場合、その後、行列表示の枠が太っていた不具合を修正しました。
	・行列編集時に横の要素数が9以上ある場合に9つ目が表示されていた不具合を修正しました。
	・すでに確保済みの行列を[F3](DIM)で再確保した場合、ゼロで初期化をしないようにしました。
	　行列の内部構成を自在に変更できますが、確保済み前よりも再確保領域が広がる場合は不定なデータが出現しますので必要に応じて初期化してください。

	・Impactフォントの小文字p以降が1ドット下にずれていたのを修正しました。(同梱 @LFONTA1.bmpおよび@MFONTA1.bmp）


ｖ0.43α　2018.3.13	アルファ版（インタプリタのみ）
	・キャラクター選択の[F6]のアイコン表示を修正しました。

	・テキストコマンドにおいて文字フォントの高さ指定が出来るようになりました。
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V][,F/M/MB/FM/FMB/FX/X][,フォント縦ドット数]
	（例）Text 10,1,"Simple Text",,,16
	　上端から16ドット分のミニフォント表示されます。
	　本来は縦18ドットフォントなので下2ドットは表示されません。
	（例）Text 10,1,"Simple Text",,F,20
	　固定ピッチ（12ドット間隔固定）で上端から20ドット分のミニフォント表示されます。
	　本来は縦18ドットフォントなので下に2ドット分の余白が追加されます。

	・キャラクター選択の[F3]のコード(0xE57E)が抜けていたのを修正しました
	・エディタの指数表示を修正しました。
	・SEARCH、REPL実行時のファンクションメニューの消去ミスを修正しました。
	・バイナリエディタでの画面消去ミスを修正しました。
	・キー入力時にカタログ機能を使うと画面が復帰しない不具合を修正しました。
	・デバッグモードの実行画面表示時に全画面表示できるように修正しました。

	・g3m/g1mからテキスト変換時にカナ文字以降(0xFFE0～)を変換ミスしていたのを修正しました。


ｖ0.42α　2018.3.11	アルファ版（インタプリタのみ）
	・キャラクター選択の[F1][F2]の一覧を追加修正しました。
	・バイナリ編集時にカーソル表示が残る不具合を修正しました。
	・エディタ最下部とメニューの間を1ライン空けました。
	・C.BasicのOSでのバージョン表示が正常になりました。

	　2018.3.10	・If、While、Doコマンドにおいて条件判定が整数判定になっていたのを修正しました。

	・エディタの外部フォント表示で超ミニフォントが表示されなかった不具合を修正しました。
	・エディタのスタンダードフォント表示で背景色が黒になる場合にカーソルが見えない不具合を修正しました。
	・エディタの背景色があちこちに残って表示されているのを修正しました。
	・カタログ機能で[3]キーが効かない不具合を修正しました。
	・一括コメント化で2行目から選択したにも関わらず1行目もコメント化される不具合を修正しました。
	・エディタで改行の次の行が改行だけの場合に下移動すると一行飛び越してしまう不具合を修正しました。
	・バイナリモードでの編集後に保存できない不具合を修正しました。

	・行列のエレメントジャンプ[Goto]において飛び先が一つずれていたのを修正しました。
	・[EXIT]ポップアップから抜ける条件を[EXIT]と[AC]キーに限定しました。

	・[AC]無効化状態で、TicksWait実行時に[AC]を押すとコマンドが終了してしまう不具合を修正しました。
	・高分解能タイマーTicks%がカウントダウンになっていた不具合を修正しました。
	・フォント選択で[F5]のキャラクタが表示できなかった不具合を修正しました。
	・RanNorm#コマンドのアイコン表示を間違えていたのを修正しました。

	・OS3.00以降の指数表示に対応しました。セットアップとコマンドで指定できます。
	　　　E:      -1.23e99　従来の表示形式です。
	      Stdx10: -1.23(x10)99 スタンダードフォントのみ切り替わります。
	      Allx10: -1.23(x10)99 すべてのフォントサイズで切り替わります。

	（書式）'#exp 0	//　従来の表示形式です。
	（書式）'#exp 1	//　スタンダードフォントのみ切り替わります。
	（書式）'#exp 2	//　すべてのフォントサイズで切り替わります。

	・SysCallの引数の数を12まで増やしました。
	（書式）SysCall( システムコール番号 [,引数1][,引数2][,引数3][,引数4][,引数5][,引数6][,引数7][,引数8][,引数9][,引数10][,引数11][,引数12] )



ｖ0.41α　2018.3.6	アルファ版（インタプリタのみ）
	・エディタで以前の画面が出てくる不具合を修正しました。

	・テキストからの変換時にプログレスバーを表示するようにしました。

	　2018.3.5	・空白を行頭だけではなく、コマンド間、数式内の空白も許可するようにしました。

	・テキストとグラフィックス画面を重ね合わせるScreen.Oコマンドの動作において、
	　LCD画面転送時にVRAMが合成画面となってしまうのを抑制するオプションを追加しました。
	（書式）Screen.OT
	　LCD画面転送後にVRAMが変化しないようになります。

	・_PixelTest(コマンドにおいて、現在のVRAM以外にもテキストVRAMとグラフィックスVRAMを選択出来るようになりました。
	（例）_PixelTest(10,20,T)
	　テキストVRAMの(10,20)のカラー値を読み取ります。
	（例）_PixelTest(10,20,G)
	　グラフィックスVRAMの(10,20)のカラー値を読み取ります。

	・0x 0bで始まる16進数、2進数表記のテキスト→g1m変換に失敗していたのを修正しました。
	（例）0x1000
	　x1がコマンドのx1に変換されてました。

	・エディタの行間の空いたフォントでの反転選択時の隙間を修正しました。

	・エディタのミニミニフォントの16行表示を15行表示としました。変更後の表示は以下のとおりです。
	　-標準フォント（18x24ドット）7行表示　固定ピッチ
	　-ミニフォント（12x18ドット）9行表示　固定ピッチ
	　-ミニフォント（？x18ドット）9行表示　プロポーショナル
	　-ミニフォント（12x17ドット）10行表示　固定ピッチ　　　　（※追加）
	　-ミニフォント（？x17ドット）10行表示　プロポーショナル　（※追加）
	　-ミニミニボールド（9x13ドット）13行表示　固定ピッチ　　　　（※追加）
	　-ミニミニボールド（?x13ドット）13行表示　プロポーショナル　（※追加）
	　-ミニミニ標準　　（8x13ドット）13行表示　固定ピッチ　　　　（※追加）
	　-ミニミニ標準　　（?x13ドット）13行表示　プロポーショナル　（※追加）
	　-ミニミニボールド（9x11ドット）15行表示　固定ピッチ　　　　（※追加）（※修正)
	　-ミニミニボールド（?x11ドット）15行表示　プロポーショナル　（※追加）（※修正)
	　-ミニミニ標準　　（8x11ドット）15行表示　固定ピッチ　　　　（※追加）（※修正)
	　-ミニミニ標準　　（?x11ドット）15行表示　プロポーショナル　（※追加）（※修正)
	　-超ミニフォント　（6x10ドット）17行表示　固定ピッチ　　　　（※追加）
	　-超ミニフォント　（6x8ドット）21行表示　固定ピッチ　　　　（※追加）


ｖ0.40α　2018.3.2	アルファ版（インタプリタのみ）
	・Textコマンドにおいて、ミニミニフォント表示（標準およびボールド）、およびFX版のフォントを使う超ミニフォントをサポートしました。
	　（表示可能なコードはASCIIコード+αとなります。）
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V],M
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V],FM
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V],MB
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V],FMB
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V],X
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V],FX
	（例）Text 10,20,"ABC",,M
	　（X:20，Y:10）座標よりミニミニフォントで"ABC"と表示します。
	（例）Text 10,20,"ABC",,MB
	　（X:20，Y:10）座標よりミニミニボールドフォントで"ABC"と表示します。
	（例）Text 10,20,"ABC",,FM
	　（X:20，Y:10）座標より固定ピッチのミニミニフォントで"ABC"と表示します。
	（例）Text 10,20,"ABC",,FMB
	　（X:20，Y:10）座標より固定ピッチのミニミニボールドフォントで"ABC"と表示します。
	（例）Text 10,20,"ABC",,X
	　（X:20，Y:10）座標より超ミニフォントで"ABC"と表示します。

	・エディタにミニミニフォントと超ミニフォント表示を追加しました。
	（エディタで選択できるフォント一覧）
	　-標準フォント（18x24ドット）7行表示　固定ピッチ
	　-ミニフォント（12x18ドット）9行表示　固定ピッチ
	　-ミニフォント（？x18ドット）9行表示　プロポーショナル
	　-ミニフォント（12x17ドット）10行表示　固定ピッチ　　　　（※追加）
	　-ミニフォント（？x17ドット）10行表示　プロポーショナル　（※追加）
	　-ミニミニボールド（9x13ドット）13行表示　固定ピッチ　　　　（※追加）
	　-ミニミニボールド（?x13ドット）13行表示　プロポーショナル　（※追加）
	　-ミニミニ標準　　（8x13ドット）13行表示　固定ピッチ　　　　（※追加）
	　-ミニミニ標準　　（?x13ドット）13行表示　プロポーショナル　（※追加）
	　-ミニミニボールド（9x10ドット）16行表示　固定ピッチ　　　　（※追加）
	　-ミニミニボールド（?x10ドット）16行表示　プロポーショナル　（※追加）
	　-ミニミニ標準　　（8x10ドット）16行表示　固定ピッチ　　　　（※追加）
	　-ミニミニ標準　　（?x10ドット）16行表示　プロポーショナル　（※追加）
	　-超ミニフォント　（6x10ドット）17行表示　固定ピッチ　　　　（※追加）
	　-超ミニフォント　（6x8ドット）21行表示　固定ピッチ　　　　（※追加）
	（※ミニミニフォントにはASCIIコード+αしかないので、不足分は超ミニフォントで穴埋めしてあります。今後足りないフォントを実装する予定です。）
	（※フォントの切り替えはセットアップ以外にも暫定仕様として[SHIFT]+[左右カーソルキー]で上記の順に変更できるようになっています。）

	・エディタの背景色の設定ができるようになり、カーソル移動、スクロール速度が従来比50%アップしました。
	　（この変更により反転表示機能は削除しました。）


ｖ0.39α　2018.2.27	アルファ版（インタプリタのみ）
	・エディタでステータスラインに行番号表示するようにしました。
	・行番号が3桁表示までだったのを4桁に増やしました。（端が欠ける場合があります。）

	　2018.2.25	・コメントとIfコマンド、Switchコマンドがそれぞれ32個を超えると飛越先に不具合が出ていたのを修正しました。

	・[AC]による一時停止からの再開で画面の色が変わってしまう不具合を修正しました。

	・デバッグ時にステータス情報が現在の設定になっていなかった不具合を修正しました。

	・引数無しのGosubに返り値がある場合に代入に失敗していた不具合を修正しました。
	（例）Gosub A->B
	  　　　Disp B
	  　　　Stop
	  　　　Lbl A
	  　　　Return 1


ｖ0.38α　2018.2.21	アルファ版（インタプリタのみ）
	・文字のASCIIコードを取得するStrAsc(コマンドを追加しました。　[Shift]+[VARS](PRGM)-[F6]-[F6]-[F3](ExStr)-[F6]-[F6]-[F2](StrAsc)
	（例）StrAsc("Ascii")
	　文字列先頭の'A'のASCII文字コード65(0x41)が返ります。

	・StrLen(、StrCmp(、StrSrc(コマンドにおいて閉じ括弧を読み飛ばしすぎていた不具合を修正しました。
	（例）(10-StrLen("ABC"))*2
	　正しい値は(10-3)*2で14になるはずが、閉じ括弧が一つ飛ばされて(10-StrLen("ABC")*2と解釈されて4となっていました。

	 2018.2.18	・アンダーバーより始まる拡張変数名やラベル名がテキストからの変換でコマンド名に変換されてしまうのを修正しました。

	・外字/カナ文字表示でシステムエラーになることがある不具合を修正しました。

	・高分解能1/32768sタイマーが?コマンドと一時停止コマンドでリセットされてなかった不具合を修正しました。


ｖ0.37α　2018.2.10	アルファ版（インタプリタのみ）
	・[AC]キーによるBreakの有効無効をプログラム内で出来るようにしました。
	（例）'#Break0	//　[AC]キー無効
	（例）'#Break1	//　[AC]キー有効（デフォルト）

	　2018.2.9	・エディタで[SHIFT]+[6]を押すとRGB(コマンドのカラーコードを入力する機能を追加しました。

	・エディタで[SHIFT]+[3]を押すとGetkeyコマンドのキーコードを入力する機能を追加しました。

	　2018.2.7	・[F5](CHAR)-[F6] 外部フォント表示の選択で外字とカナに加えてASCII文字を加えました。

	・A1,B2形式の短縮形行列アクセスでの行列再確保の不具合を修正しました。

	・タイマー変数のTicksと%に高分解能1/32768sタイマーを追加しました。コマンド後に%を付けると分解能が1/32768sになります。
	（例）Ticks%
	（例）Ticks%Wait
	（例）%%
	（例）%%Wait

	・プログラム実行の時間計測機能で高分解能1/32768sタイマーを選択できるようになりました。（セットアップで設定します。）
	　小数点以下4桁まで計測できます。


ｖ0.36α　2018.2.5	アルファ版（インタプリタのみ）
	・g1mモードの外部フォント表示が出来てなかった不具合を修正しました。

	  2018.2.2	・外部フォントの読み込みでバッファの開放が出来てなかった不具合を修正しました。

	・g1mモードでは標準フォントも従来のfxシリーズの標準フォント(6x8)で表示するように変更しました。
	（セットアップでEdit ExtFontをonにするとg1mモードではエディタの表示も従来フォントに変わります。）

	・フォントファイルのセーブ/ロードにおいて任意のファイル名が使えるようになりました。
	（書式）BmpLoad @GL"ファイル名"
	（書式）BmpLoad @GM"ファイル名"
	（書式）BmpLoad @KL"ファイル名"
	（書式）BmpLoad @KM"ファイル名"
	（書式）BmpLoad @AL"ファイル名"
	（書式）BmpLoad @AM"ファイル名"
	（例）BmpLoad @GL"MYFONTL"
	　MYFONTL.bmpが外字標準フォントとして読み込まれます。
	（例）BmpLoad @GM"MYFONTM"
	　MYFONTM.bmpが外字ミニフォントとして読み込まれます。

	（書式）BmpSave @GL"ファイル名"
	（書式）BmpSave @GM"ファイル名"
	（書式）BmpSave @KL"ファイル名"
	（書式）BmpSave @KM"ファイル名"
	（書式）BmpSave @AL"ファイル名"
	（書式）BmpSave @AM"ファイル名"
	（例）BmpSave @GL"MYFONTL"
	　現在の外字標準フォントを"MYFONTL.bmp"としてセーブします。
	（例）BmpSave @GM"MYFONTM"
	　現在の外字ミニフォントを"MYFONTM.bmp"としてセーブします。


ｖ0.35α　2018.1.31	アルファ版（インタプリタのみ）
	・変数の定数仕様追加で、Switch～Case～SwitchEndでのCaseの指定は変数でも可になりました。

	・変数を定数使用限定にするConstコマンドを追加しました。　[OPTN]-[F3](extd)-[F3](Const)
	　代入時にConstを前置すると変数が定数として扱われ以後代入できなくなります。
	（例）123->Const A
	（例）123->Const _ABC
	（例）456->A
	　同じプログラムで変数の値を変更しようとしたらエラーになります。

	・文字列分割するStrSplit(コマンドを追加しました。 [SHIFT]+[VARS](PRGM)-[F6]-[F6]-[F3](ExStr)-[F6]-[F6]-[F1](StrSplit)
	（書式）StrSplit("文字列","区切り文字"[,開始位置])
	　結果はMatAnsに文字列として返ります。
	（例）StrSplit("123,4567,89",",")
	 　MatAnsの結果は、["123","4567","89"]となり、個々の要素を読み出すに次のようにアクセスできます。
	　$Ans[1]="123"
	　$Ans[1]="4567"
	　$Ans[1]="89"

	　2018.1.30	・アンダーバーより始まる複数英数字名（8文字まで）の変数が使えるようになりました。
	　従来の1文字変数とは独立したエリアに確保される変数ですがプログラム開始時には常に初期化されます。
	　使える変数は26個までとなっています。実数変数と整数変数は別の値を保持できますが同じ名前で確保されます。
	　[SHIFT]+[F1]の変数リストで[F1]を押す度に大文字変数、小文字変数、アンダーバー変数が表示されます。
	（例）'#CBDBL
	（例）123.456->_ABC
	（例）456->_ABC%
	（例）_ABC+_ABC%->_RESULT
	　_RESULTの値は579.456となります。

	・RowSize(、ColSize(が逆になっていたのを修正しました。
	　（g1mおよびg3mファイルでは修正する必要はありません。テキストファイルで保存している場合は修正する必要があります。）

	　2018.1.28	・StrSrc(コマンドにおいて、検索開始位置を指定した場合に結果が一つズレていたのを修正しました。


ｖ0.34α　2018.1.26	アルファ版（インタプリタのみ）
	・ファイルリスト表示でステータスラインに現在日時を表示をするようにしました。
	（リアルタイム表示ではなく何かアクションした時の更新になります。）

	・外字のテキスト変換に失敗していたのを修正しました。

	・フォントデータをセーブ、ロードするBmpLoad @/BmpSave @コマンドにおいて
	　フォントファイル番号を指定する場合に不具合が出ることがあったのを修正しました。

	　2018.1.23	・Prog～Returnにおいて、Returnコマンドでの返り値が無効になる不具合を修正しました。

	  2018.1.21	・セットアップの設定がプログラムで変更されないようにする設定を追加しました。
	　SetupRecoverの項目で純正CasioBasic互換設定をプログラム終了後に復帰するかどうかを設定します。
	　影響を受ける設定は純正互換の以下の設定になります。
	　　Angle
	　　DrawType
	　　Coord
	　　Grid
	　　Axes
	　　Label
	　　Derivative
	  　Plot/LineColor
	　　Sketch Line
	  　Display Fix/Sci/Norm/Eng

	　これ以外のC.Basicで拡張された設定はプログラムで変更されても実行後に元の設定に復帰します。


ｖ0.33α　2018.1.21	アルファ版（インタプリタのみ）
	・Menuコマンドのタイトル＆項目テキスト表示で特殊文字を使うと表示文字数が短くなっていた不具合を修正しました。
	・付属のIPA版仮名文字フォントを高さを調整しました。

	  2018.1.20	・Ticks(%)のタイマー変数への代入で内部時計を変更しないようにしました。
	（例）0->Ticks
	　従来は内部時計も00:00:00に初期化されていましたが、C.Basicのタイマー変数だけを0にリセットします。
	　この仕様変更により時計の変更はDATE、TIMEコマンドのみとなります。

	・MenuコマンドにFX版互換表示を追加しました。コマンド直後に"@"を付けるとFX版互換表示になります。
	（書式）Menu @"<メニュータイトル>", "<項目1>",<ラベル文字1>,"<項目2＞",<ラベル文字2>[,"<項目n>",<ラベル文字n>...]

	・LblもAlias機能が使えるようになりました。併せてAliasVarのコマンド名称をAliasに改訂いたします。
	（例）Alias A=_ABCD
	（例）Alias Mat A=_ABCD
	（例）Alias Lbl A=_ABCD

	  2018.1.19	・Getkey1/2実行中は時間計測を一時停止するように仕様変更しました。
	　セットアップにて計測の一時停止または計測のリセット＆リスタートを選択できます。
	　関連コマンドとして
	（書式）'#GetkeyC
	 　デフォルトの計測の一時停止、継続モードです。
	（書式）'#GetkeyR
	　Getkey1/2実行後に計時がリセット＆リスタートします。

	・セットアップでステータスラインが表示されてなかったのを修正しました。

	・時計の読み出し/書き込みをSysCallに変更しました。

	  2018.1.18	・ML系コマンドに_Paintを追加しました。	[SHIFT][F4](SKETCH)-[F3](ML)-[F6][F6][F6]-F5](_Paint)
	　　http://fussy.web.fc2.com/algo/algo3-2.htm
	　　こちらのPaintサンプルプログラムをほぼそっくりそのまま利用させて頂いています。
	（書式）_Paint x,y,Color[,確率/透過率]
	（例）_Paint 100,100,1
	　座標(100,100)を始点にして描画色で塗りつぶします。
	（例）_Paint 100,100,0
	　座標(100,100)を始点にして背景色で塗りつぶします。

	・ML系コマンドの楕円描画コマンドの_Elips、_FillElipsにおいて回転された楕円の描画をサポートしました。
	（書式）_Elips X, Y, Rwidth, Rheight, Color[,確率/透過率] [,回転角(度)]
	（書式）_FillElips X, Y, Rwidth, Rheight, Color[,確率/透過率] [,回転角(度)]
	（例）_Elips 100,100,80,40,1,,45
	　座標(100,100)を中心に横罫80ドット、縦径40ドットの楕円を45度傾けて描画します。

	・ReadmeCG_J.txt ManualCG_J.txt　同梱しました。


ｖ0.32α　2018.1.16	アルファ版（インタプリタのみ）
	・Sprintf(コマンドのバグを修正しました。

	・ML系コマンドの_Bmp表示系コマンドをCGモード対応しました。
	　_Bmp
	　_Bmp8
	　_Bmp16
	　_BmpZoom
	　_BmpRotate
	　_BmpZmRotate
	  g3mモードではデフォルト16ビットカラー描画ですが、1ビット行列を指定すると1ビットマップの描画になります。

	  2018.1.15	・行列エディタで、[OPTN]切り替えでリスト表示の時にAns,<r>,<θ>が表示されなかった不具合を修正しました。

	・Str(コマンドの表記をToStr(に変更しました。
	　従来プログラムでStr(を使用していてもg1m/g3m形式の場合は何も修正する必要はありません。
	　テキスト保存されている場合は内部形式に変換時に自動変換されます。
	　再保存の時にはToStr(表記に変わりますので以前のC.Basicでテキスト形式で読み込ませるとエラーになります。
	　プログラムの保存はテキストだけでなくg1m/g3m形式での保存もお勧めします。

	・Normコマンドが正常に動作してなかった不具合を修正しました。

	・MenuコマンドをCGシリーズの純正互換に変更しました。
	　タイトルの色はMenuコマンド直前の色指定が有効になります。
	　メニュー項目はPlot/Line-Colorの色指定が有効になります。
	　メニュー背景はBack-Colorで指定している色になります。

	・BmpLoad(の透過指定がバグっていたのを修正しました。
	　透過率の指定は0～1の範囲の実数値または100%までの整数指定に変更しました。
	（書式）BmpLoad("BMPファイル名"),X,Y,1,透過率（0.0～1.0）
	（書式）BmpLoad("BMPファイル名"),X,Y,1,%透過率（%0～%100）
	 　(X,Y)座標を始点として背景と透過率で合成してロードします。
	（書式）BmpLoad("BMPファイル名"),X,Y,0,透過率
	 　(X,Y)座標を始点として背景だけにロードします。
	（例）BmpLoad("TEST"),100,50,1,%50
	（例）BmpLoad("TEST"),100,50,1,0.5
	　（100，50）座標よりTEST.bmpファイルを透過率50%でロードします。
	（例）BmpLoad("TEST"),100,50,0,%25
	（例）BmpLoad("TEST"),100,50,0,0.25
	　（100，50）座標よりTEST.bmpファイルを透過率25%で背景部分だけにロードします。

	・ML系コマンドのパラメータのColor指定において透過率指定を追加しました。
	　コマンドの描画色と画面を透過率で合成して表示します。
	　color指定値は5になっています。color指定のあるML系コマンドで使用できます。
	（書式）_Pixel x,y,5,透過率（0.0～1.0）
	（書式）_Pixel x,y,5,%透過率（%0～%100）
	（例）Red _Pixel x,y,5,%50
	（例）Red _Pixel x,y,5,0.5
	　画面の色と50%赤を合成して描画を行います。


ｖ0.31α　2018.1.13	アルファ版（インタプリタのみ）
	・Textコマンドのカラー指定に不具合があったのを修正しました。

	・"'#"をコメント色から外しました。

	・IsExist(コマンドでファイルリストを取得できるようになりました。
	（書式）IsExist("*.拡張子")->ファイル数
	　Mat Ans：指定した拡張子のファイルがAns行列に作成されます。
	　リストはアルファベット順にソートされます。
	（例）IsExist("*.bmp")->N
	　$Mat Ans[3]
	　リストの3番目のファイルを表示します。
	　N：ファイル数が返ります。

	・1文字変数を任意の英数字名の別名で使えるようにAliasVarを拡張しました。
	　アンダーバーより始まる変数名が使えます。
	　変数の長さは8文字以内で英数字とアンダーバーが使えます。
	　変数名と行列名は独立して指定できます。
	（例）AliasVar a=_abc_de
	（例）AliasVar Mat a=_abcXY
	（例）_abc_de+1->_abc_de
	　小文字変数aを_abc_de表記で使えます。
	　小文字行列aを_abcXY表記で使えます。

	・ListとMatの表記を変更しようとした場合にシステムエラーになっていた不具合を修正しました。
	・ファイルリストにおいてストレージメモリの残量を表示できるようになりました。


ｖ0.30α　2018.1.10	アルファ版（インタプリタのみ）
	・スタンダード入力モードにおいてStrLwr(コマンドの入力が出来なかった不具合を修正しました。
	・エディタの選択時のリバース表示を修正しました。
	・外部フォント導入時に標準サイズフォントにおいてキャラクタコード0x00～0x1Fが表示されなかった不具合を修正しました。

	・デフォルトの外部フォントをIPAフォントに変更しました。
	　@LFONTK0　カタカナフォント（標準）
	　@MFONTK0　カタカナフォント（ミニ）
	　@LFONTK1　ひらがなフォント（標準）
	　@MFONTK1　ひらがなフォント（ミニ）
	　@LFONTG0　外字サンプルフォント（標準）
	　@MFONTG0　外字サンプルフォント（ミニ）

	　2018.1.9	・ReadGraph(とDotGet(コマンドにおいて、行列の型指定で取得ビット数を1ビットか16ビットかを選択できるようになりました。
	（g1mモードでのデフォルトは1ビット、g3mモードでのデフォルトは16ビットになっています。）
	（例）ReadGraph(0,0,15,23)->Mat A
	（例）DotGet(0,0,15,23)->Mat A
	　(0,0)-(15,23)の領域を16ビットカラーで行列Aに取り込みます。
	（例）ReadGraph(0,0,15,23)->Mat A.P
	（例）DotGet(0,0,15,23)->Mat A.P
	　(0,0)-(15,23)の領域を1ビットモノクロで行列Aに取り込みます。

	・BatteryStatusコマンドを改定しました。　[VAR]-[F3](Extd)-[F6](BatteryStatus)
	（書式）BatteryStatus
	　左上隅のバッテリアイコンを表示するだけのコマンドです。
	　数式で使用する場合は()で囲む必要がありますが、バッテリアイコンを表示せず現在の電圧x100(V)を返します。
	（書式）(BatteryStatus)
	　現在の電圧値x100(V)を整数値で返します。
	　5.01Vの場合は501になります。

	  2018.1.6	・Textコマンドの表示位置が純正互換よりも1ドット右下にずれていたのを修正しました。
	・エディタの置換において、置換文字列の範囲が一文字短くなっていたのを修正しました。

	  2018.1.5	・Beepコマンドを追加しました。　[SHIFT]+[VARS](PRGM)-[F6]-[F4](I/O)-[F6]-[F5](Beep)
	（書式）Beep　[周波数][,継続時間(ms)]
	　3Pin出力より指定周波数の矩形波を出力します。
	（例） Beep
	　1KHzの矩形波を0.5秒間、3Pinより出力します。
	（例） Beep 440,1000
	　440Hzの矩形波を1秒間、3Pinより出力します。


ｖ0.29α　2018.1.4	アルファ版（インタプリタのみ）
	・Getkey1/2/3において、[SHIFT]+[OPTN]を[OPTN]と判定出来るようになりました。
	・Plot/Line-Color直後のテキスト表示系コマンドが色変更の影響を受けていたのを修正しました。
	・Menuコマンドにて色指定がコマンド終了後にデフォルト＝黒に戻るように修正しました。

	　2018.1.3	・フォントデータのセーブが不安定だった不具合を修正しました。
	・英数字のASCIIキャラクタのフォント差し替えが出来るようになりました。
	　デフォルトでのファイル名は外字同様に、
	　@LFONTA.bmp　（ASCII標準フォント）
	　@MFONTA.bmp　（ASCIIミニフォント）
	　となっております。
	　コードで0x20～0x7Eまでの95キャラクタの差し替えが可能です。
	　サンプルフォント（デフォルト、IMPACTを同梱しました。）

	・フォントデータを読み出すGetFontにおいて、デフォルトの内蔵フォントを読み出す@オプションを追加しました。
	（書式）GetFont(@"フォントキャラ")->Mat A
	（書式）GetFontMini(@"フォントキャラ")->Mat A
	（例）GetFont(@"A")->Mat A
	　内蔵フォント"A"のビットマップデータ(18x24)が1ビット行列Mat A[18,24]に入力されます。

	・エディタのフォントを外部フォントに切り替えられるようにしました。セットアップより変更できます。

	・外部フォントの切り替えを行うための、BmpLoad(にFontロードオプションを追加しました。
	　外部フォントがそれ以降使用されます。
	（書式）BmpLoad(@G[フォントファイル番号])
	（書式）BmpLoad(@K[フォントファイル番号])
	（書式）BmpLoad(@A[フォントファイル番号])
	　フォントファイル番号は0～9が指定できます。
	（例）BmpLoad(@A1)
	　@LFONTA1.bmp　（ASCII標準フォント）
	　@MFONTA1.bmp　（ASCIIミニフォント）
	　のフォントファイルが外部ASCIIフォントとして読み込まれます。

	・フォントファイルのセーブにおいて0～9までのオプションを追加しました。
	・BmpSaveにフォントデータのセーブ機能を追加しました。
	（書式）BmpSave @G[フォントファイル番号]
	（書式）BmpSave @K[フォントファイル番号]
	（書式）BmpSave @A[フォントファイル番号]
	（例）BmpSave @G2
	　@LFONTG2.bmp　（外字標準フォント）
	　@MFONTG2.bmp　（外字ミニフォント）
	　現在の外字フォントファイルを外字フォント2としてセーブします。


ｖ0.28α　2017.12.30	アルファ版（インタプリタのみ）
	・RectおよびFillRectがFX版解像度対応のままになっていたのを修正しました。

	・行列の初期化において、すでに確保された行列領域を再初期化する場合に0クリアしないようにすることが出来るようになりました。
	（ただし、最初に行列で使用する最大領域を確保しておく必要があります。）
	（書式）{12,20}->Dim Dim Mat A
	（例）[[1,2,3]][4,5,6]]->Mat A
	 　　　{2,2}->Dim Dim Mat A
	　Mat Aの内容は[[1,2][3,4]]となります。

	  2017.12.29	・フォントデータの読み出しと設定を行うGetFont(とSetFontコマンドにフォントコードに加えて文字列でキャラ指定出来るようにしました。
	（書式）GetFont("フォントキャラ")->Mat A
	（書式）GetFontMini("フォントキャラ")->Mat A
	（例）GetFont("A")->Mat A
	　フォント"A"のビットマップデータ(18x24)が1ビット行列Mat A[18,24]に入力されます。
	（例）GetFontMini("A")->Mat B
	　フォント"A"のビットマップデータ(16x24)が1ビット行列Mat B[16,24]に入力されます。

	（書式）SetFont "フォントキャラ",Mat A
	（書式）SetFontMini "フォントキャラ",Mat A
	（例）SetFont "@",Mat A
	　Mat Aのフォントデータがフォント"@"のデータとして設定されます。
	（例）SetFontMini "@",Mat B
	　Mat Bのフォントデータがミニフォント"@"のデータとして設定されます。
	（※指定するフォント"@"は外字またはカナフォントのみ可能です。）

	　2017.12.28	・BMPファイルのRenameとCopyに対応しました。
	・ファイルモードでのBMPファイルの表示の不具合を修正しました。

	・ReadGraph(、DotGetコマンドにおいて、g3mモードでも1ビットサイズの行列への取り込みが出来なかったのを修正しました。
	（例）ReadGraph(1,1,16,24)->Mat A.P
	（例）DotGet(1,1,16,24)->Mat A.P

	・BmpSaveコマンドにおいて、g3mモードで1ビットサイズの保存が出来るようになりました。
	（例）BmpSave "TEST",Mat A

	  2017.12.27	・MLコマンドの_Horizontal,_Vertical,_Polygon,_Rectangle,_Elips,_ElipsInRctにおいて、
	 前回MLコマンドのWidth指定が継続していたのを修正しました。

	  2017.12.26	・フォントデータの読み出しと設定を行うGetFont(とSetFontコマンドを追加しました
	（書式）GetFont("フォントキャラ")->Mat A
	（書式）GetFont(フォントコード)->Mat A
	（書式）GetFontMini("フォントキャラ")->Mat A
	（書式）GetFontMini(フォントコード)->Mat A
	（例）GetFont(0x41)->Mat A
	　フォント"A"のビットマップデータ(18x24)が1ビット行列Mat A[18,24]に入力されます。
	（例）GetFontMini(0xFF80)->Mat A
	　外字ミニフォントの一番目のビットマップデータ(16x24)が1ビット行列Mat A[16,24]に入力されます。

	（書式）SetFont　フォントコード,Mat A
	（書式）SetFontMini　フォントコード,Mat A
	（例）SetFont 0xFF80,Mat A
	　Mat Aのフォントデータが外字フォントの一番目ののデータとして設定されます。
	（例）SetFontMini 0xFF80,Mat A
	　Mat Aのフォントデータが外字ミニフォントの一番目のデータとして設定されます。

	・BmpSaveにフォントデータのセーブ機能を追加しました。
	（書式）BmpSave @G
	　カレントフォルダに外字フォント（標準、ミニ）をセーブします。
	　ファイル名は@LFONTG.bmp　（標準）
	　ファイル名は@MFONTG.bmp　（ミニ）
	（書式）BmpSave @K
	　カレントフォルダにカナフォント（標準、ミニ）をセーブします。
	　ファイル名は@LFONTK.bmp　（標準）
	　ファイル名は@MFONTK.bmp　（ミニ）
	（書式）BmpSave @@G
	（書式）BmpSave @@K
	　@Fontフォルダにセーブします。

	・デフォルトフォントファイルを変更しました。
	　@LFONTG.bmp　（外字標準フォント）
	　@MFONTG.bmp　（外字ミニフォント）
	　@LFONTK.bmp　（カナ標準フォント）
	　@MFONTK.bmp　（カナミニフォント）

	・大文字と小文字のRenameで元のファイルがまた消えてしまう不具合を修正しました。


ｖ0.27α　2017.12.23	アルファ版（インタプリタのみ）
	・フル画面に正式対応しました。
	　副作用として、C.Basic実行時の?コマンド入力時に左上のシフト状態のステータス表示が機能しなくなります。

	・GetRGB(コマンドを追加しました。VRAMのカラー値をR、G、Bに分解します。
	（書式）GetRGB(カラーコード）
	　結果はListAnsに返ります。
	（例）GetRGB( 65535 )
	　ListAns = { 248,252,248 }
	  R = ListAns[1]
	  G = ListAns[2]
	  B = ListAns[3]

	・RGB(コマンドにリストを使用することが出来るようになりました。
	（書式）RGB({R,G,B})
	（例）RGB({255，255，0})
	（例）{255，255，0}->List 1
	　　　RGB(List 1)

	・Renameで元のファイルが残っていた不具合を修正しました。
	・RenameとCopyで新しいファイルの箇所にカーソル移動が出来てなかった不具合を修正しました。


ｖ0.26α　2017.12.20	アルファ版（インタプリタのみ）
	・BatteryStatusコマンドを追加しました。　[VAR]-[F3](Extd)-[F6](BatteryStatus)
	（書式）BatteryStatus
	　左上隅のバッテリアイコンを表示します。
	　数式で使用した場合はバッテリアイコンを表示して現在の電圧ｘ100を返します。

	・Clip&Paste後にカーソル位置が6行目で固定されていたのを修正しました。

	・Str変数の増量が127で限界になっていた不具合を修正しました。

	・テキストとグラフィックスVRAMの切り替えでステータスライン部分の転送が足りなかったのを修正しました。
	・_ClrVramにおいて背景色でクリアされてなかったのを修正しました。

	・カナ文字と外字フォントを外部のBMPファイルより導入出来るようになりました。
	　カレントフォルダに次の4つのファイルを置くとフォントが切り替わり、外字が使えるようになります。
	　　LFONTK.bmp　　　18x24ドット　カナ文字フォント
	　　LFONTG.bmp　　　18x24ドット　外字フォント
	　　MFONTK.bmp　　　最大16x18ドット　カナ文字ミニフォント
	　　MFONTG.bmp　　　最大16x18ドット　外字ミニフォント

	　フォルダを移動する度にそのフォルダにあるフォントファイルを読み込みます。
	　フォントファイルが存在しない場合は、@Fontフォルダに置かれたファイルをデフォルトとして使用します。
	　どこにもフォントファイルが存在しない場合はFX互換の内蔵フォントを使用します。

	　フォントファイルのフォーマットは1ビットモノクロBMPファイルとなっています。
	　標準サイズのフォントは18x24ドットのフォントが横に16個、縦に5つ並ぶフォントファイルになっています。
	　ミニサイズのフォントはプロポーショナルフォントなので、
	　フォントの1ドット上の1ラインを横幅検出ラインとし、フォント左上隅の1ドット上の1ドットを開始位置とします。
	　横に16文字、縦に2行で32文字の外字が使えます。

	・エディタの検索機能において、検索窓に入力後にコマンド入力ファンクションキーが表示され続けていた不具合を修正しました。

	・テキストとグラフィックスVRAMの切り替えでステータスライン部分の転送が抜けていたのを修正しました。
	・_ClrVramコマンドが背景色クリアになってなかったのを修正しました。

	　2017.12.17	・エディタのミニフォント表示において固定ピッチ表示を選択できるようになりました。

	・Textコマンドにて固定ピッチ表示のオプションを追加しました。
	（書式）Text Y,X,"文字列"or数式 [,N/O/R/V][,F]
	　最後にFオプション追加で固定ピッチとなります。
	（例）Text 10,1,"Simple Text",,F
	　固定ピッチ（12ドット間隔固定）でミニフォント表示されます。


ｖ0.25α　2017.12.14	アルファ版（インタプリタのみ）
	・外枠を色指定できるようになりました。BackColorコマンドに@オプション追加です。
	（書式）BackColor @外枠色指定
	（例）BackColor @Black
	（例）BackColor @RGB(255,128,128)

	・ML系コマンド使用時にVRAMの全域を操作＆表示対象にしました。
	　Y座標はマイナス方向に拡張して（-24）まで使用できます。
	　この変更により、PutDispDDと_DispVramコマンドで転送エリアが異なります。
	　PutDispDD：転送範囲(0,0)-(383,191) 　純正仕様です。
	　_DispVram：転送範囲(0,-24)-(383,191)　上部ステータスライン分を含みます。

	・PutDispDDと_DispVramコマンドでLCDへの転送ラインを任意選択できる@オプションを追加しました。
	（書式）PutDispDD@ 開始行、終了行
	（書式）_DispVram@ 開始行、終了行
	　行の範囲は最上部(-24)から最下部(191)までとなります。
	　どちらも同様の動作をします。
	（例）PutDispDD@ 0,23
	 Locateでの1行目だけを転送します。

	・ListとMat@の変数名指定に(を使うことで数式が使えるようになりました。
	（例）List (A+1)
	 Aが1の場合はList 2を指定したことになります。
	（例）Mat@(A+1)
	 Aが1の場合はMat 2、つまりMat Bを指定したことになります。

	・Renameにおいてファイル名の大文字⇔小文字の変更のみをした場合、ファイルが消えてしまう不具合を修正しました。


ｖ0.24α　2017.12.13	アルファ版（インタプリタのみ）
	・["文字列","文字列","文字列",..]->Mat A　形式の文字列初期化において、
	　スペースが続く場合に誤変換していた不具合を修正しました。

	・テキスト画面にグラフィックス画面を重ねて表示することが出来るようになりました。
	　Screenコマンドで設定できます。
	（書式）Screen.O
	　テキスト画面で実行するコマンドの背景色がグラフィックス画面になります。
	　つまり、テキスト画面にグラフィックス画面が合成表示されます。
	（書式）Screen.N
	　通常モードに戻ります。

	・BmpLoadコマンドで直にVRAMにロードする場合、背景だけにロードしたり透過率を設定出来るようになりました。
	（書式）BmpLoad("BMPファイル名"),X,Y,1,透過率（0～255）
	 　(X,Y)座標を始点として透過率（最大値255）でロードします。
	（書式）BmpLoad("BMPファイル名"),X,Y,0,透過率（0～255）
	 　(X,Y)座標を始点として背景だけにロードします。
	（例）BmpLoad("TEST"),100,50,1,128
	　（100，50）座標よりTEST.bmpファイルを透過率50%でロードします。
	（例）BmpLoad("TEST"),100,50,0,64
	　（100，50）座標よりTEST.bmpファイルを透過率25%で背景にロードします。


ｖ0.23α　2017.12.12	アルファ版（インタプリタのみ）
	・Clip&Pastで範囲指定された行をコメント化、コメント解除の機能を追加しました。
	　範囲指定した後に[F5][F6]で機能します。

	・BmpLoadコマンドで直にVRAMにロード出来るようになりました。
	（例）BmpLoad("TEST"),100,50
	　（100，50）座標よりTEST.bmpファイルをロードします。
	　（添付サンプルプログラムを参照して下さい。）

	・BmpSaveコマンドで直にVRAMからセーブ出来るようになりました。
	（例）BmpSave "TEST",100,50,200,90
	（100，50）座標より（200,90）座標までの範囲を24ビットフルカラーBMPファイル"TEST.bmp"としてセーブします。
	　指定可能な座標値は(0,0)-(383,191)の範囲です。
	　（フル画面の保存には1分以上かかる場合があります。）

	・BMPファイルの読み込める最大サイズを256KBまで増量しました。
	　CGシリーズの画面サイズの24ビットフルカラーBMPファイルを読み込めます。

	・エディタのミニフォントモードのカーソルの幅を太くしました。

	・編集可能なサイズが32KBまでの留まっていたのを修正しました。（最大64KB）


ｖ0.22α　2017.12.10	アルファ版（インタプリタのみ）
	・エディタのミニフォントモードのパフォーマンスを向上させました。

	・複数行のペーストをした場合にカーソルが飛ぶ不具合を修正しました。

	・For～Nextの制御変数のエラーチェックを厳しくしました。
	（実数モードで整数変数を制御変数に使うとエラーになります。）

	・24ビットフルカラーBmpファイルの読み込みに一部対応しました。
	　まだ、大きなファイルの読み込みは未対応です。約160KB以下のファイル限定です。
	　（添付サンプルプログラムを参照して下さい。）

	・行列編集モードの行列編集でドット編集の出来るモードをCG対応しました。
	　行列を表示している状態で[OPTN]キーを押すとドットエディタになりますが、
	　カラー値の変更は、直接数値入力しか色変更方法がありません。


ｖ0.21α　2017.12.6	アルファ版（インタプリタのみ）
	・実数表示の指数表示修正しました。


ｖ0.20α　2017.12.5	アルファ版（インタプリタのみ）
	・SDK環境をFX-SDKベースのminiSDK0.9に変更しました。
	・実数の関数演算がFX版同等になりました。
	・実数表示の指数対応しました。（ちょっと変ですが後のバージョンで修正します。）


ｖ0.11α　2017.12.5	アルファ版（インタプリタのみ）
	・Save、Load(コマンドのファイル名に文字列変数が使えるようになりました。
	・カナ文字が表示できなくなっていたのを修正しました。
	・CG20における自動オーバークロック基準を変更しました。
	　Ptune2でPutDispのフレームレートが50fps以下の場合に自動オーバークロックします。
	・MLコマンドの_Pointコマンドが動作しなかったのを修正しました。


ｖ0.10α　2017.12.3	アルファ版（インタプリタのみ）
	・コピー＆ペーストの不具合を修正しました。
	・Pixelコマンド後に色が変わってしまうのを修正しました。
	・整数モードにおけるPixelコマンドでは描画範囲外になる時はエラーにならずに描画されないようにしました。


ｖ0.09α　2017.11.29	アルファ版（インタプリタのみ）
	・コピー＆ペーストで使うバッファ領域の確保に不具合があったのを修正しました。
	・コピー＆ペーストの選択範囲とカーソル位置がずれていたのを修正しました。

	・[EXIT]をキーを離すまで効かないように変更しました。

	・PopUpWin(コマンドを拡張しました。関数としての実装に変更になります。数式の中で使えます。
	（書式）PopUpWin( n )
	　従来の仕様です。n行分のポップアップを表示させます。表示のみです。

	・exit　ポップアップ。
	（書式）PopUpWin(11,"メッセージ1行目"[,"メッセージ2行目"])
	　返り値は常に1です。コマンド終了時に画面が復帰します。

	・Yes No　ポップアップ。
	（書式）PopUpWin(10,"メッセージ1行目"[,"メッセージ2行目"])
	　返り値が[Yes]:1 [No]:0となります。コマンド終了時に画面が復帰します。

	・画面退避のみ　ポップアップしません。
	（書式）PopUpWin(0)
	・退避した画面の復帰のみ。
	（書式）PopUpWin(9)
	　画面退避バッファはシステムと共通なので、退避後にポップアップが出るとバッファが上書きされ元に戻らなくなりますので注意して下さい。


ｖ0.08α　2017.11.28	アルファ版（インタプリタのみ）
	・Locateコマンドの22桁目が描画される不具合を修正しました。
	・コメントがあった場合の非互換性を修正しました。
	・?拡張コマンドの入力文字数制限が機能していなかったのを修正しました。
	・-Disp-表示とDone表示が通常表示に戻ってしまうのを修正しました。
	・デバッグモードでテキスト表示が白になる不具合を修正しました。


ｖ0.07α　2017.11.26	アルファ版（インタプリタのみ）
	・CG10/20ではデフォルトクロックで起動した場合には自動的にCG50相当にオーバークロックするようにしました。（58MHz->118MHz)
	・入力時に画面が壊れるのを修正しました。
	・検索、CHAR選択画面がBack-Colorコマンドに影響されたのを修正しました。
	・FkeyMenu(にシステム内蔵ファンクションキーを表示できるようにしました。
	（例）FkeyMenu(1,42)
	　テキスト画面の一番左側のファンクションメニューエリアに白抜きのEDITが描画されます。
	・中断再開時の[EXE][F1]キーの入力が継続しないようにしました。


ｖ0.06α　2017.11.25	アルファ版（インタプリタのみ）
	・?拡張コマンドの動作をEXEキー押下で終了するように変更しました。
	・ファンクションキー表示を修正しました。
	・エディタ等がBack-Colorコマンドに影響されたのを修正しました。


ｖ0.05α　2017.11.24	アルファ版（インタプリタのみ）
	・CG10/20でのPictファイルの不具合を修正しました。
	・ファンクションキー表示を修正しました。
	・セットアップの左右キーで最初と最後に移動するようにしました。

	・ポップアップをシンプルに変更しました。
	・カラー指定でWhiteが使えるようになりました。


ｖ0.04α　2017.11.23	アルファ版（インタプリタのみ）
	・g1mモードとg3mモードの切替をプログラム中で出来ます。
	（書式）'#G1M または'#g1m
	（書式）'#G3M または'#g3m

	・g3mモードの場合にPlotの解像度をデフォルトで1x1ドットに変更できます。
	（書式）'#SketchThin または'#S-L-Thin
	　デフォルトに戻すには
	（書式）'#SketchNormal または'#S-L-Normal

	・Plotコマンドの前にSketchThinを付けるとそれ以降のPlotで移動単位および描画が1ドットになります。
	　元に戻すにはSketchNormalをPlotコマンドの前に付けます。
	（書式）SketchThin Plot
	（書式）SketchThin PlotOn

	・1階層までですがサブフォルダ対応しました。


ｖ0.03α　2017.11.21	アルファ版（インタプリタのみ）
	・g3mモードのViewWindowに対応しました。


ｖ0.02α　2017.11.20	アルファ版（インタプリタのみ）
	・CG10/20に対応しました。


ｖ0.01α　2017.11.19	アルファ版（インタプリタのみ）
	・FX版のVer 1.64βのほぼ全機能を引き継ぎます。

	・背景色指定設定コマンド、Back-Colorを追加しました。
	（書式）Back-Color　カラー
	（例）Back-Color Green

	・任意の色設定コマンド、RGB(コマンドを追加しました。
	（書式）RGB( R ,G, B )
	　値の範囲はそれぞれ0～255までとなります。
	　Red、Green、Blue等の箇所で使えます。
	（例）Plot/LineColor RGB(160，160，0）
	　Plot/LineColor Yellowよりちょっと暗いYellowです。


===============================================================================
FX版　更新履歴
===============================================================================
v1.64β 2017.11.19	ベータ版（インタプリタのみ）
	・マルチバイト文字を含むコマンドの表示の最後が欠けていたのを修正しました。

	・List->Mat(コマンドのバグを修正しました

	2017.10.29	・CATALOGキーが効かなくなる不具合を修正しました。

	2017.10.20	・Ver 1.55β以降で拡張した?コマンドのオプションパラメータに入力桁数を追加しました。
	（書式）?([x][,y][,width][,"空白キャラクタ"][,入力桁数][,R])
	　このオプションを付けると直前のカーソル位置から改行されません。入力プロンプトの"?"も表示されません。
	　各パラメータは省略できます。
	（例）"A="?()->A
	　"A="に続いて入力待ちになります。
	（例）"A="?(,,,,,R)->A
	　"A="に続いて反転表示で入力待ちになります。
	（例）"A="?(,,8,,,R)->A
	　"A="に続いて反転入力待ちになります。入力範囲は8桁分のみです。それを超える入力では横スクロールします。
	（例）?(3,4,5,">",5)A
	　X=3，Y=4の位置でAの値を表示して入力待ちになります。入力範囲と入力桁ともに5桁のみ、空白は">"で埋められます。
	（例）?(3,4,5,,5,R)A
	　X=3，Y=4の位置でAの値を反転表示して入力待ちになります。入力範囲と入力桁ともに5桁のみです。

	2017.10.14	・エディタのサーチにおいて次の検索をする場合に[EXE]キーが純正非互換動作になっていたのを修正しました。
	・エディタのSkipで1行が長い場合に止まる不具合を修正しました。

	2017.10.9	・エディタの行番号を画面上の物理的な行ではなく改行までを1行とする論理行に変更しました。

	・行列名の指定を数値で出来るように拡張しました。
	　行列のアクセスは純正同様にMat+英1文字以外に、Listと同じく数値で指定できるようになりました。
	　（θ、ｒ、Ansは数値指定できません。）
	　Mat A = Mat 1
	　Mat B = Mat 2
	　Mat C = Mat 3
	　Mat Z = Mat 26
	　Mat a = Mat 27
	　Mat z = Mat 52

	　さらに"@"を付けると行列名を変数で指定することも出来ます。
	　（コマンド入力方式がスタンダードモードでは[OPTN]-[F5]で"@"を入力できます。）
	　（例）3->A
	 　	Mat @A （Mat Cと同じです）

	　Listの拡張で行列も同様に最大1040まで拡張されます。（Ver 1.61β以降）

	　この拡張により従来のバージョンでの小文字名の行列はList 1～26ではなくList 27～52に変更になります。
	　Mat A～ZとList 1～26は互いに独立した領域に確保されます。
	　小文字以降の行列はリストと共用するために27以降の行列＝小文字行列はリストと同じ領域を使用します。（Ver 1.64β以降）
	　53以降の行列は数値のみ指定できます。
	  Mat 1  = Mat A ( List 1 と同じではありません。)
	  Mat 2  = Mat B ( List 2 と同じではありません。)
	  Mat 3  = Mat C ( List 3 と同じではありません。)
	  Mat 26 = Mat Z ( List 26 と同じではありません。)
	  Mat 27 = Mat a ( List 27　と同じです。)
	  Mat 28 = Mat b ( List 28　と同じです。)
	  Mat 29 = Mat c ( List 29　と同じです。)
	  Mat 52 = Mat z ( List 52　と同じです。)
	  Mat 100  = List 100
	  Mat 1000 = List 1000

	　Mat a[5,1] = Mat 27[5,1] = List 27[5]
	　Mat b[5,1] = Mat 28[5,1] = List 28[5]
	　Mat c[5,1] = Mat 29[5,1] = List 29[5]
	　Mat z[5,1] = Mat 52[5,1] = List 52[5]

	　List 53[5]   = Mat 53[5,1]
	　List 100[5]  = Mat 100[5,1]
	　List 1000[5] = Mat 1000[5,1]

	　（例）100->A
	  　	Mat @A （Mat 100、List 100と同じです）


	・乱数の初期値を変数で指定できるようになりました。
	 （書式）Ran# #初期値
	　（例）Ran# #12345
	　（例）Ran# #A

	・Monochromeライブラリ系コマンドに拡大縮小と回転処理を同時に加えてビットマップ表示する"_BmpZmRotate"コマンドを追加しました。
	（Planet-CasioよりNinestars氏がMonochromeライブラリに機能追加したプログラムを利用させて頂いています）
	 （書式）_BmpZmRotate &Mat , x, y, width, height [,横拡大幅] [,縦拡大幅] [,回転角(度)] [,color][,確率]
	　（例） _BmpZmRotate &Mat A, 0, 0, 20, 10, 1.5, 2.5, 90
	　（例）_BmpZmRotate &Mat A, 0, 0, 20, 10, %150, %250 , 15, 4, %50

	・Monochromeライブラリ系コマンドのスクロールコマンドが範囲指定可能になりました。
	（書式）_Hscroll スクロール量 [,x1,y1,x2,y2]
	（書式）_Vscroll スクロール量 [,x1,y1,x2,y2]
	（例）_Hscroll 1,32,16,47,95
	　(32,16)-(47,95)のエリア内を右向きにスクロールします。
	（例）_Vscroll -1,5,10,100,40
	　(5,10)-(100,40)のエリア内を上向きにスクロールします。


v1.63β 2017.9.26	ベータ版（インタプリタのみ）
	・サブプログラムがプログラムの最後にある場合の純正非互換性を修正しました。
	・" "文字列表示の7行目の処理を修正しました。

	2017.9.6	・ファイル名に特殊文字がある場合に表示できない不具合を修正しました。
	（カナ文字は使えません。自動的に"～"に変換されます。）

	2017.8.20	・シリアル通信をサポートしました。（純正と同名コマンドですが純正との互換はありません。）
	（書式）Send( 変数[,ボーレート])
	（書式）Receive( 変数[,ボーレート])
	（書式）Send38k 変数[,転送バイト数]
	（書式）Receive38k 変数[,転送バイト数]
	（書式）OpenComport38k[,ボーレート][,転送モード]
	（書式）CloseComport38k
	　転送できるデータは変数、行列、リストとなります。
	　転送元と転送先でデータの型を合わせる必要があります。
	　Send38k/Receive38kはOpenComport38kにて[転送モード]に0を指定するとバイナリデータの転送になります。
	　[ボーレート値]：0=300, 1=600, 2=1200, 3=2400, 4=4800, 5=9600, 6=19200, 7=38400(デフォルト), 8=57600, 9=115200 baud
	　[転送モード] 0:バイナリ転送モード　　1:データ形式自動判別モード（デフォルト）
	　Send(とRecv(はコマンド単独で転送出来ますが、Send38k/Receive38kはOpenComport38k/CloseComport38kが必要です。

	（例）Send(A)
	（例）Receive(A)
	（例）Send(Mat A)
	（例）Receive(Mat A)

	（例）OpenComport38k,9,0
	　　　Send38k List 1
	　　　CloseComport38k
	（例）OpenComport38k,9,0
	　　　Receive38k List 1
	　　　CloseComport38k

	・Ver 1.60βより試験的実装していたエディタの行番号表示の不具合を修正しました。


v1.62β 2017.8.14	ベータ版（インタプリタのみ）
	・セットアップ画面での日付時刻表示が関係ないところに表示されることのある不具合を修正しました。

	・プログラム実行中の中断でエディタに戻らずにファイルリストに戻る設定を加えました。
	　セットアップから設定出来ます。

	・コマンド入力時ににコマンド使用履歴が表示できるようになりました。
	　[MENU]キーを押すと過去32個分のコマンドが表示されます。
	　さらにカーソル[←][→]を押すと使用頻度の高い順に並び替えて表示されます。

	・行列編集でドット編集の出来るモードを追加しました。
	　行列を表示している状態で[OPTN]キーを押すとドットエディタになります。
	　行列の各要素の値が0の場合とそれ以外でドットの白黒が決まります。

	・行列のデータをクリップボードにコピー＆ペーストが可能になりました。
	　行列編集モード時に[SHIFT]+[8](CLIP)でコピー、[SHIFT]+[9]でペースト出来ます。
	　(C.Basic)形式なのでエディタにて行列データをペースト出来ます。

	・BMP形式の読み書きに対応しました。（1ビット、モノクロのみ）
	（例）BmpSave "TEST",Mat A
	　行列AのデータをBMP形式で"TEST.bmp"に保存します。
	（例）BmpLoad("TEST")->Mat A
	　"TEST.bmp"のデータを行列Aに読み込みます。

	・DrawMatコマンドを追加しました。（従来のDotPutコマンドのMLコマンド仕様です。）
	（書式）DrawMat Mat A[px,py], x, y, width, height [,横拡大幅][,縦拡大幅][,color][,確率]
	（例） DrawMat Mat A, 0, 0, 128, 64
	（例） DrawMat Mat A[10,5], 0, 0, 40, 30, %150, %250, 4, %50

	・Captureファイルをサポートしました。ストレージメモリ上への読み書きが出来ます。最大99までのファイルが利用できます。
	（例）StoCapt 20
	（例）RclCapt 20

	・Pictファイルのファイルサイズを2KBから1KBに半減しました。

	・StrRepl(コマンドを追加しました。
	（書式）StrRepl(文字列, 検索文字列, 置換文字列 [,検索開始位置])
	（例）StrRepl("Hello World","World","Earth") -> "Hello Earth"
	（例）StrRepl("abcabc","ab","ff",3) = "abcffc"
	（例）StrRepl("abcabc","ab","ff") = "ffcffc"

	・Matエディタで任意の行列を選択する場合、Baseが0の場合、0が選択できない不具合を修正しました。

	・割り込み動作時に[MENU]キーでOSに戻ることを無効にしました。（カーソル点滅時等）


v1.61β 2017.8.2	ベータ版（インタプリタのみ）
	・隠しRAM使用時に99までのPictファイルと1040までのListを使うことが出来ます。セットアップで指定します。
	・ListとMatの一文字短縮表示が出来るようになりました。セットアップでLとMの反転文字とボールド体が選択できます。

	・Monochromeライブラリ系コマンドの"_Circle"コマンドに角度指定と頂点指定を追加しました。
	（書式）_Circle x,y,半径,color[,確率][,幅][,角度初期値][,角度終了値][,頂点数]
	（例） _Circle 64,32,20,4,0.5,3
	 3x3ドットで50%の確率で円を描画します。
	（例） _Circle 64,32,20,1,,3,0,90
	 3x3ドットで下端より左回りに90度分の円弧を描画します
	（例）_Circle 64,32,20,1,,,0,360,5
	 五角形を描画します。
	（例） _Circle 64,32,20,1,,,20,380,5
	 頂点の位置を20度ずらした五角形を描画します。

	・Monochromeライブラリ系コマンドに図形の内部の黒ドット数をカウントする"_Test"コマンドオプションを追加しました。
	　(サポートコマンド) _Point _Line _Rectangle _Circle _Polygon
	　サポートコマンドの前に"_Test"を付けると機能します。
	（例）_Test_Rectangle 0,0,127,63
	　(0,0)-(127,63)エリアにおける黒ドットの数を返します。
	（例）_Test_Circle 62,32,20
	（例）_Test_Point 10,10,5
	（例）_Test_Line 10,10,100,30

	・Monochromeライブラリ系コマンドに拡大縮小、回転処理を加えてビットマップ表示する"_BmpZoom"と"_BmpRotate"コマンドを追加しました。
	（Planet-CasioよりNinestars氏がMonochromeライブラリに機能追加したプログラムを利用させて頂いています）
	（書式） _BmpZoom &Mat , x, y, width, height [,横拡大幅] [,縦拡大幅] [,color][,確率]
	（書式）_BmpRotate &Mat , x, y, width, height, 回転角(度) [,color][,確率]
	（例）_BmpZoom &Mat A, 0, 0, 20, 10, 1.5, 2.5
	（例）_BmpZoom &Mat A, 0, 0, 20, 10, %150, %250 , 4, %50
	（例）_BmpRotate &Mat A, 0, 0, 20, 10, 45

	・Getkeyコマンドに複数キー同時読み込みの"M"オプションを追加しました。結果はリスト形式で返ります。
	（例）GetkeyM->List 1
	 [EXE]と[F1]を同時押しした場合、 {79,31}が返ります。

	・リスト同士の比較コマンド"ListCmp("を追加しました。
	　リストとリスト、リストと値の比較ができます。
	（例）ListCmp({1,2,3},{1,2,3})
	 　1が返ります。
	（例） ListCmp({1,2,3},{1,3})
	 　0が返ります。
	（例） ListCmp({1,2,3},{1,3,2})
	 　0が返ります。
	（例） ListCmp({1,2,3},2)
	 　1が返ります。
	（例） ListCmp({1,2,3},4)
	 　0が返ります。

	・リストを並べ替えるSortA(,SortD(コマンドが数式の中でも使えるようになりました。


v1.60β 2017.7.26	ベータ版（インタプリタのみ）
	・任意の進数変換コマンドとしてStrBase( コマンドを追加しました。
	(書式) StrBase(　N進数文字列, 変換前の進数N, 変換後の進数M)
	進数の範囲は2～64です。
	  　　　使用キャラクタは{ 0-9 A-Z a-z θ π}
	N進数の文字列からM進数の文字列に変換します。
	(例) StrBase("579",15,12) -> "873"
	  StrBase("100",13,10) -> "169"
	  StrBase("123",16,3) -> "101210"
	  StrBase("43981",10,16) -> "ABCD"
	  StrBase("12A345AFZ",36,10) -> "2999794422815"
	  StrBase("AZaz",62,10) -> "2520113"

	・"Graph Y="　で　コマンド前のラインスタイルが設定できなかったバグを修正しました。
	・_PixelTest( が行頭にあった場合に動作しなかったバグを修正しました。

	・Monochromeライブラリ系コマンドの描画色に2x2ドット柄を追加しました。
	　Colorの値:10	    11　　　12　　　13　　　14 （1ドット描画）
	　Colorの値:20　　　21　　　22　　　23　　　24 （2x2ドット描画)
	　　　　　　□□　　■□　　■□　　■■　　■■
	　　　　　　□□    □□    □■    ■□    ■■
	（例）_FillCircle 64,32,30,21

	・Monochromeライブラリ系コマンドの描画色にランダムカラーを追加しました。
	　Colorの値に4を指定した場合、Colorに続くパラメータは黒ドットとなる確率(0～1)を指定できます。
	（例） _Rectangle 0,0,127,63,0,0,4,0.5
	　画面全体が半分の確率でランダムに黒ドットで埋まります。
	（例） _Rectangle 0,0,127,63,0,0,4,0.1
	　画面全体が10%の確率でランダムに黒ドットで埋まります。
	（例）_FillCircle 64,32,30,4,0.5
	 　円の内側が50%の確率で黒ドットで埋められます。
 	（例） _FillCircle #0,0,3,4,0.5
	　円の内側が半分の確率でランダムに黒ドットで埋まります。

	・Monochromeライブラリ系コマンドの"_Line"コマンドにおいて線の太さ指定を追加しました。
	（書式）_Line x1,y1,x2,y2,color[,確率][,幅]
	（例）_Line 0,0,127,63,1,,10
	　画面を斜めに10ドットの太さの直線が描かれます。


v1.59β	2017.7.19	ベータ版（インタプリタのみ）
	・エディタの検索に置換機能を追加しました。検索入力時に[F2]を押すと置換文字列入力が出来ます。
	　置換には確認しながら置換[F2]と一気に置換するモード[F4]があります。
	・フォルダ上にカーソルがある状態から新規ファイルを作成することが出来るようになりました。
	・クリップ選択から検索に文字列が入力できなくなっていた不具合を修正しました。
	・StrInv(が上手く動作しなかったバグを修正しました。


v1.58β	2017.7.15	ベータ版（インタプリタのみ）
	・ミニフォント表示のエディタが使えるようになりました。
	・実行中断時にデバッグモードにならない設定を追加しました。
	・ファイルモードの[DEL]でフォルダの削除も出来るようになりました。
	・新規ファイルでDELキーを連続した場合にWで埋められファイル異常になるバグを修正しました。
	・Progコマンドにおいてサブフォルダのファイルの読み込みが出来なくなっていたバグを修正しました。(Ver 1.00ベータ5でエンバグ)


v1.57β	2017.7.8	ベータ版（インタプリタのみ）
	・エディタ画面の最上部一行をエディタとして使う設定を加えました。Setupから設定します。
	・カット＆ペースト画面で削除だけをするボタンを追加しました。
	・エディタ終了時の強制自動保存に対応しました。Setupで設定します。
	・If～Then～IfEndにおいてThenが無くてもエラーにしないようにしました。

	・Screenコマンドに画面全体を反転するRオプションを追加しました。"Screen"+"R"
	（例）ScreenR

	・論理座標系から物理座標を求めるScreenコマンドの"#"オプションを追加しました。
	　結果はListAnsに返ります。
	（使い方) Screen#X,Y[,Xmin][,Xmax][,Ymin][,Ymax]
	（例)Screen#1,1,-6.3,6.3,-3.1,3.1
	　　ListAns{74,22}
	・物理座標系から論理座標を求めるScreenコマンドの"%"オプションを追加しました。
	　結果はListAnsに返ります。
	（使い方) Screen%X,Y[,Xmin][,Xmax][,Ymin][,Ymax]
	（例)Screen%74,22,-6.3,6.3,-3.1,3.1
	　　ListAns{1,1}

	・Monochromeライブラリ系のコマンドを論理座標で使うことのできる"#"オプションを追加しました。
	  support ML command,
	_Point
	_Pixel
	_PixelTest(
	_Line
	_Rect
	_Horizontal
	_Vertical
	_Circle
	_FillCircle
	_Elips
	_FillElips
	_ElipsInRct
	_FElipsInRct

	(例) ViewWindow -6.3,6.3,0,-3.1,3.1,0
	 Screen.G
	 	_Circle #0.5,1.2,1.2.1

	・繰り返し文字列を返すStrChar(コマンドを追加しました。
	（例）StrChar("ABC",5)
	　文字列"ABCABCABCABCABC"が得られます。

	・文字列を真ん中に埋め込むStrCenter(を追加しました。
	（使い方）StrCenter("文字列",長さ[,"周辺を埋めるキャラクタ"])
	（例） StrCenter("Test",8)
	　文字列、"  Test  "が得られます。
	（例） StrCenter("Test",8,"*")
	　文字列、"**Test**"が得られます。

	・16進数と2進数の文字列に変換するHex(とBin(コマンドを追加しました。
	（例）Hex(12345)->Str 1
	　"3039"がStr 1に入ります。
	　数値に戻すは、
	（例） Exp("0X"+Str 1)->A

	　2進数では、
	（例）Bin(12345)->Str 1
	　"11000000111001"がStr 1に入ります。
	（例）Exp("0B"+Str 1)->A

	・リストが1～52まで使えるようになりました。

	・ファイルモードでフォルダ作成[MK.F]キーを追加しました。
	　[RN.F]は将来的な実装となります。


v1.56β	2017.6.30	ベータ版（インタプリタのみ）
	・LCD描画のリフレッシュコントロールにおいて、RefrshTime値に0を指定することで画面更新しなくなる設定を追加しました。
	　セットアップ、およびコマンドで指定可能です。
	（例）RefrshCtrl 2
	　　　RefrshTime 0
	　テキスト、グラフィックス全ての描画コマンドでコマンド実行直後での画面が更新されなくなります。

	・1/128秒単位で時間待ちをするTicksWaitコマンドを追加しました。
	　（TicksとWaitコマンドの連続合わせ技です。関連してコマンド入力キーアサインを一部変更しました。）
	（例）TicksWait 128
	　1秒間待ちます。
	（例）TicksWait -128
	　前回のTicksWaitコマンド実行時より1秒間待ちます。すでに1秒を越えていた場合は待ち時間無しで次の処理に移ります。
	（例）TicksWait -4
	　前回のTicksWaitコマンド実行時より4/128秒待ちます。ループ内にこのコマンドを一つ記述するだけで毎秒32回のループが作れます。


v1.55β	2017.6.11	ベータ版（インタプリタのみ）
	・?コマンドにオプションパラメータを追加しました。
	　このオプションを付けると直前のカーソル位置から改行されません。入力プロンプトの"?"も表示されません。
	（書式）?([x][,y][,width][,"空白キャラクタ"][,R])
	　各パラメータは省略できます。
	（例）"A="?()->A
	　"A="に続いて入力待ちになります。
	（例）"A="?(,,,,R)->A
	　"A="に続いて反転表示で入力待ちになります。
	（例）"A="?(,,8,,R)->A
	　"A="に続いて反転入力待ちになります。入力範囲は8桁分のみです。それを超える入力では横スクロールします。
	（例）?(3,4,5,">")A
	　X=3，Y=4の位置でAの値を表示して入力待ちになります。入力範囲は5桁分のみ、空白は">"で埋められます。
	（例）?(3,4,5,,R)A
	　X=3，Y=4の位置でAの値を反転表示して入力待ちになります。入力範囲は5桁分のみ、それを超える入力では横スクロールします。

	・AxesOnにおいてグラフの目盛りが描画されないことがある不具合を修正しました。


v1.54β	2017.6.3	ベータ版（インタプリタのみ）
	・実数時の行列の乗算が整数演算になっていたバグを修正しました。
	・Plotコマンド2つとLineコマンドでライン描画されなかった不具合を修正しました。
	・PictファイルをHeap（隠しRAM）エリアで使用する場合、保存時にストレージメモリに保存する設定（セットアップ）とコマンドオプションを追加しました。
	（例）Pict #20
	　ヒープ（隠しRAM）領域とストレージメモリに同時に保存します。
	・PictファイルをHeap（隠しRAM）エリアで使用する場合、保存時にストレージメモリに同時に保存する設定を追加しました。
	・テキストから変換時にプログレスバーを表示するようにしました。


v1.53β	2017.5.27	ベータ版（インタプリタのみ）
	・StrRight(コマンドのバグを修正しました。
	（例）StrRight("12345",0)
	　この結果はヌルストリングになるはずが"5"になっていました。

	・List演算時にcos^-1がcosになっていたバグを修正しました。
	・Graph Y=コマンドでYn変数が使えなかった不具合を修正しました。
	（例）"sin X"->Y1
	　　　Graph Y=Y1
	・文字列内にエスケープ文字でクォーテーションマークが使用されている場合、テキスト変換がおかしくなる不具合を修正しました。
	（これはfx-CG10/20でもおかしくなるようです。）

	・Lblコマンドでラベル名に英小文字が使用できるようになりました。



v1.52β	2017.5.16	ベータ版（インタプリタのみ）
	・LocateやTextコマンドにおいて" "ダブルクォーテーションが閉じていない場合、以降のプログラムが文字列扱いになってしまう不具合を修正しました。
	・RanNorm#(とRanBin#(関数を追加しました。


v1.51β	2017.5.11	ベータ版（インタプリタのみ）
	・ファンクションキーのアイコンをシステムのアイコンに変更しました。
	・GCD(とLCM(関数を追加しました。


v1.5β	2017.5.7	ベータ版（インタプリタのみ）
	・純正同様のコマンド入力をサポートしました。セットアップにてC.Basic(fx-5800P)方式とStandard(fx-9860G)方式を選択できます。
	　入力可能なコマンドはCommand_List.txtを参照して下さい。

	・行列コマンドとして*Row,*Row+,Row+コマンドをサポートしました。


v1.42β	2017.4.30	ベータ版（インタプリタのみ）
	・Lbl名に<r>とθが使えなかったのを修正しました。
	・メインとサブプログラムで同じLbl名を使っていた場合、飛び先が不正になる不具合を修正しました。
	・?->Aコマンドで未入力で[EXE]を押した場合にフリーズすることがあったのを修正しました。
	・Listを含む演算でスカラーが後に来る場合のバグを修正しました。
	（例）List 1 + 5 -> List 2


v1.41β	2017.4.22	ベータ版（インタプリタのみ）
	・隠しRAM使用時に、Mat行列&ListをC.Basic起動時に初期化しない設定を加えました。(要セットアップ設定）
	　その場合、C.Basicを終了して他の機能、アドインを使用後、再度C.Basicを起動した場合に前回終了時点でのMat行列&Listが復活します。
	　（他のアドインが隠しRAMを使用していない場合）

	・MENUコマンドにおいて数字キーによる入力が出来なかったのを修正しました。


v1.4β	2017.4.16	ベータ版（インタプリタのみ）
	・純正仕様の行列の乗算をサポートしました。
	　Mat行列を配列とみなしたMat配列同士の乗算は、小文字Mat行列を使うことでList同士の乗算にすることで可能です。(Listは実体が小文字Matと同じため）
	（例）Mat a × Mat b
	　行列乗算
	（例）List 1 × List 2
	　配列乗算


v1.31β	2017.4.15	ベータ版（インタプリタのみ）
	・Listの要素を一つずつ増やしていく再確保仕様を純正互換に修正しました。

	・整数モードにおけるビット演算の[ not ]が論理演算の[ Not ]のままだったのを修正しました。

	・Stopコマンドでプログラム終了時にDone表示が出なかったことのを修正しました。


v1.3β	2017.4.10	ベータ版（インタプリタのみ）
	・ And , Or , Xor が論理演算ではなくビット演算になっていたために純正非互換だったのを修正しました。
	　この変更でビット演算が出来なくなったので、ビット演算子として純正のBASEモードで使う[ and , or , xor, not ]を追加しました。

	・"文字列"が横幅ちょうど21文字で終わった場合に（余分に？）改行されてなかった非互換性を修正しました。

	・Menuコマンド実行中に[MENU]キーでメインメニューに戻ってしまう非互換性を修正しました。

	・StrMid(コマンドにおいて、3つめのパラメータを省略した場合にシステムエラーになる不具合を修正しました。


v1.2β	2017.3.17	ベータ版（インタプリタのみ）
	・リストの四則演算の延長で配列（行列）の演算が一部可能になりました。
	　純正行列と互換のあるのは行列同士の加減算、および行列とスカラー演算のみとなります。
	（例）Mat A + Mat B
	（例）Mat A * B + Int Mat C

	・BG-None、BG-Pictコマンドの互換性を改善しました。

	・テキストソースからの変換においてExp(-)の変換ミスを修正しました。
	（誤）Exp(-)9	->  Exp(-)9
	（正）Exp(-)9	->  e-9

	・Getkey1，Getkey2コマンドで[MENU]キーでメインメニューに戻ってしまっていたのを純正Getkeyと同じく戻らないようにしました。


v1.1β	2017.3.11	ベータ2版（インタプリタのみ）
	・整数モードのリスト機能に対応しました。

	・Mat行列表示時に[OPTN]キーでリスト表示に変わります。[VARS]キーで文字列表示＆入力が出来るようになりました。

	・'#CBINT、'#CBDBLがプログラム中で複数使われた場合に機能しない不具合を修正しました。

	・"Char"が含まれる文字列のテキスト変換ミスを修正しました。

	・Pictをヒープ領域に設定している時に、カレントディレクトリもしくはPictフォルダに同じNoのPict画像ファイルが存在する場合は自動的に読み込むようにしました。
	　PictをS.Mem領域に設定している場合にはカレントドライブのPictフォルダしかアクセスしません。
	（例）Pict10.g1mファイルがカレントディレクトリもしくはPictフォルダに存在すれば、Pict10を最初にアクセスした時にその画像がヒープのPict領域に自動的に読み込まれます。
	　　　存在しない場合はメモリエラーとなります。
　　　　　　　　　　　　　　　画像が存在した場合は、次回のPict10アクセスからはヒープアクセスのみとなります。

	・ファイルリスト画面にてPictファイルで[EXE]を押すと画像の確認ができます。

	・For～Nextコマンドにおいて初期値が終値を超えている場合にループ内を通過してしまう非互換性を修正しました。


	2017.3.5	ベータ1版（インタプリタのみ）
	・リスト機能をサポートしました。
	・サポートコマンド
	　List Ans
	　{1,2,3,4,5}->List 1
	　10->Dim List 1
	　Dim List 1
	　Seq( X^2, X, 1, 10, 2 )->List 2
	　Augment(List1,List2)->List3
	　Mat>List( Mat A, 2) -> List 1
	　List>Mat( List 1, List 2,..) -> List 9
	　Fill(3,List1)
	　Min(List1)
	　Max(List1)
	　Mean(List 1）
	　SortA(List1)
	　SortB(List1)
	　Sum List1
	　Prod List1
	　Sigma(数式、制御変数、初期値、終値、刻み)

	・リストを含む演算（四則演算と関数演算）をサポートしています。
	　サポート済　A + List 1[B-1] * List 2[C+1]
	　サポート済　A + List 1 + A - B * cos C * List 2
	　サポート済  sin List 1  + cos List 2 * log List 3

	・DrawStatコマンドとGraph(X,Y)=(コマンドを一部サポートしました。
	　関連コマンドとして、
	　BG-None、BG-Pict、G-Connect、G-Plot
	　S-Gph1、S-Gph2、S-Gph3、DrawOn、DrawOff、Scatter、xyLine、Square、Cross、Dot
	　コマンドの追加と、
	　TθMin
	　TθMax
	　TθPtch
	　これらのViewWindow設定変数の読み書きに対応しました。

	・ファイルのDeleteコマンド追加しました。
	（例）Delete "TEST.txt"
	　"TEST.txt"を削除します。
	（例）Delete "TEST.txt",1
	　削除前に確認します。

	・デバッグモード時に、[F1] (JUMP) ジャンプサブメニュー[F6]スキップダウンが動作しなかったのを修正しました。

	・For～Nextコマンドにおいて制御変数の終値が超過していたのを修正しました。

	・Ansの値が常に式の結果になっていたところを（→）代入がある場合はAnsを更新しない純正仕様に合わせました。

	・行頭のスペースにおいて、If～ThenコマンドのThenの前がスペースの場合にエラーになる不具合を修正しました。

	・一行内にループ構造があるとで[AC]ブレークが効かない不具合を修正しました。
	（例）While Getkey≠31:WhileEnd

	・サブプログラム内でStopコマンドで終了しない不具合を修正しました。

	・文字列変数に使われるデフォルト行列をs（小文字）から追加変数のの<r>に変更しました。

	・全体の実行速度を遅くするウエイト機能を追加しました。セットアップおよびWaitコマンドで設定します。
	　セットアップで設定した場合は全部のプログラムが影響を受けます。
	　個々のプログラムで調整したい場合はWaitコマンドを使用します。
	　（例）Wait 100
	　　ウエイト値に100を設定します。
	　　SH3機でもSH4機でも同じ程度の速度低下となっています。
	　　ウエイト値、10で約1/2，100前後で速度1/10になります。（速度低下の程度はプログラムによって異なります。）


v1.00β	2017.2.3	ベータ7版（インタプリタのみ）
	・既定の変数を違う変数名でもアクセスできるようにしました。
	　AliasVarコマンドを追加しました。
	　このコマンドを使うことで最大10個までエイリアス変数を利用できます。
	　置き換え使用可能な変数名は[CHAR]で選択できる一文字キャラクターのみです。
	　変数名、行列名ともに同時に変更されます。
	　同一変数に違う変数名を割り当てた場合は、後に実行されたAliasVarコマンドの変数名が有効になります。
	（例）AliasVar A＝α
	　　　α+100→α
	　AliasVarコマンド実行後は、変数Aをαとして使用できます。
	　αの実体はAなので
	　A+100→Aと同じです。

	2017.2.1	ベータ6版（インタプリタのみ）
	・変数名として<r>とθを追加サポートしました。グローバル変数だけでなく、ローカル変数としても使えます。
	　さらに行列名としても追加しているので、θ1、θ5等の数字添字型変数（Mat行列の省略形）も使えます。
	・数式における分数表記（ラインモード）を追加しました。

	2017.1.29	ベータ5a版（インタプリタのみ）
	・SD版においてファイルリスト画面の移動が遅くなる不具合に対処しました。

	2017.1.28	ベータ5版（インタプリタのみ）
	・テキストファイルから実行/編集した場合は、テキストファイルのみ変更されるように仕様変更しました。
	　その場合、Casio Basic標準ファイル形式(g1m)を同時に保存するかどうかの設定をセットアップより選択できます。

	・上記の仕様変更によりサブプログラムも含めすべてテキストファイルだけでのC.Basic運用が出来るようになりました。

	2017.1.26	ベータ4版（インタプリタのみ）
	・テキストファイルのコピー及びリネームの不具合を修正しました。

	・" "ダブルクォーテーションに囲まれた文字列が複数行に渡る場合に、特殊文字が規定通りにテキスト変換できない不具合を修正しました。

	・Casio Basic仕様の描画系コマンドにおいて、コマンド名の直後に"@"アットマークを付けると描画モードがテキストモードやグラフィックモードに関わらず現在のVRAMに描画するようにしました。
	（例）Locate 2,2,"String"
	　　　Text @16,1,"TextString"
	　Textコマンドは現在のVRAM＝テキストVRAMに描画します。

	・FkeyMenu(、ReadGraph(、WriteGraphコマンドの描画対象を現在のVRAMに変更しました。

	・Getkeyコマンドで、[3]キーを押したまま[1]キーを押すと[1]になってしまう非互換性を修正しました。

	・キースキャンコマンドとしてKeyRow(コマンドを追加しました。

	　　　　返り値対応ビット（2進数）
	　    　 bit6  bit5 bit4 bit3 bit2 bit1
	　 Row--------------------------------------Row
	　　09　  F1	F2   F3   F4   F5   F6	     09
	　　08　  SHIFT OPTN VARS MENU ←  ↑	     08
	　　07　  ALPHA ^2   ^	  EXIT ↓   →	     07
	　　06　  XTT	log  ln   sin  cos  tan      06
	　　05　  ab/c	F<>D  (    )	,   →	     05
	　　04　  7	8    9	  DEL	     04
	　　03　  4	5    6	  x    div	     03
	　　02　  1	2    3	  +    -	     02
	　　01　  0	.    EXP  (-)  EXE	     01
	　 Row--------------------------------------Row

	（例）KeyRow(9)
	　　F4とF6を同時に押した場合は、bit3とbit1が1になり、返り値としては
	　　2^3 + 2^1 = 10 が返ります。

	・Menuコマンド（純正互換）を追加サポートしました。


v1.00β	2017.1.25	ベータ3版（インタプリタのみ）
	・StrLeft(コマンドが使えなくなっていた不具合を修正しました。
	・ScreenG→Screen.G　マニュアル＆サンプルプログラムの間違いを修正しました。

	2017.1.21	・4GB以上のSD使用時に空容量表示がおかしかったのを修正しました。

	2017.1.20	・SD版において、実行/編集対象ファイルをSD上で使えるようになりました。
	　セットアップより指定して下さい。（SD版のみSD指定可）

	2017.1.19	・Textコマンドで描画されるフォントの上端1ドットラインが描画されてしまう非互換性を修正しました。
	（SDKのPrintMini表示仕様になっていました。）

	2017.1.18	・_Verticalのバグを修正しました。
	・OS2.09において最初のプログラム実行時にシステムエラーが出ることがあったのを修正しました。

	2017.1.17	・小文字の行列の省略形(a[1]、a2等)が使えなかったのを修正しました。

	・文字列変数のStrにおいて、インデックス開始値が0の場合にはStr 0が使えるようになりました。
	（例）'#Mat 0
	　　　"String"→Str 0

	・行列のインデックス開始値を返す"MatBase("関数を追加しました。
	（例）'#Mat 0
	　　　10→Mat A
	　　　MatBase( Mat A )
	 0が返ります。

	・"ElemSize("、"RowSize("、"ColSize("　コマンドがテキスト変換できなかった不具合を修正しました。

	・"DotPut("および、"Sprintf("コマンドが純正コマンドと重複していたので中間コード変更しました。
	  DotPut(  =  DotP : 0xF94B  -> 0xF74B
	  Sprintf( =  Vct  : 0xF73E  -> 0xF743

	　今回のバージョンでは、ソースを読み込んだ時点で自動的にコード変更されるので以前のバージョンで作成したソースはそのまま実行、編集できます。
	　"DotTrim(" および"DotGet("も自動変更に対応します。

	・fx-9860Gシリーズの超高速グラフィックスライブラリのMonochromeLibをサポートしました。
	　https://wiki.planet-casio.com/fr/MonochromeLib
	　_ClrVram
	　_ClrScreen
	　_DispVram
	　_Pixel
	　_Point
	　_PixelTest(
	　_Line
	　_Horizontal
	　_Vertical
	　_Rectangle
	　_Polygon
	　_FillPolygon
	　_Circle
	　_FillCircle
	　_Elips
	　_FillElips
	　_ElipsInRct
	　_FElipsInRct
	　_Hscroll
	　_Vscroll
	　_Bmp
	　_Bmp8
	　_Bmp16

	　Casio Basicのグラフィックスコマンド仕様とは独立したハードに密着した別系統のコマンドとなります。
	　これらのコマンドは現在のVRAMを操作するだけなので描画結果を表示するにはPutDispDD等のコマンドでLCD転送（画面更新）をする必要があります。
	　コマンドの使い方はマニュアルを参照して下さい。


v0.99v	2017.1.11	テスト版（インタプリタのみ）
	・A0～A9表記の変数の実体となる行列が確保されてない場合には自動的に確保するようにしました。
	（例）A1+123→B5
	　もし、Mat AおよびMat Bが確保されていない場合は、変数がアクセスされた時点で
	 　9→Dim A
	 　9→Dim B
	　と同じ初期化が自動的に実行され、A1～A9およびB1～B9までが使えます。

	（例）'#Mat 0
	　A1+123→B5
	　の場合、もし、Mat AおよびMat Bが確保されていない場合は、
	 　10→Dim A
	 　10→Dim B
	　と同じ初期化が自動的に実行され、A0～A9およびB0～B9までが使えます。

	（例）'#Mat 0
	　2→Dim B
	　A1+123→B5
	　の場合は、
	  10→Dim A
	　Mat Aのみ初期化され、Mat Bは再確保されないのでB5にアクセスした時点でエラーになります。
	　この場合はA0～A9およびB0～B1までが使えます。

	2017.1.9	テスト版（インタプリタのみ）
	・行列のアクセス方法として、変数に直に数字を添字として記述することが出来るようにしてみました。
	　Mat A[1,1]をA[1]と表記する形のさらなる省略形です。ただし添字は数字の0～9のみです。

	　A[1,1]→A[1]→A1
	　A[2,1]→A[2]→A2
	　A[3,1]→A[3]→A3
	　A[4,1]→A[4]→A4
	　A[5,1]→A[5]→A5
	　A[6,1]→A[6]→A6
	　A[7,1]→A[7]→A7
	　A[8,1]→A[8]→A8
	　A[9,1]→A[9]→A9

	（例）'#Mat 1
	　10→Dim A
	　10→A1
	　20→A2
	  A1+A2


	　添字に0が使えるのは行列インデックスの初期値を0に指定している場合のみです。

	　A[0,0]→A[0]→A0
	　A[1,0]→A[1]→A1
	　A[2,0]→A[2]→A2
	　A[3,0]→A[3]→A3
	　A[4,0]→A[4]→A4
	　A[5,0]→A[5]→A5
	　A[6,0]→A[6]→A6
	　A[7,0]→A[7]→A7
	　A[8,0]→A[8]→A8
	　A[9,0]→A[9]→A9

	（例）'#Mat 0
	  10→Dim A
	　10→A0
	　20→A1
	  A0+A1


v0.99u	2017.1.7	テスト版（インタプリタのみ）
	・テキストファイル（＊.txt)からの読み込みでファイル名に".txt"が残るバグを修正しました。

	・[OPTN][VARS][PRGM]コマンド選択でのカーソル←→でグループ移動させるようにしました。


v0.99t	2017.1.1	テスト版（インタプリタのみ）
	・DATEの曜日計算（ツェラーの公式）をミスしていたのを修正しました。

	2016.12.31	・セットアップでのDATE/TIME表示を逐次更新するようにしました。

	2016.12.26	・内蔵RTCの日付時刻の設定及び読出コマンドとしてDATE,TIMEを追加しました。
	　文字列型の変数形式となります。
	（セットアップからも設定できます）
	（例）"2016/12/26"→DATE
	（例）DATE
	　2016/12/26 MON
	　と表示されます。曜日は自動計算されます。

	（例）"23:59:59"→TIME
	（例）TIME
	　23:59:59
	　と表示されます。

	・エディタ等におけるコマンドメニュー入力においてコマンドをグループ分けしてカーソル←→でショートカット出来るようにしました。
	　STD :　基本的なコマンド
	　GR  :　グラフィック系コマンド
	　FN  :　関数系コマンド
	　STR :　文字列系コマンド
	　EX  :　拡張コマンド


	2016.12.22	・文字列処理バッファサイズを128バイトから256バイトに倍増しました。
	・テキストファイルへ変換する場合に確保されるバッファサイズを元ソースサイズの1.5倍から2倍に増やしました。
	・編集可能な1プログラムのサイズが約32KBまでだった制限を最大62KBまでに変更しました。

v0.99s	2016.12.16	テスト版（インタプリタのみ）
	・引数ありのGosubが動作しなかったのを修正しました。

	2016.12.15	・整数モードでSprintfの実数表示が出来なかったバグを修正しました。
	（例）Sprintf("A=%3.2f",#12.345)

	・Sprintf、Locate、Textでの#プレフィックスの実数式評価で、
	　整数モードでも変数は整数変数のままになります。
	（変更前）
	　式評価は実数で行われるために整数変数には%指定を付ける必要があります。
	（変更後）
	　式評価は実数式として行われますが、変数は整数変数のまま扱われます。%を付ける必要はありません。

	2016.12.14	・エディタ編集後のファイル名入力時に隠れる画面が編集ファイルと無関係な画面になる不具合を修正しました。

	2016.12.13	・実数モードで#プレフィックスを付けた場合に動作しなかったバグを修正しました。
	（例）#123.56+100

	・Dispコマンドを追加しました。
	（例）Disp A
	　▲一時停止コマンドと同様の数値＆文字列表示コマンドですが、表示毎に改行され一時停止すること無くプログラムは続行されます。

	・RefreshCtrl コマンドの中間コードが誤っていたので修正しました。
	  RefreshCtrl  =  DotG : 0xF7F9   -> 0xF7F8

	・純正コマンド"Dot" "DotG"と中間コードが重なっていた"DotTrim(" および"DotGet("コマンドの中間コードを変更しました。
	  DotGet(  =  DotG : 0xF73F   -> 0xF73E
	  DotTrim( =  Dot  : 0xF74F   -> 0xF73D


v0.99r	2016.7.24	テスト版（インタプリタのみ）
	・隠しRAM使用時、隠しRAM領域を使い切った場合に、ヒープ領域から領域確保できるようにしました。

	2016.7.21	・隠しRAM使用時、行列を確保できない場合の処理に不具合があったのを修正しました。

	2016.7.20	・隠しRAMをプログラムとMat行列領域で使用するようにしました。
	　プログラム領域、行列領域合計で256KBの割当になります。
	　ファイルリストバッファはヒープ領域固定となります。

	・リスト表示の上部にストレージメモリのフリーエリアとファイルリスト数を表示するようにしました。
	　ストレージメモリはプログラムの保存、およびコピー、リネーム等で減っていきますので、残り少なくなったら最適化が必要になります。

	・ClrMatで行列全部の消去が出来なかったのを修正しました。

	・Int関数がIntg関数になっていたので、Intg関数を追加して、Int関数を修正しました。


v0.99q	2016.7.3	テスト版（インタプリタのみ）
	・デバッグモードにおいてプログラムの再開、トレース実行する場合に画面が復帰しないことがあった不具合を修正しました。

	2016.6.25	・アドレス演算子＆の追加により、Mat行列の文字列化は$のみに変更しました。

	・SysCallとCallコマンドをSysCall(),Call()のように関数コマンドとしました。
	（書式）SysCall( システムコール番号 [,引数1][,引数2][,引数3][,引数4] )
	（例）SysCall( 0x763,A,B,C,D )→R
	　A→R4レジスタ、A→R5レジスタ、A→R6レジスタ、A→R7レジスタ、システムコール0x30を呼び出し返り値がRに入ります。
	　システムコール0x30はSDKのBdisp_DrawLineVRAMと同じです。

	（書式）Call(マシン語アドレス [,引数1][,引数2][,引数3][,引数4] )
	（例）Call( 0x8802F000,A,B,C,D )→R
	　A→R4レジスタ、A→R5レジスタ、A→R6レジスタ、A→R7レジスタ、0x8802F000番地にあるマシン語プログラムを呼び出し返り値がRに入ります。


	2016.6.18	・Engモードで負数の場合、動作しなかったのを修正しました。
	・Engモードの拡張で3桁区切り表示に対応しました。
	　セットアップで[F4](Eng)を押すと、ENGオフ、ENGオン(/E)、3桁区切り(/3)と切り替わります。
	　コマンドで3桁区切りを指定するには、EngOn直後に数字の3を付けて、
	　EngOn3
	　以後3桁区切り出力になります。
	　その時のEngの返す値は3になります。（EngOff:0　EngOn:1　3桁区切り:3）

	・数値をC.Basic書式で文字列化するStr()コマンドを追加しました。
	　Sprintf()コマンドはC言語仕様での書式出力となりますが、Str()ではC.Basic設定（Fix,Sci,Norm,Eng等）によって出力書式が決定されます。
	（例）Str(-123.4567)→Str 1
	 -123.4567を文字列化"-123.4567"して文字列変数Str 1に代入します。

	・変数リスト表示で16進数表示に対応しました。
	　整数変数はそのまま16進数表示になりますが、実数変数はその値が整数32ビット範囲に収まる場合のみ16進数表示にできます。

	・マシン語を直接扱うためのコマンドとしてPeek(、Poke(、Call、SysCall、
	　変数とソースアドレスを返すVarPtr(、ProgPtr(コマンド、
	　C言語同様のアドレス演算子&、間接演算子*をサポートしました。

	（例）Peek(0x8802E000).B→A%
	（例）*(0x8802E000).B→A%
	　0x8802E000番地の内容をバイト(1バイト)で読み出し、整数変数A%に代入します。
	（例）Peek(0x8802E000).W→A%
	　0x8802E000番地の内容をワード(2バイト)で読み出し、整数変数A%に代入します。
	（例）Peek(0x8802E000).L→A%
	　0x8802E000番地の内容をロングワード(4バイト)で読み出し、整数変数A%に代入します。
	（例）Peek(0x8802E000).F→A
	　0x8802E000番地の内容を倍精度実数(8バイト)で読み出し、変数Aに代入します。

	（例）Poke(0x8802E000).B,A%
	（例）A%→Poke(0x8802E000).B
	（例）A%→*(0x8802E000).B
	　整数変数A%の値を、0x8802E000番地にバイト(1バイト)書き込みします。
	（例）Poke(0x8802E000).W,A%
	　整数変数A%の値を、0x8802E000番地にワード(2バイト)書き込みします。
	（例）Poke(0x8802E000).L,A%
	　整数変数A%の値を、0x8802E000番地にロングワード(4バイト)書き込みします。
	（例）Poke(0x8802E000).F,A
	　実数変数Aの値を、0x8802E000番地に倍精度実数(8バイト)書き込みします。

	（例）Call 0x8802F000,A,B,C,D
	　A→R4レジスタ、A→R5レジスタ、A→R6レジスタ、A→R7レジスタ、0x8802F000番地にあるマシン語プログラムを呼び出します。

	（例）SysCall 0x30,A,B,C,D
	　A→R4レジスタ、A→R5レジスタ、A→R6レジスタ、A→R7レジスタ、システムコール0x30を呼び出します。
	　システムコール0x30はSDKのBdisp_DrawLineVRAMと同じです。画面にラインを描きます。

	（例）VarPtr(A%)
	（例）&A%
	　整数変数A%の変数のアドレスが返ります。
	（例）VarPtr(Mat A)
	（例）&Mat A
	　行列Aの先頭アドレスが返ります。
	（例）VarPtr(Mat A[20,10])
	　行列A[20,10]の値が格納されているアドレスが返ります。

	（例）Poke VarPtr(A%),B%
	（例）*(&B%)→*(&A%)
	　B%→A%と同じです。

	（例）ProgPtr()
	　現在のプログラムが格納されているアドレスを返します。


v0.99p	2016.5.25	テスト版（インタプリタのみ）
	・純正Casio Basic互換仕様のパスワードに対応しました。
	　新規ファイル名の入力時に[F1]でパスワード入力できます。
	　ファイルリストモードで[SHIFT]+[F4]でパスワードの設定/解除が出来ます。
	　パスワードの設定されたファイルは、実行時は何も影響ありませんが、編集時およびデバッグ時はパスワード入力が必要となります。


v0.99o	2016.5.21	テスト版（インタプリタのみ）
	・ファンクションメニュー描画コマンドFkeyMenu(をテキスト画面にも使えるようにしました。
	　描画オプションの項目でTを指定すればテキスト画面描画となります。
	（例）FkeyMenu(1,"ABC",T)
	　テキスト画面の一番左側のファンクションメニューエリアにABCが描画されます。
	（例）FkeyMenu(6,"ABC",TR)
	　テキスト画面の一番右側のファンクションメニューエリアにABCが反転モードで描画されます。
	（例）FkeyMenu(6,"",TC)
	　テキスト画面の一番右側のファンクションメニューエリアを消去します。

	・行列ごとに確保時にインデックスベースを設定することが出来るようにしました。
	　行列確保時に末尾に0をつけると0ベース、1を付けると1ベースとなるので、デフォルトのベース設定を変更すること無く個別設定が出来ます。
	（例）{128,64}→Mat A.P0
	　0ベースの行列を確保します。インデックスの範囲は[0,0]-[127,63]
	（例）{128,64}→Mat A.P1
	　1ベースの行列を確保します。インデックスの範囲は[1,1]-[128,64]

	2016.5.20	・行列にVRAMを割り当てる場合は、常にインデックスは0から始まりサイズを{128,64}固定としました。
	　さらに、テキストVRAM保存領域とグラフィックVRAM保存領域を行列に割り当てることができるようになりました。
	　（例）{128,64}→Dim Mat T.vT
	　　テキストVRAM保存エリアをMat Tに割り当てます。インデックスのとる値は0～127、0～63となります。
	　　現在のVRAMがグラフィックVRAMの場合、Mat Tに演算処理してScreen.TコマンドでVRAMをテキスト画面にするとMat Tの内容がVRAMに転送されます。
	　（例）{128,64}→Dim Mat G.vG
	　　グラフィックVRAM保存エリアをMat Gに割り当てます。インデックスのとる値は0～127、0～63となります。
	　　現在のVRAMがテキストVRAMの場合、Mat Tに演算処理してScreen.GコマンドでVRAMをグラフィック画面にするとMat Gの内容がVRAMに転送されます。
	　　表示をするにはPutDispDDコマンドを使用して下さい。

	・Getkey3でキー入力が上手くいかない不具合があったのを修正しました。

	2016.5.19	・画面のリフレッシュをマニュアル設定できるようになりました。セットアップとコマンドで設定できます。
	　Off：リフレッシュコントロール無し。表示においては純正互換仕様です。
	　Grph：グラフィックコマンドのみリフレッシュコントロール有り。ClrText,Locate,Text,LocateYX、" "は無しで以前のバージョン互換です。
	　All：すべての描画コマンドがリフレッシュコントロールされた表示となります。必要に応じてPutDispDDコマンドが必須となります。
	　Time：リフレッシュコントール時間を設定します。n/128秒単位で画面更新します。デフォルトは3で約1/42秒での更新となっています。

	・画面のリフレッシュをコマンドで設定できるRefrshCtrlとRefrshTimeコマンドを追加しました。
	（例）RefrshCtrl 0
	　リフレッシュコントロール無し。Off
	（例）RefrshCtrl 1
	　リフレッシュコントロール有り。Grphモードに設定します。
	（例）RefrshCtrl 2
	　すべてのリフレッシュコントロール有り。Allモードに設定します
	（例）RefrshTime 5
	　リフレッシュコントール時間を5に設定します。
	　RefrshCtrlとRefrshTimeコマンドは式の中で使うと現在の値を返します。

	・入力時のアルファベットの大文字小文字切り替えを初期化しないようにしました。起動時に大文字に設定される他は初期化されることがありません。
	・エディタのサーチ機能において、前回の検索文字列が再度表示されるように変更しました。[AC]でクリアできます。
	・Save/Loadコマンドのファイル名の拡張子は任意に設定できます。省略した場合は[.bin]になります。


v0.99n	2016.5.15	テスト版（インタプリタのみ）
	・Returnコマンドにて返り値指定が出来るようになりました。
	（例）Return 式
	　式の値がAnsに入ります。
	・0xまたは0Xで始まる16進定数が使えなくなっていた不具合を修正しました。
	・文字列で行列を初期化する場合に空白と改行をスキップ出来なかった不具合を修正しました。

	2016.5.14	・Screenコマンドを追加しました。
	　VRAMへ直アクセスする場合に、
	　Screen.tまたはScreen.TでテキストVRAM、
	　Screen.gまたはScreen.GでグラフィックVRAMが描画対象になります。
	　またScreen nでnの値が0の場合はテキストVRAM、1の場合はグラフィックVRAMとなります。
	　Screen単独で使うと描画対象が（テキストVRAM⇔グラフィックVRAM）切り替わります。
	　式の中でScreenを使うと現在のアクセス対象VRAM（0：テキストVRAM、1：グラフィックVRAM）が返ります。

	・セットアップにて隠しRAMを使用するかどうか設定ができます。
	　（現状ではファイルバッファのみの使用ですが将来的にはプログラムファイル等でも使用予定です。）

	2016.5.12	・Rename,Copyするとファイルが純正仕様から外れていたのを修正しました。(Ver 0.99n以前は問題ありません。)

	2016.5.11	・グラフ式（Yn)から文字列メモリー（Str n)への変換を文字列のコピー構文でも可能にしてましたが純正と仕様が違ってしまったために純正仕様に戻しました。
	（例）Y1→Str 1
	　これは純正同様にエラーになります。
	・グラフ式（Yn)メモリーは式として評価するので返り値は数値になります。（純正仕様）
	（例）Y1→A

	2016.5.10	・隠しメモリ領域を使うファイルバッファ関連で致命的バグがあったのを修正しました。
	・強制画面書き換えコマンドとしてPutDispDDコマンドを追加しました。

	2016.5.9	・サブフォルダに移動する場合にリストの一番上にサブフォルダの先頭ファイルが来るようにしました。
	・お気に入りリストのプログラムがカレントフォルダ以外にある場合はフォルダ名から表示されるようにしました。（但し先頭5文字までです。）
	・今回より、隠しメモリ領域にファイルリストのバッファを移動してみました。（fx-9860GII以降）
	　これによりフォルダ移動を繰り返してもヒープメモリの断片化は発生しなくなります。

	2016.5.8	・Engコマンドを純正Casio Basic同様のEngモード切り替えとしました。
	　Engモードの状態を知るには(Eng)で読み出せます。
	　返り値0：EngOff
	　返り値1：EngOn

	・Getkey1、Getkey2がプログラムの最後に来た時にコマンドが二回繰り返される不具合を修正しました。
	・お気に入りの最大数を超えた場合のエラーメッセージをFull Favoritesに変更しました。

	2016.5.7	・お気に入りリストがフォルダに対応しました。フォルダ移動してもお気に入りリストが消えることがありません。
	　サブフォルダからルートへの移動は[SHIFT]+[EXIT]（QUIT)ですが、カーソルがリストの先頭にある場合は[EXIT]でルートに移動するように変更しました。

	・ファイルネーム入力時ににフォルダを指定すると別のフォルダ内のファイルにアクセスできます。
	　フォルダ区切り文字は"/"もしくは"＼"(バックスラッシュ)になります。
	（例）Prog "/SUB/SAMPLE"
	（例）Save "/SUB/TEST",Mat A
	（例）Load("SUB/TEST")→Mat A

	・ファンクションメニュー描画コマンドFkeyMenu(を追加しました。
	（例）FkeyMenu(1,"ABC")
	　一番左側のファンクションメニューエリアにABCが描画されます。
	（例）FkeyMenu(6,"ABC",R)
	　一番右側のファンクションメニューエリアにABCが反転モードで描画されます。
	（例）FkeyMenu(6,"",C)
	　一番右側のファンクションメニューエリアを消去します。

	・If～ElseIfの動作を修正しました。
	・テキスト変換が[EXE]キーでも動作していたのを修正しました。
	・小文字行列名が整数モードで使えなかったのを修正しました。
	・お気に入りの最大数を超えた場合のエラーメッセージを"Favorites Full"に変更しました。

	・今回のバージョンより設定保存ファイルが変更になりますので以前のバージョンまでとは設定ファイルの互換性が無くなります。


v0.99m	2016.5.4	テスト版（インタプリタのみ）
	・Exp>Str()コマンドをグラフ式(Yn)から文字列メモリー(Str n)への変換だけですが実装しました。
	（例）Exp>Str(Y1, Str 1)
	　尚、グラフ式(Yn)から文字列メモリー(Str n)への変換は、文字列のコピー構文でも可能です。
	（例）Y1→Str 1
	・行列への代入で、行列が確保されていなかった場合は"No Matrix array"に変更しました。

	2016.5.2	・Circle,F-LineのXorモードでの描画に不具合があったのを修正しました。
	・行列名における要素の型のデフォルト指定（Mat B, Mat C, Mat D, Mat W, Mat I, Mat L）を廃止しました。
	　デフォルトでは実数モードではすべて実数行列、整数モードではすべて整数行列となります。
	・キャラクタ入力でアルファベットのミニキャラクタ(F5)のTextコマンド対応文字が表示されなかった不具合を修正しました。


v0.99l	2016.4.16	テスト版（インタプリタのみ）
	・?入力コマンドにおいて#や%のサフィックスがエラーになっていたのを修正しました。
	2016.4.13	・ストレージメモリにファイルが無い状態で不具合があったのを修正しました。

	2016.4.10	・°(deg) r(rad) g(gra)の角度単位入力を追加しました。
	・60進数の入出力に対応しました。
	（例）12°34°56.78°→A
	　Aの値は12.582438888889となります。
	（例）A >DMS
	　画面右詰めで「12°34′56.78″」表示されます。
	　純正Casio Basicでは表示のみの変換に対してC.Basicでは文字列への変換が出来ます。
	（例）A >DMS→Str 1
	　Str 1 に「12°34′56.78″」が入ります。

	*角度単位入力の「°(deg)」と60進数の区切り「°」はキャラクタが違います。


v0.99k	2016.4.3	テスト版（インタプリタのみ）
	・実数表示で正の指数値で(+)表示されてなかったのを修正しました。
	・負数の実数表示で指数桁が表示しきれなかった不具合を修正しました。
	・タイマー変数Ticksへの代入が出来なかったのを修正しました。
	2016.3.27	・エディタのジャンプ機能の任意行へのジャンプ([F1][F3])で現在の行番号を表示するようにしました。


v0.99j	2016.3.18	テスト版（インタプリタのみ）
	・エディタにジャンプ機能を追加しました。
	　それによりファンクションキーアサインを一部変更しました。

	　-[F1] (TOP) ファイル先頭にジャンプします。
	　-[F2] (BTM) ファイル末尾にジャンプします。

	　↓↓↓↓↓↓↓↓

	　-[F1] (JUMP) ジャンプサブメニューを表示します。
	　    [F1] (TOP) ファイル先頭にジャンプします。
	　    [F2] (BTM) ファイル末尾にジャンプします。
	　　　[F3] (GOTO) ファイルの任意の行にジャンプします。
	　　　[F5] (Skip↑) （セットアップで設定された）ページ数だけスキップアップします。
	　　　[F6] (Skip↓) （セットアップで設定された）ページ数だけスキップダウンします。
	　-[F2] (SRC) 文字列サーチモードに入ります。

	・ジャンプ機能に任意のページ数スキップする機能を加えたのでPageUp/Down機能を一部変更です。

	　[SHIFT]+[UP]　　1ページ（6行）だけPageUpします。
	　[SHIFT]+[DOWN]　1ページ（6行）だけPageDownします。

	・[AC]キーでのブレークした時のポップアップから再開可能になりました。
	  [F1][EXE]キーで再開できます。


v0.99i	2016.3.15	テスト版（インタプリタのみ）
	・エディタのRollUp/Down機能をPageUp/Down機能に名称変更しました。
	・セットアップにて改ページ数を1ページ（6ライン）単位で自由に設定可能になりました。
	　[SHIFT]+[UP]　　指定ページ数PageUpします。
	　[SHIFT]+[DOWN]　指定ページ数PageDownします。


v0.99h	2016.3.12	テスト版（インタプリタのみ）
	・ファイルリスト読み込み時にポップアップ＆右上ビジーマーカー表示を追加しました。

	・エディタでファイルの現在位置を示すガイドマーカーを右端に追加しました。
	・エディタの検索の最後でフリーズすることがあるバグを修正しました。
	・エディタでRollUp,RollDown機能追加しました。
	　[SHIFT]+[UP]　　50行程RollUpします。
	　[SHIFT]+[DOWN]　50行程RollDownします。

	・カッコ同士の乗算と関数の組み合わせがエラーになっていたバグを修正しました。
	（例）　(1+2)(3+4)^3

	・グラフ表示で画面外に出てしまうグラフが描画されないバグを修正しました。


v0.99g	2016.3.5	テスト版（インタプリタのみ）
	・fx-5800P同様の配列初期化コマンドが使えるようになりました。
	（例）100→Dim Z
	　{100,1}→Dim Mat Z
	　と同じになります。
	（例）0→Dim Z
	　ClrMat Zと同じです。

	　テキストからの変換ではfx-5800P同様に
	　100→DimZ
	　と記述してもOkです。

	・プログラム読み込み時にメモリが足りないエラー＆サブルーチンが見つからない場合のエラー処理が上手くいってなかったのを修正しました。


v0.99f	2016.3.2	テスト版（インタプリタのみ）
	・変数一覧表示にて通常グローバル変数とローカル変数を区別することが出来るようになりました。
	　ローカル変数は=が反転キャラクター表示されます。

	・数式でのMat行列の表記において、Matを省略することが出来るようになりました。
	（例）A[X]+B[Y]→X[Z]
	　Mat A[X,1]+Mat B[Y,1]→X[Z,1]と同じになります。


v0.99e	2016.2.29	テスト版（インタプリタのみ）
	・Basic→テキスト変換時に一時出力命令は"Disps"に変換されますが改行はされないので、改行(CR,LF)を追加するようにしました。
	　ただし、一時出力命令の次が改行の場合は改行(CR,LF)を追加しません。
	・テキスト→Basic変換時に、コマンド後に空白が必要なコマンドがありますが、空白が無くても変換できるようになりました。
	　すべてのコマンドには対応していません。次のコマンドのみ空白無し変換に対応です。
	Then	Abs	sin	sinh
	Else	Int	cos	cosh
	Default 	Frac	tan	tanh
	Save	Log	sin^-1	sinh^-1
	Plot	ln	cos^-1	cosh^-1
	Prog	Sqrt	tan^-1	tanh^-1

	・テキスト変換の兼ね合いでDoコマンドと間違えてしまうためにDotPut,DotGet,DotLifeの各コマンド名をdotPut,dotGet,dotLifeに変更していたのを元に戻しました。
	・お気に入りリストの一番下から上に移動できなくなっていたのを修正しました。


v0.99d	2016.2.27	テスト版（インタプリタのみ）
	・テキストファイルからC.Basicソースファイルへの変換に対応しました。
	　拡張子(.txt)のテキストファイルをストレージメモリ上に置くとファイルリストに表示されてG1Mファイル同様に扱うことが出来ます。
	　BasicソースファイルのG1Mファイルは拡張子は表示されませんが、テキストファイルは拡張子（.txt）まで表示されます。
	　G1Mファイルと同様にそのまま編集、実行することが可能です。（変換時間が入るので少し時間がかかります。）
	　ファイルの変換のみの場合はファイルモードで[F6]+[F1]で変換を開始します。
	　テキストファイルの場合はG1Mに、G1Mファイルの場合はテキストファイルに相互変換します。
	　コマンドの変換規則はfx-CG20およびfx-FD10Proに準拠しています。

	・テキスト変換の兼ね合いでDoコマンドと間違えてしまうためにDotPut,DotGet,DotLifeの各コマンド名をdotPut,dotGet,dotLifeに変更しました。


v0.99c	2016.2.13	テスト版（インタプリタのみ）
	・行列の要素の初期値として0が選択できるようになりました。
	　セットアップもしくはコメント欄での記述で行列の始まりを選択できます。
	（例）'#Mat 1
	　　従来通り1から始まります。
	（例）'#Mat 0
	　　{3,2}→Dim Mat A
	 　確保される行列は A[0,0]～A[2,1]となります。

	　同時に画面座標も0まで有効になります。これで全画面が描画対象エリアとなります。
	（例）Pxlon 0,0

	・行列の型(1ビット、バイト、ワード、ロングワード、実数）が行列確保後に任意に変更できるようになりました。
	（例）[[1,2,3,4][5,6,7,8]]→Mat A.B
	　　　Mat A→Dim Mat A.W
	　バイト型のMat A行列をワード型に変更できます。
	　要素数は変更後の型サイズに応じて変化します。
	　[[0x12,0x34][0x56,0x78]]→Mat A.W
	　と同じ結果になります。

	（注意）1ビット型行列からの変更、また1ビット型行列への変更は行と列が反転します。
	　これは1ビット型行列はX,Y型で実装しているために通常のm,n型行列とは転置行列の関係になります。
	　{128,64}→Dim Mat A.P
	　LCD画面のバッファとして確保します。
	　Mat A→Dim Mat A.B
	　バイト型行列に変更すると、
	　要素サイズは{64,16}になります。


v0.99b	2016.2.9	テスト版（インタプリタのみ）
	・デバッグモードを拡張しました。
	　ファイルモードの[SHIFT]+[F6]でデバッグモードに入ります。
	　[F1]：カーソル位置よりプログラムを再開します。従来のContと同じです。
	　[F2]：カーソル位置よりトレース実行。コマンド実行後、即エディタ画面に戻ります。
	　[F3]：カーソル位置よりトレース+ステップオーバー。サブルーチンは一気に実行されます。ステップ実行後、即エディタ画面に戻ります。
	　[F4]：カーソル位置よりステップアウト。サブルーチンの終了まで一気に実行します。ステップ実行後、即エディタ画面に戻ります。
	　[F5]：エディタリスト表示とプログラム実行画面の切替をします。切替後も実行画面が維持されるので実行画面そのまま[F1]-[F4]のデバッグ動作が可能です。
	　[F6]：デバッグメニューとエディタメニューを切り替えます。実行画面（グラフィック/テキスト）の場合はファンクションメニュー表示をします。
	グラフィック画面とテキスト画面の切替は[SHIFT]+[F6]です。

	・エラーが起きた場合の処理を変更しました。
	　従来はプログラム実行をすべて中止してエディタに戻っていたのを、実行中断してデバッグモードでエディタに戻るようにしました。
	　エラー箇所を修正後、中断箇所よりプログラムに復帰することが可能になりました。

	・ACBreakコマンドに機能追加しました。
	　直後にStopコマンドを付けることで、ACBreakStopとなりますが、
	　これ以降に実行されるACBreakコマンドをすべてキャンセルします。
	　セットアップでのキャンセルと同じです。

	・バックライトコマンドを追加しました。バックライト装備のfx-9860GIIのみ対応となります。
	（書式）Backlight n
	　n=0　バックライト消灯
	　n=1　バックライト点灯
	　n=2　バックライト反転
	（書式）Backlight
	　バックライトの状態を返します。


v0.99a	2016.2.7	テスト版（インタプリタのみ）
	・Sprintf、Locate、Textでの#プリフィックスは実数式評価としました。
	　整数モードでは常に整数値しか得られないので、#プリフィックスを付けた式では実数式評価で実数値が返ります。
	　整数モードでしか意味は無いのですが整数モードにおけるSprintfやLocate、Textコマンドで実数値を扱うことが出来ます。
	（例）Locate 1,1,123+0.456
	　整数モードでは整数値に丸められて123となってしまうのですが、
	（例）Locate 1,1,#123+0.456
	　#プリフィックスを付けると実数で123.456と表示されます。
	　式評価は実数で行われるために整数変数には%指定を付ける必要があります。

	・SH4A版のfx-9860GIIのGetkeyコマンドにてGetkey1～2と同様に[SHIFT]+[OPTN]でのバックライト制御が可能になりました。
	　SH3版は以前よりバックライト制御が可能です。
	　[SHIFT]+[AC]での電源OFFには未対応です。

	・一定時間キー入力待ちをするGetkey3追加しました。
	　Getkey1系のコマンドではなくGetkey系のコマンドとなります。
	（例）Getkey3(128)
	　コマンド実行時のタイマーを基準として128Ticksカウント(=1秒)のウエイト期間中にキー入力があれば最後に押されたキーコードが返ります。
	（例）Getkey3(128,A)
	　Aをタイマーの初期値として現在のタイマー値が128Ticksカウント経つまでキー待ちをします。


v0.99	2016.2.5	テスト版（インタプリタのみ）
	・プログラムをステップ実行するデバッグモードを追加しました。
	　ファイルモードの[SHIFT]+[F6]でデバッグモードに入ります。
	　[AC]での一時中断もしくはACBreakコマンドで中断した後もデバッグモードになります。
	　[F1]：プログラムを再開します。従来のContと同じです。
	　[F2]：ステップ実行となります。ステップ実行後、即エディタ画面に戻ります。
	　[F6]：プログラム中断前の画面（グラフィック/テキスト）を表示します。
	グラフィック画面とテキスト画面の切替は[SHIFT]+[F6]です。

	・Str文字変数の実体となるMat行列を任意指定できるようになりました。
	　Str変数を使う前にコメント欄での記述となります。
	（例）'#Str A
	　Str変数をMat Aとして確保します。
	　{20,65}→Dim Mat A.B
	　と同じです。
	（例）'#Str B,30,256
	　Str変数をMat Bとして30個、255文字まで可能な変数として確保します。

	・1/128sのタイマー変数として%に加えてTicksを追加しました。機能的には全く同じです。


v0.98	2016.2.3	テスト版（インタプリタのみ）
	・カナ文字+記号文字のtextコマンド表示に対応しました。
	　キャラクタ選択画面で[OPTN]を押すとTextコマンドで表示される文字になります。

	・Mat行列の文字列扱いで&に加えて$も使用できるようになりました。
	（例）$Mat A[1] &Mat A[2]

	・Casio Basic互換の文字列関数として、
	 +　文字列同士の連結
	 StrJoin(
	 StrLen
	 StrCmp(
	 StrSrc(
	 StrLeft(
	 StrRight(
	 StrMid(
	 Exp(
	 StrUpr(
	 StrDwr(
	 StrInv(
	 StrShift(
	 StrRotate(
	 Str 1-20
	　を追加しました。
	　純正仕様とほぼ互換ですが若干の差異があります。
	　Str 1-20はMat行列のs(小文字)を暗黙的に使用します。
	　Str文字列の初期化は何も指定なければ次のようにMat s行列の初期化が自動的に行われます。
	　{20,65}→Dim Mat s
	　ということで、
	　Str 3は$Mat s[3]または&Mat s[3]と同義となります。
	　Str文字列はデフォルトで20まで、格納可能文字列数は1バイト文字で64文字までとなりますが、
	　事前に
	　{30,256}→Dim Mat s
	　というような初期化をしておけばStr文字列は1-30まで使え、格納可能文字列は255文字までとなります。

	　fx-9860GIIで使われる文字は1バイト文字と2バイト文字があり、
	　一部の関数と記号、特殊文字、カナ文字が2バイト文字となりますので、
	　内部では1バイトと2バイト文字が混在する状態となりますが、文字関数での扱いは純正同様にすべて1文字扱いとなります。
	　文字列が格納された行列に直接アクセスする場合は文字の位置に注意して下さい。

	・Exp(は以前のEval(と同じなのでEval(を削除しました。

	・追加の文字列関数としてC言語仕様のSprintf(を追加しました。
	（仕様）Sprintf( "書式指定子" , 引数1[ ,引数2 , 引数3])
	（例）Sprintf("A=%4d B=%3.2f",%A,#B)→Str 1
	　 A=1234,B=45.678の場合、
	　Str 1に代入される文字列は
	　"A=1234 B=45.68"
	　となります。
	　書式指定はC言語でのsprintfと互換というかそのままC言語仕様となります。
	　引数は3つまで指定することが出来、整数/実数/文字列が指定可能です。
	　%プリフィックスで整数指定、#プリフィックスで実数指定となります。
	  プリフィックスを省略した場合はその時点での実行モード（実数/整数）となります。
	  書式指定と引数の対応のエラーチェックは無いので、Sprintf(コマンドでエラーが起きた場合はリセットか再起動となる可能性があります。


v0.97a	 2016.1.25	テスト版（インタプリタのみ）
	・サブプログラムが多くなると（15以上）何も出来なくなるバグを修正しました。
	　同時に開けるサブプログラム数を15から30に増やしました。

	・行列のサイズを取得する関数を追加しました。
	・ElemSize(
	　1要素のサイズ（ビット）を返します。
	（例）　ElemSize( Mat A )
	・ColSize(
	　{m,n}のm=行サイズを返します。
	・RowSize(
	　{m,n}のn=列サイズを返します。


v0.97	2016.1.24	テスト版（インタプリタのみ）
	・Mat行列への文字列の代入、初期化対応しました。
	（例）["ABC","TEST","1+3+5"]→Mat A
	　バイト型のMat A[3,6]行列を自動的に確保してそれぞれの要素に文字列を配置します。
	 　Mat A[1,1]="ABC"
	 　Mat A[2,1]="TEST"
	 　Mat A[3,1]="1+3+5"
	　となります。
	　文字列対応コマンドで"ABC"にアクセスするには&Mat A、もしくは&Mat A[1],もしくは&Mat A[1,1]となります。
	　"1+3+5"をアクセスするには&Mat A[3],もしくは&Mat A[3,1]となります。
	（例）Locate 1,1,&Mat A
	　Locate 1,1,"ABC"と同じです。
	（例）Locate 1,1,&Mat A[3,3]
	　Locate 1,1,"3+5"と同じです。

	現バージョンでの文字列対応コマンドです。" "の代わりに&Mat形式で使用します。
	・" "
	（例）&Mat A[1]
	　　"ABC"と同じです。
	・?
	（例）?→&Mat A
	　行列Mat Aに文字列を入力します。確保している要素数で文字数が制限されます。
	・Locate
	・Text
	・LocateYX
	・Eval(
	（例）Eval("1+2+3")→6
	（例）Eval(&Mat[3,3])→8
	 文字列を数式として評価、値を返します。

	・ACBreakコマンドを追加しました。
	　プログラム中で[AC]での一時中止と同じ結果となります。
	　セットアップにてACBreakコマンドの有効/無効の切り替えが出来ます。
	　無効(off)にした場合はスルーされてプログラムの実行に何も影響を及ぼしません。

	・ファイルモードでCopy機能を追加しました。
	　選択されたファイルを別のファイル名でコピーします。同名の場合は何もしません。
	　ファンクションキー不足のためにファンクションキーの割当を一部変更しました。


v0.96	2016.1.22	テスト版（インタプリタのみ）
	・C.Basicソースファイルからテキストファイルへの変換に対応しました。
	　ファイルモードで[SHIFT]+[F6]で変換を開始します。


v0.95a	 2016.1.20	テスト版（インタプリタのみ）
	・IsExist(コマンド追加しました。
	　指定されたファイルが存在しない場合は0が返り値となります。
	　ファイルが存在する場合はファイルサイズが返り値となります。
	（例）IsExist("TEST")
	　"TEST.bin"が存在すればファイルサイズが、存在しなければ0となります。


v0.95	2016.1.19	テスト版（インタプリタのみ）
	・全小文字変数がローカル変数扱いだったのをローカル変数にする変数を任意指定できるように変更しました。
	　デフォルトでは小文字変数はすべてグローバル変数となりますが、
	　プログラム内でLocalコマンドで変数指定するとその変数はそのプログラム内だけで使われるローカル変数となります。
	（例）Local x,y,z
	　ローカル変数としてx,y,zを指定します。
　　　　　　　　　　　　　指定できるのは小文字変数のみで最大10個まで指定できます。
	　またこの変数の順で引数付きProgでローカル変数に代入されます。

	（例）サブプログラム"TEST"内で、
	　　　Local x,y,z
	　（記述する位置はサブプログラム内であればどこでも可です。）

	　　　Prog "TEST",123,456,N
	　サブプログラム"TEST"の実行時に、ローカル変数としてx,y,zが確保され、
	　123→x、456→y、N→z、それ以外はグローバル変数となります。

	ローカル変数が使えるようになったことで再帰プログラムも可能になりましたが、
	現状ではメモリ制限でネスト30層程度までとなっています。

v0.94	2016.1.16	テスト版（インタプリタのみ）
	・Save/Loadコマンド追加しました。
	（例）Save "TEST",Mat A
	（例）Load("TEST")→Mat A
	　Mat A行列の内容を保存、読み込みます。
	　ファイル名は8文字まで、拡張子は[.bin]固定です。
	　現状、アクセスできるのは行列データのみとなります。
	　保存形式はヘッダ無し、内部バイナリーデータそのままのデータファイルとなります。

	（例）Save "TEST",Mat A[5,1]
	　Mat A[5,1]より最後まで保存します。
	（例）Load("TEST",16)→Mat A[10,1]
	　保存されたデータの16バイト目のデータからMat A[10,1]に読み込みます。

	・Prog "～"コマンドで引数を記述することが出来るようになりました。
	　その変更に伴い、小文字変数はすべてローカル変数扱いとなります。
	　引数の一番目はa、二番目はb、以下zまでのローカル変数に自動的に代入されます。
	（例）Prog "TEST",123,456,N
	　サブプログラム"TEST"の実行時には、
	　123→a、456→b、N→c、d～zは不定値となります。

	・Gosubコマンド追加しました。
	（例）Gosub A
	　Label Aから始まるプログラムを実行しReturnコマンドで復帰します。
	（例）Gosub A,123,456
	　引数もProgコマンド同様に使えますが、同じプログラム内なので大域変数と同じ扱いです。


v0.93	2016.1.10	テスト版（インタプリタのみ）
	・Dot系コマンドのエラー処理が甘かったのを修正しました。

	・1ビットバイナリー型行列を追加しました。
	　行列確保時に[.P]および[.p]を付けると1ビット行列になります。
	　1要素の取る値は0と1だけとなります。

	　C.Basicで指定できる行列の要素指定をまとめると、
	　デフォルトで行列名のアルファベットが
	　C,Bは（8ビット）バイト行列となります。値の範囲は（-128～127）です。
	　D,Wは（16ビット）ワード行列（-32768～32767）
	　I,Lは（32ビット）ロング行列（-2147483648～2147483647）

	　また、行列確保時にサフィックス指定するとデフォルトに優先して要素指定できます。
	　[.P]または[.p]で（1ビット）バイナリー行列
	　[.B]または[.b]で（8ビット）バイト行列
	　[.W]または[.w]で（16ビット）ワード行列
	　[.L]または[.l]で（32ビット）ロング行列
	　[.F]または[.f]で（64ビット）倍精度実数行列

	・Fill(コマンドを追加しました。
	　C.Basicでは、123→Mat A の形式でサポートしていた行列の全要素に同じ数値を代入する機能ですが、
	　純正Casio Basicに標準装備のコマンドがありますので追加しました。
	（例）Fill(123,Mat A)

	・Trnコマンドを追加しました。
	  転置行列に変換します。
	　純正Casio Basicとは違い、行列そのものを転置変換します。
	　（例）Trn Mat A
	行列Aを転置変換します。

	　さらに、1ビット行列は画面のVRAMと同じ構成となるので、
	　[.V]または[.v]指定するとVRAMを127行x63列の行列に割り当てて読み書き出来るようにしてみました。（暫定機能）
	　（例）{127,63}→Dim Mat G.V
	　　Mat Gにアクセスすることでその時点でのVRAMを直接読み書きできますが表示系コマンドではないので、
	　　画面表示する場合は、コマンド実行後に強制表示させる必要があります。

	　（例）{127,63}→Mat G.V
	Text 1,1,""	//　グラフィック画面選択（他のグラフィックコマンドでも可）
	1→Mat G[63,31]
	Text 1,1,""	//　グラフィック画面強制表示（他のグラフィックコマンドでも可）
	グラフィック画面の真ん中に点を打ちます。
	PxlOn 31,63と同じです。

	　（例）{127,63}→Mat G.V
	Locate 1,1,""	//　テキスト画面選択（他のテキスト系コマンドでも可）
	1→Mat G[63,31]
	Locate 1,1,""	//　テキスト画面強制表示（他のテキスト系コマンドでも可）
	テキスト画面の真ん中に点が打てます。


v0.92	2016.1.4	テスト版（インタプリタのみ）
	・ElseIfがIfの入れ子構造の中で使われた場合に期待した動作にならないバグを修正しました。
	・行頭の空白の読み飛ばしが上手く行かないところがあったのを修正しました。


v0.91	2016.1.3	テスト版（インタプリタのみ）
	・ファイル名を変更した時、および新規ファイルを作成した時にファイルリストで違うファイル名を示していたのを修正しました。

	・（テスト機能）Mat行列エディタにおいて2進数、16進数での表示ができるようになりました。
	　行列編集モードで[F5]を押すと2進数表示、[F6]で16進数表示になります。
	　10進数表示に戻すには再度[F5]/[F6]を押します。
	　ただし、2進数表示はバイト（1バイト）とワードタイプ（2バイト）の行列までです。


v0.90a	2016.1.1	テスト版（インタプリタのみ）
	・数値またはファイル名入力時にフリーズすることがあったのを修正しました。


v0.90	2015.12.31	テスト版（インタプリタのみ）
	・定数値において、C言語同様のプレフィックス(0Xまたは0B）を付けると32ビットまでの16進数、2進数表記が使用出来るようになりました。
	（例）0XFF,0B1010011

	・Mat行列初期化コマンド[[ ]]において、改行＆空白を入れることが可能になりました。
	（例）
	　[[0B11001100,
	　　0B00110011,
	　　0B11001100,
	　　0B00110011,
	　]]→Mat A.B

	・ファイルの書き換えや削除、リネームしない場合はファイルリストを再読み込みしないようにしました。
	　ファイルが変更されない場合のファイルリスト表示で必要以上に待たされることが無くなります。


v0.89	2015.12.27	テスト版（インタプリタのみ）
	・行頭に空白を入れてもエラーにならないようにしました。
	　インデントを付けて見易く出来ます。

	・ElseIfコマンドを追加しました。
	（例）
	 If A:Then
	    Locate 1,1,"A"
	 ElseIf B:Then
	    Locate 1,2,"B"
	 EndIf

	・Ifに対応するIfEndが無い場合にエラーとするかどうかをセットアップで選択出来ます。
	　セットアップでチェックをOnにすれば実行時に対応するIfEndが無いIfコマンドの箇所でエラーになります。

	・Switchコマンドを追加しました。C言語同様フォールスルー可です。ただしDefaultは最後でないと期待した動作になりません。
	　新規コマンドはSwitch、Case、Default、SwitchEndとなります。Breakは従来コマンドです。
	（例）
	  Switch A:
	    Case 1:Locate 1,1,"A"
	Break
	    Case 2:Locate 1,2,"B"
	    Case 3:Locate 1,3,"C"
	Break
	    Default
	Break
	  SwitchEnd



v0.88	2015.12.24	テスト版（インタプリタのみ）
	・カナ文字を使うとエディタがフリーズするバグを修正しました。
	・キャラクタ連続入力モードで1文字目が入力されなかったのを修正しました。
	・プログラム内でタイム変数%を変更した場合にプログラムの時間計測（TimeDsp）が不正確になるのを修正しました。

	・Locateコマンドの表示指定を追加しました。
	　コマンドの最後に[,R]で反転表示となります。
	（例）Locate 1,2,"Test",R
	　　"Test"がグラフィック座標(1,2)に反転表示で表示されます。

	・Textコマンドの表示指定を追加しました。
	　コマンドの最後に[,R]で反転表示、[,O]でOr表示、[,V]で反転Or表示となります。
	　[,N] Normal
	　[,R] Reverse
	　[,O] Or
	　[,V] reVerse or
	（例）Text 20,80,"Test",R
	　　"Test"がグラフィック座標(80,20)に反転表示で表示されます。

	・グラフィック画面にLocateと同じ文字表示をするLocateYXコマンドを追加しました。
	　座標指定はTextコマンドと同じくY座標が先になります。
	　コマンドの最後に[,R]で反転表示となります。
	（例）LocateYX 20,80,"Test",R
	　　"Test"がグラフィック座標(80,20)に反転表示で表示されます。

	・グラフィック画面のビットマップデータをビット単位で読み取るReadGraph(コマンドを追加しました。
	（書式1）ReadGraph(px1,py1,px2,py2)→Mat A
	　　グラフィック画面の(px1,py1)-(px2,py2)の範囲をMat A行列（強制的にバイト指定）に取り込みます。
	　　行列は事前に確保しておく必要はありません。自動的に適切な行列サイズで確保します。
	　　WriteGraphコマンドでそのまま使えるデータとなります。

	・ビットマップデータを表示するWriteGraphコマンドを追加しました。
	　ビットマップデータは予めMat行列に入力しておきます。
	（書式1）WriteGraph x,y,dx,dy,Mat A ,P1[,P2]
	　　グラフィック画面の座標(x,y)より幅dx、高さdyの範囲にMat Aのデータを描画します。
	　　P1はデータの表示前加工指定で[,N]でそのまま加工無し、[,R]で反転、[,M]でメッシュ加工、
	　　P2は指定無しでオーバーライト表示、[,A]でAnd表示、[,O]でOr表示、[,X]でXor表示となります。
	（例）[[1,2,4,8,16,32,64,128]]→Mat A
	　　WriteGraph 80,20, 8,8, Mat A, N
	　　グラフィック画面の座標(80,20)より斜めの線[/]が描画されます。

	（書式1）WriteGraph x,y,dx,dy,Mat A[m,n] ,P1[,P2]
	　　グラフィック画面の座標(x,y)より幅dx、高さdyの範囲にMat Aの[m,n]からのデータを描画します。
	（例）[[16,32,64,128][128,64,32,16]]→Mat A
	　　WriteGraph 80,20, 4,4, Mat A[1,1], N
	　　WriteGraph 80,24, 4,4, Mat A[2,1], N
	　　グラフィック画面の座標(80,20)より[<]の図形が描画されます。

	　　WriteGraph 80,20, 4,8, Mat A, N
	　　でも同じ結果となります。

	ビットマップデータは8ビット単位で左上が基準になります。


v0.87b	 2015.12.20	テスト版（インタプリタのみ）
	・エディタ等でのキーリピート時間の設定が出来るようになりました。
	　セットアップから指定できます。
	　Key 1st time: 25ms～1000ms (デフォルト値 500ms)
	　　リピート開始までの時間 (25ms単位)
	　Key Rep time: 25ms～500ms (デフォルト値 125ms)
	　　リピート継続時間 (25ms単位)

	・変数表示を区別しやすいように整数変数に%を付けました。


v0.87a	 2015.12.19	テスト版（インタプリタのみ）
	・新コマンドでの細かなバグ修正しました。


v0.87	2015.12.18	テスト版（インタプリタのみ）
	・エディタでG<>T切り替えを[SHIFT]-[F6]に実装しました。そのために検索[SRC]キーの割当が[F5]に移動しました。

	・RectおよびFillRectコマンドを追加しました。Dot系コマンドと同じ実座標指定となります。
	　（例）Rect 1,1,127,63
	　　　画面いっぱいに枠を描きます。
	　（例）FillRect 1,1,127,63
	　　　画面を塗り潰します。

	・グラフィックコマンドの末尾に[,C]を加えると消去します。[,X]で反転します。
	　（例）FLine 1,1,30,20,C
	　対象コマンドは、Line,FLine,Vertical,Horizontal,Circle,Rect,FillRectとなります。

	・StoPict/RclPictコマンドを内部ヒープメモリで動作するモードを追加しました。
	　セットアップにてストレージメモリとの切り替え動作になります。
	　Pictファイルの互換が無くなる代わりに速度向上しました。
	　Basic動作上の互換性は確保されていますので、Casio Basicのソースはそのままで動きます。


v0.86	2015.12.15	テスト版（インタプリタのみ）
	Casio Basic準拠のMat行列の個別初期化に対応しました。
	（例）[[1,2,3][4,5,6]]→Mat A


v0.85	2015.12.15	テスト版（インタプリタのみ）
	1/128秒単位でカウントされる時間計測用の%変数への初期化が出来るようになりました。
	（例）0→%


v0.84	2015.12.14	テスト版（インタプリタのみ）
	キャラクタ選択画面で連続入力モードを追加しました。
	[SHIFT]もしくは[F1]～[F6]を二度押しすることで連続入力モードになります。


v0.83b	 2015.12.13	テスト版（インタプリタのみ）
	SDKのコンパイルをSPEEDオプション指定に変更しました。
	v0.83比で5%程度高速化しました。


v0.83	2015.12.12	テスト版（インタプリタのみ）
	コマンド入力「CMD」画面でファンクションキーに「=>」を追加しました。
	比較演算子は[SHIFT]キーを押すと6種類全部出てきます。

	「'」（コメント)の直後が「'」（コメント)の場合を
	「'」（コメント)の直後が「/」の場合に変更しました。
	「'/」以降はコメントではなくコマンドとして実行します。
	C.Basic動作時にのみ実行するコマンドを記述できます。

	「=>」コマンドが「true/false」の「false」で終了した場合の処理を修正しました。


v0.82	2015.12.11	テスト版（インタプリタのみ）
	8文字のファイル名で保存やリネームするとファイルが壊れていたのを修正しました。

	RanInt#関数のバグを修正しました。

	ストレージメモリの空き少ない場合に保存やリネームをしようとした場合、
	既存のファイルを保護するために"Not enough SMEM"エラーメッセージを出すようにしました。
	エラーが出た場合はストレージメモリの最適化処理が必要です。

	「'」（コメント)の直後が「'」（コメント)の場合、
	「''」以降はコメントではなくコマンドとして実行します。
	C.Basic動作時にのみ実行するコマンドを記述できます。

	ライフゲーム専用コマンド、DotLife(コマンドを追加しました。
	（例）DotLife( Mat A, x1,y1,x2,y2)→Mat B
	　Mat Aの座標(x1,y1)-(x2,y2)の範囲をライフゲーム演算してMat Bに格納します。
	　Mat AとMat Bは同じサイズの行列である必要があります。
	　コマンド実行後に(x1,y1)-(x2,y2)の範囲よりもセルが広がった場合、その矩形範囲より±1の座標が整数変数に自動的に入ります。
	　整数変数L : 左端座標-1
	　整数変数R : 右端座標+1
	　整数変数T : 上端座標-1
	　整数変数B : 下端座標+1


v0.81	2015.12.9	テスト版（インタプリタのみ）
	'(コメント)の飛越先をキャッシュするようにして高速化しました。
	コメントが短い場合は効果が出ない場合があります。


v0.80	2015.12.5	テスト版（インタプリタのみ）
	インタプリタを符号無から符号有ベースに変更しました。その結果、多少高速化しました。
	それプラス、式評価の見直しで単純な式（2項までの式）を高速化しました。
	複雑な式では遅くなる場合もあります。
	Ifコマンドの飛越先をキャッシュするようにして高速化しました。
	飛越先が短い場合は効果が出ない場合があります。


v0.74	2015.11.29	テスト版（インタプリタのみ）
	アイコン文字を変更しました。
	一行の文字数が画面範囲以上になった場合にカーソル移動がバグるのを修正しました。

	（例）DotTrim(px1,py1,px2,py2)→Mat A
	　グラフィック画面からトリミング入力の場合に
	　0ではないデータの矩形領域の右上X,Yの座標が+1ずれていたのを修正しました。


v0.73	2015.11.18	テスト版（インタプリタのみ）
	文字＆数値入力時の[A<>a][CHAR]ファンクションキーの位置を調整しました。
	エディタの検索で直前にクリップ機能で範囲指定していればその範囲を検索文字列として検索します。

	DotG(→DotGet(
	DotP(→DotPut(
	コマンドの名称変更しました。
	DotPut(コマンドの動作異常を修正しました。

	新たにDotTrim( コマンドを追加しました。
	（例）DotTrim(Mat A, x1,y1,x2,y2)→Mat B
	Mat行列内の[X1,y1]-[x2,y2]範囲の0ではないデータの矩形領域をトリミングしてMat B行列にコピーします。
	コピーする行列が確保されてない場合は新たに確保されます。
	（例）DotTrim(px1,py1,px2,py2)→Mat A
	グラフィック画面からトリミング入力、
	グラフィックの(px1,py1)-(px2,py2)の範囲のドットが打たれている矩形領域をMat A行列にコピーします。
	どちらの場合も、矩形領域サイズ（Mat行列の確保サイズ）はX,Y変数に自動的に入ります。
	0ではないデータの矩形領域の右上X,Y座標は小文字変数x,yに自動的に入ります。


v0.72	2015.11.17	テスト版（インタプリタのみ）
	2バイトコマンド系文字列のサーチが上手くいかなかったバグを修正しました。
	キーバッファをクリアしてから入力するGetkey2を追加しました。
	SH3機での入力が上手くいかない場合はGetkey1の代わりにGetkey2を使用してください。


v0.71	2015.11.16	テスト版（インタプリタのみ）
	Continueモードのバグを修正しました。
	エディタでサーチ機能を追加しました。
	使用方法はCasio Basic互換です。


v0.70	2015.11.15	テスト版（インタプリタのみ）
	サブプログラムが読み込めない時のエラー処理を強化しました。
	読み込めなかったプログラム名、およびエラー箇所をエディタで示します。

	Continueモード追加しました。
	[AC]Breakでストップした後、エディタの[F6]がContメニューに変わります。
	ストップしたところ、または任意の箇所よりプログラムを再開できます。


v0.66	2015.11.14	テスト版（インタプリタのみ）
	Getkey1およびオーバーライトモードのバグを修正しました。
	Eng,Norm,Fix,Sciの読み出し対応しました。
	Engモードは変数Engで取得できます。
	返り値0：EngOff
	返り値1：EngOn

	Norm、Fix、Sci
	はそれぞれ引数に負数を指定すると現在の設定値を返します。
	()は必要はないです。

	現在の設定がNorm1の場合の返り値は、
	Norm (-1)で1
	Fix (-1)では-1
	Sci (-1)では-1

	現在の設定が　Fix 8の場合は、
	Norm (-1)で-1
	Fix (-1)では 8
	Sci (-1)では-1
	という風になります。


v0.65	2015.11.14	テスト版（インタプリタのみ）
	Mat行列の表示＆編集モードの縦横逆表示に対応しました。
	行列(m,n)および行列(x,y)表示の切り替えを追加しました。
	?コマンドのバグ修正しました。


v0.64	2015.11.13	テスト版（インタプリタのみ）
	変数およびMat行列の表示＆編集モードに全要素の一括初期化を追加しました。
	Getkeyのキーが押されるまで待つ版、Getkey1を新規追加しました。
	SDKのGetkeyと同じですがキーコードはCasio BasicのGetkey互換です。


v0.63	2015.11.12	テスト版（インタプリタのみ）
	DotP( Mat A[x,y], x1,y1, x2,y2)→Mat B
	Mat A行列の[x,y]を始点として、Mat Bの[x1,y1]-[x2,y2]の範囲にコピーします。
	Mat Bがコピー範囲が収まる広さを確保していない場合は、Mat Bに収まる範囲でコピーします。
	グラフィック画面への転送は行いません。

	DotP( Mat A[x,y], x1,y1, x2,y2)
	Mat A行列の(x,y)の要素を始点として、画面上の(px1,py1)-(px2,py2)の範囲に点を打ちます。

	DotG( px1,py1, px2,py2)→Mat A[x,y]
	画面上の(px1,py1)-(px2,py2)の範囲をMat A[x,y]を始点として取り込みます。
	指定範囲よりも行列が足りない場合は行列サイズまで取り込みます。

	行列確保で1要素のバイト数を個別に指定できるようにしました。

	{127,63}→Dim Mat A.b
	のように最後に[.b]または[.B]を付けるとバイト行列になります。
	同様に、
	[.w]または[.W]でワード行列
	[.l]または[.L]でロング行列
	[.f]または[.F]で倍精度実数行列
	実数モードでは実数行列が基本で整数モードでは4バイトロング整数が基本ですが
	これで自由なバイト構成でMat行列を確保できます。


v0.62	2015.11.11	テスト版（インタプリタのみ）
	整数変数は%、倍精度変数は#を付けると精度指定でアクセスできます。
	A%→A#
	整数変数のAより倍精度変数Aにコピーします。
	倍精度値を整数値に変換する場合、範囲に収まらない場合は0になります。

	整数の初期化で整数、倍精度、個別に指定できるようになりました。
	0→A～Zの形式に加えて、
	0→A～Z#
	倍精度変数を初期化します。
	0→A～Z%
	整数変数を初期化します。

	Mat行列の全要素の初期化に対応しました。
	0→Mat A
	Mat A行列の全要素を0で初期化します。
	左辺は任意の値で初期化できます。

	DotP(コマンドを追加しました。
	DotP(Mat A, x,y, px1,py1, px2,py2)
	Mat A行列の(x,y)の要素を始点として、画面上の(px1,py1)-(px2,py2)の範囲に点を打ちます。


v0.61	2015.11.10	テスト版（インタプリタのみ）
	Locate,Text文字列バッファオーバーフローをしないようにしました。
	1/128sのタイマーを%変数に割り当てました（暫定）
	同じ要素数、バイトサイズのMat行列同士のコピー（だけ）を追加しました。


v0.60	2015.11.9	テスト版（インタプリタのみ）
	整数版と統合しました。
	実数版との切り替えはSetupから設定するか、
	プログラムのコメントで
	'#CBINT
	または
	'#CBint
	と記述するとそれ以降のプログラムは整数モードで動きます。
	通常の実数モードに戻すには
	'#CBASIC
	または
	'#CBasic
	と記述します。
	通常変数はそれぞれのモードで独立しています。
	ただし、Mat行列は共通です。

	お気に入りモードの上下移動、およびMat行列の表示＆編集モードを追加しました。


v0.50	2015.11.7	テスト版（インタプリタのみ）
	fx-5800P準拠のお気に入りモード追加しました。
	それに伴い、設定＆変数の保存に対応しました。
	メインメモリに自動保存されます。
	ファイル表示をオリジナルの表示形式に合わせました。


v0.42	2015.11.3	テスト版（インタプリタのみ）
	Mat行列のバイト構成を一部変更しました。
	行列名のアルファベットが
	C,Bは1バイト行列となります。（-128～127）です。
	D,Wは2バイト行列です。(-32768～32767)
	I,Lは4バイト行列です。(-2147483648～2147483647)
	それ以外は従来同様実数行列です。
	大文字小文字入力での表示を変更しました。
	ファイル表示リスト順でフォルダは最後尾に表示するようにしました。


v0.41	2015.11.1	テスト版（インタプリタのみ）
	カタカナ対応しました。


v0.40	2015.10.31	テスト版（インタプリタのみ）
	入力ルーチンを2バイト対応しました。?や変数値入力で2バイト関数が使えます。
	CATALOGキーが使えなくなっていたのを修正しました。
	グラフ表示が1ドットずれていたのを修正しました。


v0.36	2015.10.27	テスト版（インタプリタのみ）
	プログラム開始時にグラフィック画面が消去されていたのを修正しました。


v0.35	2015.10.25	テスト版（インタプリタのみ）
	fx-5800P互換コマンド入力でのファンクションキー部分追加しました。


v0.34	2015.10.25	テスト版（インタプリタのみ）
	サブルーチン内でのエラー＆ブレークでエディタ画面に上手く戻れないのを修正しました。
　　　　　　　　　　　　ファイル名入力でのデフォルト入力をALPHAモードにしました。


v0.33	2015.10.24	テスト版（インタプリタのみ）
	ENGモード追加しました。
　　　　　　　　　　　　MOD()関数のバグ修正しました。
	エディタのCopy&Pasteモードのプログラムを走らせた後におかしくなる不具合修正しました。


v0.32	2015.10.20	テスト版（インタプリタのみ）
	エディタのカーソル移動をCasio Basic準拠にしました。
	エディタのカーソル形状がALPHAモードで変わらなかったバグを修正しました。


v0.30	2015.10.18	テスト版（インタプリタのみ）
	ファイルのRenameに対応しました。
	エディタにCopy&Paste追加しました
	エディタにfx-5800P準拠のコマンド選択画面を追加しました。


v0.21	2015.10.17	テスト版（インタプリタのみ）
	Plotコマンドのみだと画面表示されないバグ解消(^^；
	Plotコマンドプログラム終了時の動作改善。
	RclPictで11以上が動作しなかったバグの修正。
	指数のみ（e10等）形式入力対応。
	表示形式のNorm1,Norm2対応。
	(Norm 0～15のうち1と2はCasio Basic互換、それ以外は有効桁指定。デフォルトはNorm1。）
	?Aコマンド修正しました。


v0.20	2015.10.16	テスト版（インタプリタのみ）
	Plotコマンドの修正。
	Circleコマンド修正。
	数値表示修正＆桁数指定。(Fix,Sci,Rndコマンド追加)
	エディタでキャラクタ選択画面追加。
	その他、細かな修正。


v0.10	2015.10.12	テスト版（インタプリタのみ）
